/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./renderer.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js":
/*!******************************************************************!*\
  !*** ./node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(/*! stream */ \"stream\").Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? undefined : exports)\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/bom.js":
/*!*************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/bom.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/bom.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/builder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/builder.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = __webpack_require__(/*! xmlbuilder */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/index.js\");\n\n  defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js\").defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/builder.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/parser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/parser.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = __webpack_require__(/*! sax */ \"./node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js\");\n\n  events = __webpack_require__(/*! events */ \"events\");\n\n  bom = __webpack_require__(/*! ./bom */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/bom.js\");\n\n  processors = __webpack_require__(/*! ./processors */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/processors.js\");\n\n  setImmediate = __webpack_require__(/*! timers */ \"timers\").setImmediate;\n\n  defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js\").defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/parser.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/processors.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/processors.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/processors.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/xml2js.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/xml2js.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/defaults.js\");\n\n  builder = __webpack_require__(/*! ./builder */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/builder.js\");\n\n  parser = __webpack_require__(/*! ./parser */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/parser.js\");\n\n  processors = __webpack_require__(/*! ./processors */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/processors.js\");\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/xml2js.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/DocumentPosition.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/DocumentPosition.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/DocumentPosition.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLAttribute.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLAttribute.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLAttribute.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLCharacterData = __webpack_require__(/*! ./XMLCharacterData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js\");\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLCharacterData = __webpack_require__(/*! ./XMLCharacterData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js\");\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = __webpack_require__(/*! ./XMLDOMErrorHandler */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js\");\n\n  XMLDOMStringList = __webpack_require__(/*! ./XMLDOMStringList */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMStringList.js\");\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMImplementation.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMImplementation.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMImplementation.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMStringList.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMStringList.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMStringList.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\").isObject;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\").isObject;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\").isObject;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n\n  XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n\n  XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n\n  XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n\n  XMLNamedNodeMap = __webpack_require__(/*! ./XMLNamedNodeMap */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js\");\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocument.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocument.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\").isPlainObject;\n\n  XMLDOMImplementation = __webpack_require__(/*! ./XMLDOMImplementation */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMImplementation.js\");\n\n  XMLDOMConfiguration = __webpack_require__(/*! ./XMLDOMConfiguration */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js\");\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringifier.js\");\n\n  XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocument.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocumentCB.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocumentCB.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLDocument = __webpack_require__(/*! ./XMLDocument */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocument.js\");\n\n  XMLElement = __webpack_require__(/*! ./XMLElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js\");\n\n  XMLCData = __webpack_require__(/*! ./XMLCData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js\");\n\n  XMLComment = __webpack_require__(/*! ./XMLComment */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js\");\n\n  XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js\");\n\n  XMLText = __webpack_require__(/*! ./XMLText */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js\");\n\n  XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n\n  XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n\n  XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js\");\n\n  XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n\n  XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n\n  XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n\n  XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n\n  XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLAttribute.js\");\n\n  XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringifier.js\");\n\n  XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n\n  WriterState = __webpack_require__(/*! ./WriterState */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js\");\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocumentCB.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDummy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDummy.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDummy.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLAttribute.js\");\n\n  XMLNamedNodeMap = __webpack_require__(/*! ./XMLNamedNodeMap */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js\");\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = __webpack_require__(/*! ./XMLElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js\");\n        XMLCData = __webpack_require__(/*! ./XMLCData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js\");\n        XMLComment = __webpack_require__(/*! ./XMLComment */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js\");\n        XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n        XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js\");\n        XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js\");\n        XMLText = __webpack_require__(/*! ./XMLText */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js\");\n        XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n        XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDummy.js\");\n        NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n        XMLNodeList = __webpack_require__(/*! ./XMLNodeList */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNodeList.js\");\n        XMLNamedNodeMap = __webpack_require__(/*! ./XMLNamedNodeMap */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNamedNodeMap.js\");\n        DocumentPosition = __webpack_require__(/*! ./DocumentPosition */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/DocumentPosition.js\");\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNodeList.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNodeList.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNodeList.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLCharacterData = __webpack_require__(/*! ./XMLCharacterData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js\");\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLNode = __webpack_require__(/*! ./XMLNode */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLNode.js\");\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStreamWriter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStreamWriter.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n\n  WriterState = __webpack_require__(/*! ./WriterState */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js\");\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStreamWriter.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringifier.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringifier.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringifier.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLCharacterData = __webpack_require__(/*! ./XMLCharacterData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCharacterData.js\");\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLWriterBase.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLWriterBase.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\").assign;\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n\n  XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocType.js\");\n\n  XMLCData = __webpack_require__(/*! ./XMLCData */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLCData.js\");\n\n  XMLComment = __webpack_require__(/*! ./XMLComment */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLComment.js\");\n\n  XMLElement = __webpack_require__(/*! ./XMLElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLElement.js\");\n\n  XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLRaw.js\");\n\n  XMLText = __webpack_require__(/*! ./XMLText */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLText.js\");\n\n  XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n\n  XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDummy.js\");\n\n  XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n\n  XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n\n  XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n\n  XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n\n  WriterState = __webpack_require__(/*! ./WriterState */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js\");\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLWriterBase.js?");

/***/ }),

/***/ "./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = __webpack_require__(/*! ./Utility */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/Utility.js\"), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = __webpack_require__(/*! ./XMLDOMImplementation */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDOMImplementation.js\");\n\n  XMLDocument = __webpack_require__(/*! ./XMLDocument */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocument.js\");\n\n  XMLDocumentCB = __webpack_require__(/*! ./XMLDocumentCB */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLDocumentCB.js\");\n\n  XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n\n  XMLStreamWriter = __webpack_require__(/*! ./XMLStreamWriter */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/XMLStreamWriter.js\");\n\n  NodeType = __webpack_require__(/*! ./NodeType */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/NodeType.js\");\n\n  WriterState = __webpack_require__(/*! ./WriterState */ \"./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/WriterState.js\");\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/.pnpm/xmlbuilder@11.0.1/node_modules/xmlbuilder/lib/index.js?");

/***/ }),

/***/ "./renderer.ts":
/*!*********************!*\
  !*** ./renderer.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar electron_1 = __webpack_require__(/*! electron */ \"electron\");\r\nvar utils_1 = __webpack_require__(/*! ./src/utils */ \"./src/utils.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nvar xml2js = __webpack_require__(/*! xml2js */ \"./node_modules/.pnpm/xml2js@0.4.23/node_modules/xml2js/lib/xml2js.js\");\r\nvar interfaces_1 = __webpack_require__(/*! ./src/interfaces */ \"./src/interfaces.ts\");\r\nvar components_1 = __webpack_require__(/*! ./src/components */ \"./src/components.ts\");\r\nvar myapp_1 = __webpack_require__(/*! ./src/myapp */ \"./src/myapp.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./src/dab */ \"./src/dab.ts\");\r\nvar point_1 = __webpack_require__(/*! ./src/point */ \"./src/point.ts\");\r\nvar wire_1 = __webpack_require__(/*! ./src/wire */ \"./src/wire.ts\");\r\nvar types_1 = __webpack_require__(/*! ./src/types */ \"./src/types.ts\");\r\nvar size_1 = __webpack_require__(/*! src/size */ \"./src/size.ts\");\r\nvar ec_1 = __webpack_require__(/*! src/ec */ \"./src/ec.ts\");\r\nvar rect_1 = __webpack_require__(/*! src/rect */ \"./src/rect.ts\");\r\nvar app;\r\n//https://www.electronjs.org/docs/tutorial/security\r\nfunction createEC(name) {\r\n    return new ec_1.default(app.circuit, {\r\n        name: name,\r\n        x: app.center.x,\r\n        y: app.center.y,\r\n        onProp: function (e) {\r\n            //this happens when this component is created\r\n        }\r\n    });\r\n}\r\nfunction hookEvents() {\r\n    //ZOOM controls\r\n    utils_1.qSA('.bar-item[data-scale]').forEach(function (item) {\r\n        dab_1.aEL(item, \"click\", function (e) {\r\n            var scaleTarget = dab_1.getParentAttr(e.target, \"data-scale\"), o = dab_1.attr(scaleTarget, \"data-scale\"), m = parseFloat(o);\r\n            if (app.multiplier == m)\r\n                return;\r\n            app.setViewBox(m);\r\n            //remove all selected class\r\n            utils_1.qSA('.bar-item[data-scale].selected').forEach(function (item) {\r\n                dab_1.removeClass(item, \"selected\");\r\n            });\r\n            dab_1.toggleClass(scaleTarget, \"selected\");\r\n        }, false);\r\n    });\r\n    //Rotations\r\n    dab_1.aEL(utils_1.qS('.bar-item[rot-dir=\"left\"]'), \"click\", function () { return app.rotateEC(-45); }, false);\r\n    dab_1.aEL(utils_1.qS('.bar-item[rot-dir=\"right\"]'), \"click\", function () { return app.rotateEC(45); }, false);\r\n    //add component\r\n    dab_1.aEL(utils_1.qS('.bar-item[action=\"comp-create\"]'), \"click\", function () {\r\n        return app.circuit.add(createEC(app.prop(\"comp_option\").value), function (ec) {\r\n            app.addECtoDOM(ec);\r\n        });\r\n    }, false);\r\n    //ViewBox Reset\r\n    dab_1.aEL(utils_1.qS('.bar-item[tool=\"vb-focus\"]'), \"click\", function () { return setViewBoxOrigin(point_1.default.origin); }, false);\r\n    //File Open\r\n    dab_1.aEL(utils_1.qS('.bar-item[file=\"open\"]'), \"click\", function () {\r\n        console.log('load: ', electron_1.ipcRenderer.sendSync('openFile', \"\"));\r\n    }, false);\r\n    //Save File\r\n    dab_1.aEL(utils_1.qS('.bar-item[file=\"save\"]'), \"click\", function () { return saveCircuit(); }, false);\r\n}\r\nfunction setViewBoxOrigin(p) {\r\n    app.viewBox.x = p.x;\r\n    app.viewBox.y = p.y;\r\n    app.updateViewBox();\r\n}\r\nfunction getWireConnections(wire) {\r\n    var wireCollection = [wire], wiresFound = [], points = [], findComponents = function (bond) {\r\n        bond.to.forEach(function (b) {\r\n            var w = app.circuit.get(b.id);\r\n            if (!w)\r\n                throw \"Invalid bond connections\";\r\n            switch (b.type) {\r\n                case types_1.Type.WIRE:\r\n                    if (!wiresFound.some(function (id) { return id == b.id; })) {\r\n                        wiresFound.push(w.id);\r\n                        wireCollection.push(w);\r\n                        points.push(point_1.default.create(w.getNode(b.ndx)));\r\n                    }\r\n                    break;\r\n                case types_1.Type.EC:\r\n                    points.push(w.getNodeRealXY(b.ndx));\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    while (wireCollection.length) {\r\n        var w = wireCollection.shift();\r\n        wiresFound.push(w.id);\r\n        w.bonds.forEach(findComponents);\r\n    }\r\n    return points;\r\n}\r\nfunction registerStates() {\r\n    var showBodyAndTooltip = function (offset, label) {\r\n        var p = point_1.default.translateBy(offset, app.tooltipOfs);\r\n        app.tooltip.setVisible(true)\r\n            .move(p.x, p.y)\r\n            .setFontSize(app.tooltipFontSize())\r\n            .setText(label);\r\n    }, hideNodeTooltip = function (it) {\r\n        app.highlight.hide();\r\n        app.tooltip.setVisible(false);\r\n    }, showWireConnections = function (wire) {\r\n        app.sm.data.showWireConnections = true;\r\n        app.highlight.showConnections(getWireConnections(wire));\r\n    }, hideWireConnections = function () {\r\n        app.sm.data.showWireConnections = false;\r\n        app.highlight.hide();\r\n    };\r\n    //BOARD\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.BOARD,\r\n        overType: \"function\",\r\n        persistData: true,\r\n        data: {},\r\n        actions: {\r\n            ENTER: function (newCtx) {\r\n                //console.log('BOARD.ENTER')\r\n                app.sm.data.panningVector = void 0;\r\n                app.sm.data.selection = false;\r\n                app.selection.hide();\r\n                app.sm.data.mouseDown = false;\r\n                dab_1.removeClass(app.svgBoard, \"dragging\");\r\n            },\r\n            LEAVE: function (newCtx) {\r\n                app.topBarLeft.innerHTML = \"&nbsp;\";\r\n                //console.log('BOARD.LEAVE', newCtx)\r\n            },\r\n            OUT: function (newCtx) {\r\n                //out of any component in the board\r\n                //console.log('BOARD.OUT', newCtx)\r\n            },\r\n            OVER: function (newCtx) {\r\n                if (!newCtx.it || app.sm.data.panningVector || app.sm.data.selection || !newCtx.it)\r\n                    return;\r\n                //\r\n                switch (newCtx.over.type) {\r\n                    case \"node\":\r\n                        app.sm.transition(interfaces_1.StateType.EC_NODE, interfaces_1.ActionType.START, newCtx, {\r\n                            it: newCtx.it,\r\n                            node: newCtx.over.node\r\n                        });\r\n                        break;\r\n                    case \"line\":\r\n                        newCtx.it.editMode = true;\r\n                        app.sm.transition(interfaces_1.StateType.WIRE_LINE, interfaces_1.ActionType.START, newCtx, {\r\n                            it: newCtx.it,\r\n                            line: newCtx.over.line\r\n                        });\r\n                        break;\r\n                    case \"body\":\r\n                        app.sm.transition(interfaces_1.StateType.EC_BODY, interfaces_1.ActionType.START, newCtx, {\r\n                            it: newCtx.it\r\n                        });\r\n                        break;\r\n                }\r\n            },\r\n            MOVE: function (newCtx) {\r\n                //Board panning\r\n                if (newCtx.altKey) {\r\n                    if (app.sm.data.panningVector) {\r\n                        setViewBoxOrigin(new point_1.default(newCtx.client.x - app.sm.data.panningVector.x, newCtx.client.y - app.sm.data.panningVector.y));\r\n                    }\r\n                    return;\r\n                }\r\n                else\r\n                    app.sm.data.panningVector = void 0;\r\n                //Selection Rect\r\n                if (app.sm.data.mouseDown) {\r\n                    if (!app.sm.data.selection) {\r\n                        //start new selection\r\n                        app.sm.data.selection = true;\r\n                        app.selection.show(newCtx.offset);\r\n                        //console.log('startig: ', app.selection.rect)\r\n                    }\r\n                    else\r\n                        app.selection.calculate(newCtx.offset);\r\n                    return;\r\n                }\r\n                if (!newCtx.it)\r\n                    return;\r\n                //\r\n                switch (newCtx.over.type) {\r\n                    case \"node\":\r\n                        console.log(\"move: \" + newCtx.it.id + \" node: \" + newCtx.over.node);\r\n                        break;\r\n                    case \"line\":\r\n                        //wire should be opened here\r\n                        //newCtx.over.line is 0 when wire opened up\r\n                        app.sm.transition(interfaces_1.StateType.WIRE_LINE, interfaces_1.ActionType.START, newCtx, {\r\n                            it: newCtx.it,\r\n                            line: newCtx.over.line\r\n                        });\r\n                        break;\r\n                    case \"body\":\r\n                        //  rarely happens\t¿?\r\n                        console.log('transition on BOARD.MOVE');\r\n                        app.sm.transition(interfaces_1.StateType.EC_BODY, interfaces_1.ActionType.START, newCtx, {\r\n                            it: newCtx.it\r\n                        });\r\n                        break;\r\n                }\r\n            },\r\n            DOWN: function (newCtx) {\r\n                //Board pan\r\n                if (newCtx.altKey) {\r\n                    dab_1.addClass(app.svgBoard, \"dragging\");\r\n                    app.sm.data.panningVector = new point_1.default(newCtx.client.x - app.viewBox.x, newCtx.client.y - app.viewBox.y);\r\n                }\r\n                else {\r\n                    //Board item selection box\r\n                    app.sm.data.mouseDown = true;\r\n                }\r\n            },\r\n            UP: function (newCtx) {\r\n                app.sm.data.mouseDown = false;\r\n                if (newCtx.button == 0)\r\n                    app.execute(interfaces_1.ActionType.UNSELECT_ALL, \"\");\r\n                app.rightClick.setVisible(false);\r\n                app.sm.data.panningVector && (app.sm.data.panningVector = void 0,\r\n                    dab_1.removeClass(app.svgBoard, \"dragging\"));\r\n                if (app.sm.data.selection) {\r\n                    app.sm.data.selection = false;\r\n                    //console.log('ending: ', app.selection.rect);\r\n                    app.circuit.selectRect(app.selection.rect);\r\n                    app.selection.hide();\r\n                }\r\n            },\r\n            //transitions\r\n            START: function () {\r\n                throw 'BOARD.START ILLEGAL, to catch lose code';\r\n            },\r\n            RESUME: function () {\r\n                app.sm.data.mouseDown = false;\r\n                app.sm.data.panningVector = void 0;\r\n                app.sm.data.selection = false;\r\n                app.selection.hide();\r\n                app.highlight.hide();\r\n                hideWireConnections();\r\n            }\r\n        }\r\n    });\r\n    //EC_BODY\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.EC_BODY,\r\n        overType: \"deny\",\r\n        actions: {\r\n            MOVE: function (newCtx) {\r\n                if (app.sm.data.mouseDown\r\n                    && app.sm.data.button == 0) {\r\n                    app.sm.transition(interfaces_1.StateType.EC_DRAG, interfaces_1.ActionType.START, newCtx, {\r\n                        it: app.sm.data.it\r\n                    });\r\n                }\r\n                else {\r\n                    var ec = app.sm.data.it, node = ec.overNode(newCtx.offset, 0);\r\n                    if (node != -1) {\r\n                        app.tooltip.setVisible(false);\r\n                        app.sm.transition(interfaces_1.StateType.EC_NODE, interfaces_1.ActionType.START, newCtx, {\r\n                            it: ec,\r\n                            node: node\r\n                        });\r\n                    }\r\n                    else {\r\n                        var p = point_1.default.translateBy(newCtx.offset, app.tooltipOfs);\r\n                        app.tooltip.move(p.x, p.y);\r\n                    }\r\n                }\r\n            },\r\n            OUT: function () {\r\n                app.tooltip.setVisible(false);\r\n                app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n            },\r\n            DOWN: function (newCtx) {\r\n                app.sm.data.mouseDown = true;\r\n                app.sm.data.button = newCtx.button;\r\n            },\r\n            UP: function (newCtx) {\r\n                var _a, _b;\r\n                app.sm.data.mouseDown = false;\r\n                app.rightClick.setVisible(false);\r\n                (newCtx.button == 0) && app.execute(newCtx.ctrlKey ?\r\n                    interfaces_1.ActionType.TOGGLE_SELECT : // Ctrl+click\t=> toggle select\r\n                    interfaces_1.ActionType.SELECT, // click\t\t=> select one\r\n                [(_a = newCtx.it) === null || _a === void 0 ? void 0 : _a.id, (_b = newCtx.it) === null || _b === void 0 ? void 0 : _b.name, \"body\"].join('::'));\r\n            },\r\n            //transitions\r\n            START: function (newCtx) {\r\n                showBodyAndTooltip(newCtx.offset, app.sm.data.it.id);\r\n                app.sm.data.mouseDown = false;\r\n                app.sm.data.button = newCtx.button;\r\n            }\r\n        }\r\n    });\r\n    //EC_DRAG\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.EC_DRAG,\r\n        overType: \"deny\",\r\n        actions: {\r\n            MOVE: function (newCtx) {\r\n                var _a, _b;\r\n                this.data.dragging.forEach(function (comp) {\r\n                    var p = point_1.default.minus(newCtx.offset, comp.offset);\r\n                    comp.ec.move(p.x, p.y);\r\n                });\r\n                (((_a = app.circuit.ec) === null || _a === void 0 ? void 0 : _a.id) == app.winProps.compId) && ((_b = app.winProps.property(\"p\")) === null || _b === void 0 ? void 0 : _b.refresh());\r\n            },\r\n            OUT: function () {\r\n                //has to be empty so dragging is not STOP when passing over another component\r\n            },\r\n            UP: function (newCtx) {\r\n                dab_1.removeClass(app.svgBoard, this.data.className);\r\n                app.sm.transition(interfaces_1.StateType.EC_BODY, interfaces_1.ActionType.START, newCtx, {\r\n                    it: app.sm.data.it\r\n                });\r\n            },\r\n            //transitions\r\n            START: function (newCtx) {\r\n                var self = this, it = self.data.it, newCtxIt = newCtx.it;\r\n                if (!newCtxIt)\r\n                    throw \"EC_DRAG on undefined EC\";\r\n                !app.circuit.selectedComponents.some(function (comp) { return comp.id == newCtxIt.id; }) &&\r\n                    (app.execute(interfaces_1.ActionType.SELECT_ONLY, newCtxIt.id + \"::\" + newCtxIt.name + \"::body\"));\r\n                self.data = {\r\n                    it: it,\r\n                    className: \"dragging\",\r\n                    dragging: app.circuit.selectedComponents.map(function (comp) { return ({\r\n                        ec: comp,\r\n                        offset: point_1.default.minus(newCtx.offset, comp.p)\r\n                    }); })\r\n                };\r\n                dab_1.addClass(app.svgBoard, self.data.className);\r\n                hideNodeTooltip(newCtxIt);\r\n                app.rightClick.setVisible(false);\r\n            },\r\n        }\r\n    });\r\n    //EC_NODE\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.EC_NODE,\r\n        overType: \"deny\",\r\n        actions: {\r\n            MOVE: function (newCtx) {\r\n                var node = app.sm.data.it.overNode(newCtx.offset, 0), p = point_1.default.translateBy(newCtx.offset, app.tooltipOfs);\r\n                if (node == -1) {\r\n                    app.tooltip.setVisible(false);\r\n                    app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                }\r\n                else\r\n                    app.tooltip.move(p.x, p.y);\r\n            },\r\n            UP: function (newCtx) {\r\n                if (newCtx.ctrlKey) {\r\n                    app.tooltip.setVisible(false);\r\n                    app.sm.transition(interfaces_1.StateType.NEW_WIRE_FROM_EC, interfaces_1.ActionType.START, newCtx, {\r\n                        start: {\r\n                            it: app.sm.data.it,\r\n                            node: app.sm.data.node\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            //transitions\r\n            START: function (newCtx) {\r\n                var it = app.sm.data.it, node = app.sm.data.node, itemNode = it.getNode(node), label = itemNode.label, p = point_1.default.plus(it.p, it.rotation ? itemNode.rot : itemNode).round();\r\n                app.highlight.show(p.x, p.y, it.id, node);\r\n                showBodyAndTooltip(newCtx.offset, node + \" -\" + label);\r\n            },\r\n        }\r\n    });\r\n    //NEW_WIRE_FROM_EC\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.NEW_WIRE_FROM_EC,\r\n        overType: \"function\",\r\n        actions: {\r\n            KEY: function (code) {\r\n                var _a;\r\n                if (code == \"Escape\") {\r\n                    app.sm.data.wire.editMode = true;\r\n                    (_a = app.sm.data.selectedItem) === null || _a === void 0 ? void 0 : _a.it.select(false);\r\n                    app.highlight.hide();\r\n                    app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                }\r\n            },\r\n            UP: function (newCtx) {\r\n                var self = this, wire = self.data.wire;\r\n                if (self.data.selectedItem) {\r\n                    var destIt = self.data.selectedItem.it, destNode = self.data.selectedItem.node;\r\n                    wire.editMode = true;\r\n                    destIt.select(false);\r\n                    wire.bond(wire.last, destIt, destNode);\r\n                    app.highlight.hide();\r\n                    app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                }\r\n                else {\r\n                    //otherwise correct last node\r\n                    wire.setNode(wire.last, newCtx.offset);\r\n                    wire.appendNode(newCtx.offset);\r\n                }\r\n            },\r\n            OUT: function (newCtx) {\r\n                var _a;\r\n                if (newCtx.over.type == \"node\") { //\"node-x\"\r\n                    (_a = app.sm.data.selectedItem) === null || _a === void 0 ? void 0 : _a.it.select(false);\r\n                    app.sm.data.selectedItem = undefined;\r\n                    app.highlight.hide();\r\n                }\r\n            },\r\n            OVER: function (newCtx) {\r\n                var node = -1, pos = void 0, it = newCtx.it;\r\n                if (!it)\r\n                    return;\r\n                switch (newCtx.over.type) {\r\n                    case \"body\":\r\n                        pos = it.getNodeRealXY(node = it.findNode(newCtx.offset));\r\n                        break;\r\n                    case \"line\":\r\n                        pos = it.getNode(node = it.findLineNode(newCtx.offset, newCtx.over.line));\r\n                        break;\r\n                }\r\n                if (it.id != app.sm.data.wire.id\r\n                    && pos\r\n                    && !(it.type == types_1.Type.WIRE && (node == 0 || node == it.last))) {\r\n                    if (app.sm.data.selectedItem && app.sm.data.selectedItem.it.id != it.id) {\r\n                        app.sm.data.selectedItem.it.select(false);\r\n                    }\r\n                    (app.sm.data.selectedItem = {\r\n                        it: it,\r\n                        node: node\r\n                    }).it.select(true);\r\n                    app.highlight.show(pos.x, pos.y, it.id, node);\r\n                }\r\n            },\r\n            MOVE: function (newCtx) {\r\n                var self = this, prevNodePos = self.data.wire.getNode(self.data.wire.last - 1), r = 7, angle = Math.atan2(newCtx.offset.y - prevNodePos.y, newCtx.offset.x - prevNodePos.x), p = new point_1.default((newCtx.offset.x - r * Math.cos(angle)) | 0, (newCtx.offset.y - r * Math.sin(angle)) | 0);\r\n                self.data.wire.setNode(self.data.wire.last, p);\r\n            },\r\n            AFTER_DELETE: function (deletedId) {\r\n                if (app.sm.data.wire.id == deletedId) {\r\n                    app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                }\r\n            },\r\n            //transitions\r\n            START: function () {\r\n                var ec = app.sm.data.start.it, node = app.sm.data.start.node, pos = app.sm.data.start.fromWire ? ec.getNode(node) : ec.getNodeRealXY(node);\r\n                app.highlight.hide();\r\n                app.sm.data.wire = new wire_1.default(app.circuit, {\r\n                    points: [pos, pos]\r\n                });\r\n                app.circuit.add(app.sm.data.wire, function (wire) {\r\n                    app.addWiretoDOM(wire);\r\n                });\r\n                app.sm.data.wire.bond(0, ec, node);\r\n                app.execute(interfaces_1.ActionType.UNSELECT_ALL, \"\");\r\n                app.sm.data.selectedItem = undefined;\r\n            },\r\n        }\r\n    });\r\n    //WIRE_LINE\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.WIRE_LINE,\r\n        overType: \"deny\",\r\n        actions: {\r\n            OUT: function (newCtx) {\r\n                if (!newCtx.it || app.sm.data.node == -1) {\r\n                    app.highlight.hide();\r\n                    app.tooltip.setVisible(false);\r\n                    app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                    if (app.sm.data.showWireConnections) {\r\n                        hideWireConnections();\r\n                    }\r\n                }\r\n            },\r\n            MOVE: function (newCtx) {\r\n                if (app.sm.data.wiringFromNode)\r\n                    return;\r\n                var wire = app.sm.data.it, line = newCtx.over.line;\r\n                if (app.sm.data.showWireConnections) {\r\n                    hideWireConnections();\r\n                }\r\n                if (app.sm.data.mouseDown\r\n                    && newCtx.button == 0) {\r\n                    //node or line\r\n                    if (app.sm.data.node >= 0) {\r\n                        app.sm.transition(interfaces_1.StateType.WIRE_NODE_DRAG, interfaces_1.ActionType.START, newCtx, {\r\n                            it: app.sm.data.it,\r\n                            node: app.sm.data.node\r\n                        });\r\n                    }\r\n                    else if (!((line == 1 && wire.nodeBonds(0))\r\n                        || (line == wire.lastLine && wire.nodeBonds(wire.last)))) {\r\n                        app.sm.transition(interfaces_1.StateType.WIRE_LINE_DRAG, interfaces_1.ActionType.START, newCtx, {\r\n                            it: app.sm.data.it,\r\n                            line: line\r\n                        });\r\n                    }\r\n                    else {\r\n                        app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n                    }\r\n                    app.sm.data.mouseDown = false;\r\n                    return;\r\n                }\r\n                app.sm.data.mouseDown = false;\r\n                var node = wire.overNode(newCtx.offset, newCtx.over.line), pos = wire.getNode(node);\r\n                if (pos && !((node == 0 && wire.nodeBonds(0)) ||\r\n                    (node == wire.last && wire.nodeBonds(wire.last)))) {\r\n                    app.sm.data.node = node;\r\n                    app.highlight.show(pos.x, pos.y, wire.id, node);\r\n                }\r\n                else {\r\n                    var p = point_1.default.translateBy(newCtx.offset, app.tooltipOfs);\r\n                    !app.tooltip.move(p.x, p.y).visible\r\n                        && app.tooltip.setVisible(true);\r\n                }\r\n            },\r\n            DOWN: function (newCtx) {\r\n                app.tooltip.setVisible(false);\r\n                if (newCtx.ctrlKey) {\r\n                    var wire = app.sm.data.it;\r\n                    if (app.sm.data.node > 0 && app.sm.data.node < wire.last) {\r\n                        app.sm.data.wiringFromNode = true;\r\n                    }\r\n                    else\r\n                        showWireConnections(wire);\r\n                }\r\n                else\r\n                    app.sm.data.mouseDown = true;\r\n            },\r\n            UP: function (newCtx) {\r\n                if (app.sm.data.wiringFromNode) {\r\n                    app.sm.transition(interfaces_1.StateType.NEW_WIRE_FROM_EC, interfaces_1.ActionType.START, newCtx, {\r\n                        start: {\r\n                            it: app.sm.data.it,\r\n                            node: app.sm.data.node,\r\n                            fromWire: true\r\n                        },\r\n                    });\r\n                    return;\r\n                }\r\n                app.rightClick.setVisible(false);\r\n                (newCtx.button == 0\r\n                    && app.sm.data.mouseDown)\r\n                    && (app.sm.data.mouseDown = false,\r\n                        app.execute(newCtx.ctrlKey ?\r\n                            interfaces_1.ActionType.TOGGLE_SELECT : // Ctrl+click\t=> toggle select\r\n                            interfaces_1.ActionType.SELECT, // click\t\t=> select one\r\n                        [app.sm.data.it.id, app.sm.data.it.name, \"body\"].join('::')));\r\n                if (app.sm.data.showWireConnections) {\r\n                    hideWireConnections();\r\n                }\r\n                showBodyAndTooltip(newCtx.offset, app.sm.data.it.id);\r\n            },\r\n            //transitions\r\n            START: function (newCtx) {\r\n                app.sm.data.node = -1;\r\n                app.sm.data.mouseDown = false;\r\n                app.sm.data.showWireConnections = false;\r\n                app.sm.data.wiringFromNode = false;\r\n                showBodyAndTooltip(newCtx.offset, app.sm.data.it.id);\r\n            },\r\n        }\r\n    });\r\n    //WIRE_NODE_DRAG\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.WIRE_NODE_DRAG,\r\n        overType: \"deny\",\r\n        actions: {\r\n            KEY: function (code) {\r\n            },\r\n            MOVE: function (newCtx) {\r\n                app.sm.data.it.setNode(app.sm.data.node, newCtx.offset);\r\n                app.highlight.show(newCtx.offset.x, newCtx.offset.y, app.sm.data.it.id, app.sm.data.node);\r\n                var wire = app.sm.data.it, wireNode = app.sm.data.node;\r\n                if (newCtx.ctrlKey && (wireNode == 0 || wireNode == wire.last)) {\r\n                    var item = app.sm.data.list\r\n                        .filter(function (c) { return c.r.inside(newCtx.offset); })\r\n                        .map(function (c) {\r\n                        var node = c.it.findNode(newCtx.offset);\r\n                        return {\r\n                            it: c.it,\r\n                            node: node\r\n                        };\r\n                    })\r\n                        .filter(function (c) { return (c.node != -1)\r\n                        && !(c.it.type == types_1.Type.WIRE && (c.node == 0 || c.node == c.it.last)); })[0];\r\n                    if (item) {\r\n                        if (app.sm.data.selectedItem && app.sm.data.selectedItem.it.id != item.it.id) {\r\n                            app.sm.data.selectedItem.it.select(false);\r\n                        }\r\n                        (app.sm.data.selectedItem = item).it.select(true);\r\n                    }\r\n                    else if (app.sm.data.selectedItem) {\r\n                        app.sm.data.selectedItem.it.select(false);\r\n                    }\r\n                    app.dash.hide();\r\n                }\r\n                else\r\n                    app.dash.matchWireNode(app.sm.data.it, app.sm.data.node);\r\n            },\r\n            UP: function (newCtx) {\r\n                dab_1.removeClass(app.svgBoard, this.data.className);\r\n                app.highlight.hide();\r\n                app.dash.hide();\r\n                if (app.sm.data.selectedItem) {\r\n                    app.sm.data.selectedItem.it.select(false);\r\n                    app.sm.data.it.bond(app.sm.data.node, app.sm.data.selectedItem.it, app.sm.data.selectedItem.node);\r\n                }\r\n                else {\r\n                    app.dash.match\r\n                        && (app.dash.wire.setNode(app.dash.node, app.dash.p));\r\n                }\r\n                app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME, newCtx);\r\n            },\r\n            OUT: function () {\r\n                //has to be empty so dragging is not STOP when passing over another component\r\n            },\r\n            //transitions\r\n            START: function () {\r\n                dab_1.addClass(app.svgBoard, app.sm.data.className = \"dragging\");\r\n                app.rightClick.setVisible(false);\r\n                var screenBounds = rect_1.default.create(app.viewBox), id = app.sm.data.it.id;\r\n                app.sm.data.list = app.circuit.components\r\n                    .filter(function (item) { return item.id != id; })\r\n                    .map(function (item) {\r\n                    var r = item.rect();\r\n                    screenBounds.intersect(r);\r\n                    return {\r\n                        it: item,\r\n                        r: r\r\n                    };\r\n                }).filter(function (elem) { return !elem.r.empty; });\r\n                app.sm.data.selectedItem = undefined;\r\n                app.sm.data.it.select(false);\r\n            },\r\n        }\r\n    });\r\n    //WIRE_LINE_DRAG\r\n    app.sm.register({\r\n        key: interfaces_1.StateType.WIRE_LINE_DRAG,\r\n        overType: \"deny\",\r\n        actions: {\r\n            MOVE: function (newCtx) {\r\n                var self = this, line = self.data.line;\r\n                self.data.it.setNode(line - 1, point_1.default.minus(newCtx.offset, self.data.A));\r\n                self.data.it.setNode(line, point_1.default.minus(newCtx.offset, self.data.B));\r\n                app.dash.matchWireLine(self.data.it, line);\r\n            },\r\n            UP: function (newCtx) {\r\n                dab_1.removeClass(app.svgBoard, app.sm.data.className);\r\n                app.dash.hide();\r\n                if (app.dash.match) {\r\n                    var line = app.sm.data.line, vector = point_1.default.minus(app.dash.p, app.dash.wire.getNode(app.dash.node));\r\n                    //there's a rare exceptio here\r\n                    app.dash.wire.setNode(line - 1, point_1.default.plus(app.dash.wire.getNode(line - 1), vector));\r\n                    app.dash.wire.setNode(line, point_1.default.plus(app.dash.wire.getNode(line), vector));\r\n                }\r\n                app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME, newCtx);\r\n            },\r\n            OUT: function () {\r\n                //has to be empty so dragging is not STOP when passing over another component\r\n            },\r\n            //transitions\r\n            START: function (newCtx) {\r\n                var wire = app.sm.data.it, line = app.sm.data.line;\r\n                app.sm.data.A = point_1.default.minus(newCtx.offset, wire.getNode(line - 1));\r\n                app.sm.data.B = point_1.default.minus(newCtx.offset, wire.getNode(line));\r\n                dab_1.addClass(app.svgBoard, app.sm.data.className = \"dragging\");\r\n                app.rightClick.setVisible(false);\r\n            },\r\n        }\r\n    });\r\n}\r\nfunction readJson(path) {\r\n    var data = fs.readFileSync(path);\r\n    var json = JSON.parse(data.toString().replace(/[\\t\\r\\n]*/g, \"\"));\r\n    return json;\r\n}\r\nwindow.addEventListener(\"DOMContentLoaded\", function () {\r\n    //load DOM script HTML templates\r\n    utils_1.templatesDOM(\"viewBox01|size01|point01|baseWin01|ctxWin01|ctxItem01|propWin01\")\r\n        .then(function (templates) { return __awaiter(void 0, void 0, void 0, function () {\r\n        var json, replaceText, _i, _a, type;\r\n        return __generator(this, function (_b) {\r\n            json = readJson('./dist/data/library-circuits.v2.json');\r\n            json.forEach(function (element) {\r\n                components_1.default.register(element);\r\n            });\r\n            json = readJson('./dist/data/context-menu.json');\r\n            app = new myapp_1.MyApp({\r\n                templates: templates,\r\n                includePropsInThis: true,\r\n                props: {\r\n                    rot_lbl: {\r\n                        tag: \"#rot-lbl\"\r\n                    },\r\n                    comp_option: {\r\n                        tag: \"#comp-option\",\r\n                        onChange: function (value, where) {\r\n                            if (where != 1) // 1 == \"ui\"\r\n                                return;\r\n                            //\"value\" has the string name of the selected component\r\n                        }\r\n                    },\r\n                    cons_log: {\r\n                        tag: \"#cons-log\",\r\n                        onChange: function (value, where) {\r\n                            app.sm.log = value;\r\n                        }\r\n                    },\r\n                    theme_select: {\r\n                        tag: 'select[tool=\"theme-select\"]',\r\n                        onChange: function (value, where) {\r\n                            (where == 1) // 1 == \"ui\"\r\n                                && (document.body.className != value)\r\n                                && (document.body.className = value);\r\n                        }\r\n                    }\r\n                },\r\n                list: json\r\n            });\r\n            updateViewBox(electron_1.ipcRenderer.sendSync('get-win-size', '')); //set SVG viewBox values\r\n            app.board.appendChild(app.winProps.win); //add HtmlWindow to board\r\n            app.board.appendChild(app.rightClick.win); //add right-click window\r\n            app.svgBoard.append(app.dash.g);\r\n            app.svgBoard.append(app.selection.g);\r\n            app.svgBoard.append(app.tooltip.g); //top z-index SVG \r\n            app.svgBoard.append(app.highlight.g);\r\n            hookEvents();\r\n            registerStates();\r\n            app.sm.enabled = true;\r\n            //////////////////// TESTINGS /////////////////\r\n            //create default EC first\r\n            //app.addComponent(createEC(<string>app.prop(\"comp_option\").value));\r\n            //this's temporary, until create wire tool works\r\n            //wire.setPoints([{x:50,y:100}, {x:200,y:100}, {x:200, y:25}, {x:250,y:25}])\r\n            /*\r\n            app.addComponent(new Wire((<IItemWireOptions>{\r\n                points: <IPoint[]>[\r\n                    { x: 25, y: 50 },\r\n                    { x: 25, y: 100 },\r\n                    { x: 200, y: 100 },\r\n                    { x: 200, y: 25 },\r\n                    { x: 250, y: 25 }]\r\n            })));\r\n            */\r\n            //testings\r\n            //to debug faster\r\n            //(<any>window).win = app.winProps;\r\n            //(<any>window).combo = app.prop(\"comp_option\");\r\n            //(<any>window).board = app.board;\r\n            window.tooltip = app.tooltip;\r\n            window.rc = app.rightClick;\r\n            window.Rect = rect_1.default;\r\n            //(<any>window).compColor = app.prop(\"comp_color\");\r\n            //(<any>window).Colors = Colors;\r\n            //(<any>window).Unit = Unit;\r\n            //var u = new Unit(\"2.5mV\");\t//console testings k = new unit.constructor(\"3mW\");\r\n            //(<any>window).Prop = Prop;\r\n            //(<any>window).EcProp = EcProp;\r\n            //var p = new Prop({ tag: \"#inp02\", onChange : function(e) { console.log(e) } })\r\n            window.MyApp = app;\r\n            replaceText = function (selector, text) {\r\n                var element = document.getElementById(selector);\r\n                if (element) {\r\n                    element.innerText = text;\r\n                }\r\n            };\r\n            for (_i = 0, _a = [\"chrome\", \"node\", \"electron\"]; _i < _a.length; _i++) {\r\n                type = _a[_i];\r\n                replaceText(type + \"-version\", process.versions[type]);\r\n            }\r\n            return [2 /*return*/];\r\n        });\r\n    }); })\r\n        .catch(function (ex) {\r\n        console.log(ex);\r\n    });\r\n});\r\nfunction updateViewBox(arg) {\r\n    utils_1.qS(\"body\").style.height = arg.height + \"px\";\r\n    var mainHeight = utils_1.qS(\"body\").offsetHeight - utils_1.qS(\"body>header\").offsetHeight - utils_1.qS(\"body>footer\").offsetHeight;\r\n    utils_1.qS(\"body>main\").style.height = mainHeight + \"px\";\r\n    app.board.style.height = mainHeight + \"px\";\r\n    app.size = new size_1.default(arg.width, arg.height);\r\n    app.contentHeight = mainHeight;\r\n    app.setViewBox(undefined);\r\n}\r\nelectron_1.ipcRenderer.on('fileData', function (event, data) {\r\n    xml2js.parseString(data, { trim: true }, function (err, result) {\r\n        if (err)\r\n            console.log(err);\r\n        else\r\n            console.log(result);\r\n    });\r\n    //console.log('file content:', data)\r\n});\r\nfunction saveCircuit() {\r\n    var answer = electron_1.ipcRenderer.sendSync('saveFile', app.circuit.XML());\r\n    console.log('save: ', answer);\r\n    //for now only abort if canceled, later ask again if couldn't save because an error\r\n    app.circuit.modified = !!answer.canceled;\r\n    //\r\n    return !answer.canceled;\r\n}\r\nelectron_1.ipcRenderer.on(\"check-before-exit\", function (event, arg) {\r\n    var choice = app.circuit.modified ?\r\n        electron_1.ipcRenderer.sendSync('save-dialog', app.circuit.XML()) : 2;\r\n    if (choice == 1)\r\n        return;\r\n    else if (choice == 0) {\r\n        if (!saveCircuit())\r\n            return;\r\n    }\r\n    electron_1.ipcRenderer.send('app-quit', '');\r\n});\r\n//this's a proof of concept of how to communicate with main process, the recommended NEW way...\r\n//\tfunction updateViewBox(arg: any) built this way\r\nelectron_1.ipcRenderer.on(\"win-resize\", function (event, arg) {\r\n    updateViewBox(arg);\r\n});\r\nconsole.log(electron_1.ipcRenderer.sendSync('synchronous-message', 'ping')); // prints \"pong\"\r\nelectron_1.ipcRenderer.on('asynchronous-reply', function (event, arg) {\r\n    console.log(arg); // prints \"pong\"\r\n});\r\nelectron_1.ipcRenderer.send('asynchronous-message', 'ping');\r\n//remote.getGlobal('sharedObj')\twill be deprecated soon\r\n/*\r\nlet\r\n                a = await ipcRenderer.invoke('shared', 'app');\r\n            console.log(\"global.app =\", a);\r\n\r\n            console.log(\"global.app.circuit.modified =\",\r\n                await ipcRenderer.invoke('shared-data', ['app.circuit.modified']));\r\n\r\n            console.log(\"global.app.circuit.modified = true; =>\",\r\n                await ipcRenderer.invoke('shared-data', ['app.circuit.modified', true]));\r\n\r\n            console.log(\"global.app.circuit.modified =\",\r\n                await ipcRenderer.invoke('shared-data', ['app.circuit.modified']));\r\n\r\n                */ \r\n\n\n//# sourceURL=webpack:///./renderer.ts?");

/***/ }),

/***/ "./src/ajaxp.ts":
/*!**********************!*\
  !*** ./src/ajaxp.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ajaxp = /** @class */ (function () {\r\n    function ajaxp() {\r\n    }\r\n    ajaxp.x = function () { return window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'); };\r\n    ajaxp.query = function (data, ask) {\r\n        var query = [];\r\n        for (var key in data) {\r\n            query.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]));\r\n        }\r\n        return ((ask && query.length) ? \"?\" : \"\") + query.join(\"&\");\r\n    };\r\n    ajaxp.update = function (io, obj) {\r\n        for (var p in io) {\r\n            obj[p] = obj[p] || io[p];\r\n        }\r\n        return obj;\r\n    };\r\n    ajaxp.send = function (url, ox) {\r\n        return new Promise(function (resolve, reject) {\r\n            var x = ajaxp.x();\r\n            ox = ajaxp.update(ajaxp.xobj, ox);\r\n            x.open(ox.method, url, true);\r\n            x[ajaxp.rt] = ox.responseType;\r\n            x.onreadystatechange = function () {\r\n                var DONE = 4, // readyState 4 means the request is done.\r\n                OK = 200, // status 200 is a successful return.\r\n                NOT_MODIFIED = 304;\r\n                if (x.readyState == DONE) {\r\n                    var isJson = x[ajaxp.rt] && (x[ajaxp.rt] == \"json\");\r\n                    if (x.status === OK || x.status === NOT_MODIFIED) {\r\n                        resolve(isJson ? x.response : x.responseText);\r\n                    }\r\n                    else {\r\n                        reject({ status: x.status, d: x.response, xhr: x });\r\n                    }\r\n                }\r\n            };\r\n            if (ox.method == ajaxp.sPost) {\r\n                x.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            x.onerror = function (e) {\r\n                reject(e);\r\n            };\r\n            try {\r\n                x.send(ox.data);\r\n            }\r\n            catch (e) {\r\n                reject({ status: x.status, statusText: x.statusText, xhr: x });\r\n            }\r\n        });\r\n    };\r\n    ajaxp.get = function (url, ox) {\r\n        return (ox = ox || {}, ox.method = ajaxp.sGet, url += ajaxp.query(ox.data, true), ox.data = void 0, ajaxp.send(url, ox));\r\n    };\r\n    ajaxp.post = function (url, ox) {\r\n        return (ox = ox || {}, ox.method = ajaxp.sPost, ox.data = ajaxp.query(ox.data, false), ajaxp.send(url, ox));\r\n    };\r\n    ajaxp.sGet = \"GET\";\r\n    ajaxp.sPost = \"POST\";\r\n    ajaxp.xobj = {\r\n        method: ajaxp.sGet,\r\n        data: void 0,\r\n        responseType: \"text\"\r\n    };\r\n    ajaxp.rt = \"responseType\";\r\n    return ajaxp;\r\n}());\r\nexports.default = ajaxp;\r\n\n\n//# sourceURL=webpack:///./src/ajaxp.ts?");

/***/ }),

/***/ "./src/app-window.ts":
/*!***************************!*\
  !*** ./src/app-window.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar interfaces_1 = __webpack_require__(/*! ./interfaces */ \"./src/interfaces.ts\");\r\nvar base_window_1 = __webpack_require__(/*! ./base-window */ \"./src/base-window.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar ecprop_1 = __webpack_require__(/*! ./ecprop */ \"./src/ecprop.ts\");\r\nvar AppWindow = /** @class */ (function (_super) {\r\n    __extends(AppWindow, _super);\r\n    function AppWindow(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        var header = _this.win.querySelector(\"header\"), footer = _this.win.querySelector(\"footer\");\r\n        //\r\n        _this.titleHTML = header.children[0];\r\n        _this.titleButtons = header.children[1];\r\n        _this.settings.main = _this.win.querySelector(\"main\");\r\n        //\r\n        _this.barTitle = footer.children[0];\r\n        _this.barButtons = footer.children[1];\r\n        //set title, content, and bottom bar\r\n        _this.setTitle(_this.settings.title);\r\n        _this.setText(_this.settings.content);\r\n        _this.setBar(_this.settings.bar);\r\n        //register this to this.win\r\n        _this.win.__win = _this;\r\n        var that = _this;\r\n        //header buttons\r\n        dab_1.aEL(_this.titleButtons.querySelector('img:nth-of-type(1)'), \"click\", function (e) {\r\n            e.stopPropagation();\r\n            dab_1.toggleClass(that.win, \"collapsed\");\r\n            that.setVisible(true);\r\n        }, false);\r\n        dab_1.aEL(_this.titleButtons.querySelector('img:nth-of-type(2)'), \"click\", function (e) {\r\n            e.stopPropagation();\r\n            that.setVisible(false);\r\n        }, false);\r\n        //footer buttons\r\n        /*aEL(<HTMLElement>this.barButtons.querySelector('img:nth-of-type(1)'), \"click\", function (e: MouseEvent) {\r\n            e.stopPropagation();\r\n            that.setText(\"\")\r\n        }, false);*/\r\n        //register handlers\r\n        dragWindow(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AppWindow.prototype, \"title\", {\r\n        get: function () { return this.settings.title; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AppWindow.prototype.setTitle = function (value) {\r\n        return this.titleHTML.innerText = (this.settings.title = value), this;\r\n    };\r\n    Object.defineProperty(AppWindow.prototype, \"main\", {\r\n        //main/content\r\n        get: function () { return this.settings.main; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppWindow.prototype, \"text\", {\r\n        get: function () { return this.settings.content; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AppWindow.prototype.setText = function (value) {\r\n        return this.main.innerText = (this.settings.content = value), this;\r\n    };\r\n    AppWindow.prototype.setTextHtml = function (value) {\r\n        return (this.main.innerHTML = value, this);\r\n    };\r\n    Object.defineProperty(AppWindow.prototype, \"bar\", {\r\n        get: function () { return this.settings.bar; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AppWindow.prototype.setBar = function (value) {\r\n        return this.barTitle.innerText = (this.settings.bar = value), this;\r\n    };\r\n    AppWindow.prototype.onMouseEnter = function (e) {\r\n        this.app.topBarLeft.innerHTML = \"&nbsp;\";\r\n        this.settings.offset && (this.settings.offset = new point_1.default(e.offsetX, e.offsetY));\r\n        //console.log('IN app window', e.eventPhase, (e.target as HTMLElement).id);\r\n    };\r\n    AppWindow.prototype.onMouseLeave = function (e) {\r\n        this.renderBar(\"\");\r\n        this.app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n        //console.log('OUT of app window', e.eventPhase, (e.target as HTMLElement).id);\r\n    };\r\n    AppWindow.prototype.setVisible = function (value) {\r\n        _super.prototype.setVisible.call(this, value);\r\n        if (this.visible) {\r\n            //correct (x,y) in case of mainwindow resize moves it outside\r\n            var _a = checkPosition(this, this.x, this.y), x = _a.x, y = _a.y;\r\n            this.move(x, y);\r\n        }\r\n        return this;\r\n    };\r\n    AppWindow.prototype.renderBar = function (text) {\r\n        //this's temporary\r\n        this.setBar(\"(\" + this.x + \", \" + this.y + \") \" + text);\r\n    };\r\n    AppWindow.prototype.clear = function () {\r\n        //don't call base.clear because it clears all innerHTML\r\n        this.setTextHtml(\"\");\r\n        this.compId = \"\";\r\n        this.settings.properties = [];\r\n        this.setVisible(false);\r\n        return this;\r\n    };\r\n    /**\r\n     * @description appends to main content window an html markup text\r\n     * @param htmlContent html markup text\r\n     */\r\n    AppWindow.prototype.appendStringChild = function (htmlContent) {\r\n        this.main.appendChild(utils_1.html(htmlContent));\r\n        return this;\r\n    };\r\n    /**\r\n     * @description appends a Html element to the main content. Useful to control from outside display iniside window\r\n     * @param el Html element to be inserted in DOM\r\n     */\r\n    AppWindow.prototype.appendHtmlChild = function (el) {\r\n        el && this.main.appendChild(el);\r\n        return this;\r\n    };\r\n    AppWindow.prototype.load = function (comp) {\r\n        var _this = this;\r\n        if (!comp)\r\n            return false;\r\n        this.clear();\r\n        this.compId = comp.id;\r\n        comp.properties().forEach(function (name) {\r\n            _this.appendPropChild(new ecprop_1.default(comp, name, function onEcPropChange(value) {\r\n                console.log(this, value);\r\n            }, true));\r\n        });\r\n        this.setVisible(true);\r\n        return true;\r\n    };\r\n    AppWindow.prototype.refresh = function () {\r\n        if (!this.compId)\r\n            return;\r\n        //refresh editable properties\r\n        this.settings.properties.forEach(function (p) { return p.refresh(); });\r\n    };\r\n    AppWindow.prototype.appendPropChild = function (el) {\r\n        return el && (this.main.appendChild(el.html), this.settings.properties.push(el)), this;\r\n    };\r\n    AppWindow.prototype.property = function (name) {\r\n        return this.settings.properties.find(function (p) { return p.name == name; });\r\n    };\r\n    AppWindow.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            class: \"win props\",\r\n            templateName: \"propWin01\",\r\n            title: \"Window\",\r\n            content: \"\",\r\n            bar: \"\",\r\n            selected: false,\r\n            properties: []\r\n        });\r\n    };\r\n    return AppWindow;\r\n}(base_window_1.default));\r\nexports.default = AppWindow;\r\nfunction checkPosition(win, x, y) {\r\n    return {\r\n        x: dab_1.clamp(x, 0, win.app.size.width - win.win.offsetWidth),\r\n        y: dab_1.clamp(y, 0, win.app.contentHeight - win.win.offsetHeight)\r\n    };\r\n}\r\nfunction dragWindow(win) {\r\n    var ofsx = 0, ofsy = 0;\r\n    win.titleHTML.onmousedown = dragMouseDown;\r\n    function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        ofsx = e.offsetX;\r\n        ofsy = e.offsetY;\r\n        document.onmouseup = closeDragElement;\r\n        document.onmousemove = elementDrag;\r\n        dab_1.addClass(win.titleHTML, \"dragging\");\r\n    }\r\n    function elementDrag(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        var _a = checkPosition(win, e.clientX - ofsx - win.app.board.offsetLeft, e.clientY - ofsy - win.app.board.offsetTop), x = _a.x, y = _a.y;\r\n        win.move(x, y);\r\n    }\r\n    function closeDragElement() {\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n        dab_1.removeClass(win.titleHTML, \"dragging\");\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/app-window.ts?");

/***/ }),

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Application = void 0;\r\nvar props_1 = __webpack_require__(/*! ./props */ \"./src/props.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar Application = /** @class */ (function () {\r\n    function Application(options) {\r\n        var _this = this;\r\n        //sets defaults\r\n        this.settings = dab_1.extend({}, options);\r\n        this.settings.props = new Map();\r\n        !this.settings.templates && (this.settings.templates = {});\r\n        //this only happens when DOM is ready\r\n        Object.keys(options.props).forEach(function (key) {\r\n            if (_this.add(options.props[key], key)) {\r\n                //save all properties as a get/set property in this for direct access\r\n                options.includePropsInThis\r\n                    && dab_1.dP(_this, key, { get: function () { return _this.prop(key); } });\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(Application.prototype, \"templates\", {\r\n        //returns the registered templates, undefined if not loaded yet\r\n        get: function () { return this.settings.templates; },\r\n        set: function (value) {\r\n            this.settings.templates = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Application.prototype.has = function (key) { return this.settings.props.has(key); };\r\n    Application.prototype.add = function (propOptions, key) {\r\n        var p = new props_1.default(propOptions);\r\n        //if key is undefined, then we get it from property.id\r\n        !key && (key = p.id);\r\n        //see for duplicates\r\n        if (this.has(key))\r\n            return false;\r\n        //add it\r\n        this.settings.props.set(key, p);\r\n        return true;\r\n    };\r\n    Application.prototype.prop = function (id) {\r\n        return this.settings.props.get(id);\r\n    };\r\n    return Application;\r\n}());\r\nexports.Application = Application;\r\n\n\n//# sourceURL=webpack:///./src/app.ts?");

/***/ }),

/***/ "./src/base-window.ts":
/*!****************************!*\
  !*** ./src/base-window.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./src/item.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar BaseWindow = /** @class */ (function (_super) {\r\n    __extends(BaseWindow, _super);\r\n    function BaseWindow(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        !_this.settings.templateName && (_this.settings.templateName = \"baseWin01\");\r\n        _this.settings.win = utils_1.html(dab_1.nano(_this.app.templates[_this.settings.templateName], {\r\n            id: _this.id,\r\n            class: _this.class\r\n        }));\r\n        _this.move(_this.x, _this.y);\r\n        _this.size = _this.settings.size;\r\n        _this.setVisible(!!_this.settings.visible);\r\n        var that = _this;\r\n        dab_1.aEL(_this.win, \"mouseenter\", function (e) { return that.onMouseEnter.call(that, e); }, false);\r\n        dab_1.aEL(_this.win, \"mouseleave\", function (e) { return that.onMouseLeave.call(that, e); }, false);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BaseWindow.prototype, \"type\", {\r\n        get: function () { return types_1.Type.WIN; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseWindow.prototype, \"app\", {\r\n        get: function () { return this.settings.app; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseWindow.prototype, \"win\", {\r\n        get: function () { return this.settings.win; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseWindow.prototype, \"ClientRect\", {\r\n        get: function () {\r\n            var b = this.win.getBoundingClientRect(); //gives the DOM screen info\r\n            return dab_1.obj({\r\n                width: b.width | 0,\r\n                height: b.height | 0\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseWindow.prototype, \"box\", {\r\n        get: function () {\r\n            return this.win.getBBox();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BaseWindow.prototype.setVisible = function (value) {\r\n        return _super.prototype.setVisible.call(this, value).visible ? dab_1.removeClass(this.win, \"hide\") : dab_1.addClass(this.win, \"hide\"), this;\r\n    };\r\n    Object.defineProperty(BaseWindow.prototype, \"size\", {\r\n        get: function () { return this.settings.size; },\r\n        set: function (value) {\r\n            if (!dab_1.pojo(value)) {\r\n                return;\r\n            }\r\n            this.settings.size = {\r\n                width: Math.max(BaseWindow.minWidth, value.width | 0),\r\n                height: Math.max(BaseWindow.minHeight, value.height | 0)\r\n            };\r\n            this.win.style.width = this.size.width + \"px\";\r\n            !this.settings.ignoreHeight && (this.win.style.height = this.size.height + \"px\");\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BaseWindow.prototype.onMouseEnter = function (e) { };\r\n    BaseWindow.prototype.onMouseLeave = function (e) { };\r\n    BaseWindow.prototype.move = function (x, y) {\r\n        _super.prototype.move.call(this, x, y);\r\n        dab_1.css(this.win, {\r\n            top: this.y + \"px\",\r\n            left: this.x + \"px\"\r\n        });\r\n        return this;\r\n    };\r\n    BaseWindow.prototype.clear = function () {\r\n        return this.win.innerHTML = \"\", this;\r\n    };\r\n    BaseWindow.prototype.dispose = function () {\r\n        //release hook handlers, ...\r\n    };\r\n    BaseWindow.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            app: void 0,\r\n            size: {\r\n                width: 120,\r\n                height: 150\r\n            },\r\n            visible: false,\r\n            ignoreHeight: false\r\n        });\r\n    };\r\n    BaseWindow.minWidth = 200;\r\n    BaseWindow.minHeight = 100;\r\n    return BaseWindow;\r\n}(item_1.default));\r\nexports.default = BaseWindow;\r\n\n\n//# sourceURL=webpack:///./src/base-window.ts?");

/***/ }),

/***/ "./src/bonds.ts":
/*!**********************!*\
  !*** ./src/bonds.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Bond = void 0;\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar Bond = /** @class */ (function () {\r\n    /**\r\n     * @description implements a component bond, it must be created by default as a One-to-One bond\r\n     * @param {object} _from from\r\n     * @param {object} _to to\r\n     * @param {number} node node\r\n     * @param {any} pin pin\r\n     */\r\n    function Bond(from, to, node, pin) {\r\n        var _this = this;\r\n        //for Debugging purposes\r\n        this.toString = function () {\r\n            var fn = function (o) { return \"#\" + o.id + \" [\" + o.ndx + \"]\"; }, toStr = _this.to.map(function (b) { return fn(b); }).join(', ');\r\n            return \"from \" + fn(_this.from) + \" to \" + toStr;\r\n        };\r\n        if (!from || !to)\r\n            throw 'empty bond';\r\n        this.from = this.create(from, pin);\r\n        //by default a destination bond has at least one item\r\n        this.to = [];\r\n        //adds the first to bond\r\n        this.add(to, node);\r\n    }\r\n    Object.defineProperty(Bond.prototype, \"type\", {\r\n        get: function () { return types_1.Type.BOND; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bond.prototype, \"count\", {\r\n        get: function () { return this.to.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bond.prototype, \"link\", {\r\n        // 0>id-0(1)&id-1(12)\r\n        get: function () { return this.from.ndx + \">\" + this.to.map(function (b) { return b.id + \"(\" + b.ndx + \")\"; }).join('&'); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    //returns true if this bond is connected to an specific EC\r\n    Bond.prototype.has = function (id) { return this.to.some(function (b) { return id == b.id; }); };\r\n    Bond.prototype.get = function (id) {\r\n        return this.to.find(function (b) { return id == b.id; });\r\n    };\r\n    Bond.prototype.add = function (t, ndx) {\r\n        if (t && !this.has(t.id)) {\r\n            var b = this.create(t, ndx);\r\n            if (b.type == types_1.Type.EC || b.type == types_1.Type.WIRE) {\r\n                this.to.push(b);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Bond.prototype.create = function (ec, ndx) {\r\n        return dab_1.obj({\r\n            id: ec.id,\r\n            type: ec.type,\r\n            ndx: ndx\r\n        });\r\n    };\r\n    /**\r\n     * @description removes a bond connection from this component item\r\n     * @param {String} id id name of the destination bond\r\n     * @returns {IBondItem} removed bond item or null if none\r\n     */\r\n    Bond.prototype.remove = function (id) {\r\n        var ndx = this.to.findIndex(function (b) { return b.id == id; }), b = (ndx == -1) ? null : this.to[ndx];\r\n        //remove from array\r\n        (b != null) && this.to.splice(ndx, 1);\r\n        //return the removed bond or null\r\n        return b;\r\n    };\r\n    //for Debugging purposes\r\n    Bond.display = function (arr) { return arr.map(function (o) { return o.toString(); }); };\r\n    return Bond;\r\n}());\r\nexports.Bond = Bond;\r\n\n\n//# sourceURL=webpack:///./src/bonds.ts?");

/***/ }),

/***/ "./src/circuit.ts":
/*!************************!*\
  !*** ./src/circuit.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circuit = void 0;\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar electron_1 = __webpack_require__(/*! electron */ \"electron\");\r\nvar Circuit = /** @class */ (function () {\r\n    function Circuit(app, name, description) {\r\n        this.app = app;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.ecMap = new Map();\r\n        this.wireMap = new Map();\r\n        this.selectedComponents = [];\r\n        this.__modified = false;\r\n    }\r\n    Object.defineProperty(Circuit.prototype, \"modified\", {\r\n        get: function () { return this.__modified; },\r\n        set: function (value) {\r\n            if (value == this.__modified)\r\n                return;\r\n            electron_1.ipcRenderer.invoke('shared-data', ['app.circuit.modified', value])\r\n                .then(function (value) {\r\n                console.log('setting modified: ', value);\r\n            });\r\n            this.__modified = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Circuit.prototype, \"components\", {\r\n        //returns all components: ECs, Wires\r\n        get: function () {\r\n            return Array.from(this.ecMap.values())\r\n                .concat(Array.from(this.wireMap.values()));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Circuit.prototype.get = function (id) {\r\n        return this.ecMap.get(id) || this.wireMap.get(id);\r\n    };\r\n    Object.defineProperty(Circuit.prototype, \"ec\", {\r\n        //has value if only one comp selected, none or multiple has undefined\r\n        get: function () {\r\n            return !this.selectedComponents.length ? void 0 : this.selectedComponents[0];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    //components\r\n    Circuit.prototype.hasComponent = function (id) { return this.ecMap.has(id); };\r\n    Circuit.prototype.selectAll = function () {\r\n        this.selectedComponents = selectAll.call(this, false);\r\n    };\r\n    Circuit.prototype.deselectAll = function () {\r\n        selectAll.call(this, false);\r\n        this.selectedComponents = [];\r\n    };\r\n    Circuit.prototype.toggleSelect = function (comp) {\r\n        comp.select(!comp.selected);\r\n        this.selectedComponents = Array.from(this.ecMap.values()).filter(function (c) { return c.selected; });\r\n    };\r\n    Circuit.prototype.selectThis = function (comp) {\r\n        selectAll.call(this, false);\r\n        this.selectedComponents = [comp.select(true)];\r\n    };\r\n    Circuit.prototype.selectRect = function (rect) {\r\n        (this.selectedComponents =\r\n            Array.from(this.ecMap.values())\r\n                .filter(function (item) {\r\n                return rect.intersect(item.rect());\r\n            }))\r\n            .forEach(function (item) { return item.select(true); });\r\n    };\r\n    Circuit.prototype.deleteSelected = function () {\r\n        var _this = this;\r\n        var deletedCount = 0;\r\n        this.selectedComponents = this.selectedComponents.filter(function (c) {\r\n            if (_this.delete(c)) {\r\n                deletedCount++;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        this.modified = deletedCount != 0;\r\n        return deletedCount;\r\n    };\r\n    Circuit.prototype.delete = function (comp) {\r\n        if (comp.type == types_1.Type.WIRE ?\r\n            this.wireMap.delete(comp.id) :\r\n            this.ecMap.delete(comp.id)) {\r\n            comp.disconnect();\r\n            comp.remove();\r\n            this.modified = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Circuit.prototype.add = function (comp, fn) {\r\n        switch (comp.type) {\r\n            case types_1.Type.EC:\r\n                return !this.ecMap.has(comp.id)\r\n                    && (this.ecMap.set(comp.id, comp), fn && fn(comp), this.modified = true, true);\r\n            case types_1.Type.WIRE:\r\n                return !this.wireMap.has(comp.id)\r\n                    && (this.wireMap.set(comp.id, comp), fn && fn(comp), this.modified = true, true);\r\n        }\r\n        return false;\r\n    };\r\n    Circuit.prototype.XML = function () {\r\n        var ecs = '\\t<ecs>\\n'\r\n            + Array.from(this.ecMap.values())\r\n                .map(function (comp) { return dab_1.nano('\\t\\t<ec id=\"{id}\" name=\"{name}\" x=\"{x}\" y=\"{y}\" rot=\"{rotation}\" />\\n', comp); })\r\n                .join('')\r\n            + '\\t</ecs>\\n', wires = '\\t<wires>\\n'\r\n            + Array.from(this.wireMap.values())\r\n                .map(function (wire) { return dab_1.nano('\\t\\t<wire id=\"{id}\" points=\"{points}\" />\\n', {\r\n                id: wire.id,\r\n                points: wire.points.map(function (p) { return dab_1.nano('{x},{y}', p); })\r\n                    .join('|')\r\n            }); })\r\n                .join('')\r\n            + '\\t</wires>\\n', bonds = this.components.map(function (comp) { return !comp.bonds.length ? \"\" : dab_1.nano(\"\\t\\t<bond id=\\\"{id}\\\" d=\\\"\" + comp.bonds.map(function (o) { return o.link; }).filter(function (s) { return !!s; }).join(',') + \"\\\" />\\n\", comp); })\r\n            .filter(function (s) { return !!s; })\r\n            .join('');\r\n        return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<circuit version=\"1.1.5\">\\n'\r\n            + ecs + wires\r\n            + '\\t<bonds>\\n' + bonds + '\\t</bonds>\\n'\r\n            + '</circuit>\\n';\r\n    };\r\n    Circuit.prototype.load = function (content) {\r\n        return true;\r\n    };\r\n    return Circuit;\r\n}());\r\nexports.Circuit = Circuit;\r\nfunction selectAll(value) {\r\n    var arr = Array.from(this.ecMap.values());\r\n    arr.forEach(function (comp) { return comp.select(value); });\r\n    return arr;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/circuit.ts?");

/***/ }),

/***/ "./src/components.ts":
/*!***************************!*\
  !*** ./src/components.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar defaultIdTemplate = \"{this.name}-{base.count}\";\r\nvar defaultComponent = function (name) { return ({\r\n    name: name,\r\n    comp: {\r\n        name: name,\r\n        type: name,\r\n        meta: {\r\n            nameTmpl: defaultIdTemplate,\r\n            nodes: []\r\n        }\r\n    }\r\n}); };\r\nvar Comp = /** @class */ (function () {\r\n    function Comp(options) {\r\n        var that = this, template = options.tmpl;\r\n        //delete\r\n        delete options.tmpl;\r\n        //copy making a dupplicate\r\n        this.settings = dab_1.obj(options);\r\n        //check to see if this component derivates from a template\r\n        if (template) {\r\n            var base = Comp.find(template.name, true);\r\n            //copy SVG data\r\n            this.settings.data = base.comp.data;\r\n            //deep copy meta, it has simple object and values\r\n            this.settings.meta = JSON.parse(JSON.stringify(base.comp.meta));\r\n            //copy label if any\r\n            template.label && (this.settings.meta.label = dab_1.obj(template.label));\r\n            //update node labels\r\n            template.nodeLabels.forEach(function (lbl, ndx) {\r\n                that.settings.meta.nodes.list[ndx].label = lbl;\r\n            });\r\n        }\r\n        //set default id template if not defined\r\n        !this.settings.meta.nameTmpl && (this.settings.meta.nameTmpl = defaultIdTemplate);\r\n        //create static counter for id name template if any\r\n        var match = /\\.*Comp\\.(\\w+)\\.*/gm.exec(this.settings.meta.nameTmpl);\r\n        match &&\r\n            (Comp[match[1]] == undefined) &&\r\n            (Comp[match[1]] = this.settings.meta.countStart | 0, console.log(\"Comp.\" + match[1] + \" = \" + Comp[match[1]]));\r\n        if (!Comp.store(this.settings.name, this))\r\n            throw \"duplicated: \" + this.settings.name;\r\n    }\r\n    Object.defineProperty(Comp.prototype, \"name\", {\r\n        get: function () { return this.settings.name; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Comp.prototype, \"type\", {\r\n        get: function () { return this.settings.type; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Comp.prototype, \"data\", {\r\n        get: function () { return this.settings.data; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Comp.prototype, \"props\", {\r\n        get: function () { return this.settings.properties; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Comp.prototype, \"meta\", {\r\n        get: function () {\r\n            return this.settings.meta;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Comp.storeComponent = function (map, name, o) {\r\n        return map.set(name, dab_1.obj({\r\n            //interface IBaseComponent\r\n            count: o.meta.countStart | 0,\r\n            comp: o\r\n        }));\r\n    };\r\n    Comp.initializeComponents = function (list) {\r\n        var set = Comp.baseComps;\r\n        if (set == null) {\r\n            set = new Map();\r\n        }\r\n        list.forEach(function (c) {\r\n            Comp.storeComponent(set, c.name, c.comp);\r\n        });\r\n        return set;\r\n    };\r\n    // all base components with metadata\r\n    Comp.baseComps = Comp.initializeComponents([defaultComponent(\"tooltip\"), defaultComponent(\"wire\")]);\r\n    ////////////////////////////// STATIC ////////////////////////////////\r\n    //register a new base component template\r\n    Comp.register = function (options) { return new Comp(options); };\r\n    Comp.store = function (name, comp) {\r\n        return Comp.baseComps.has(name) ?\r\n            false :\r\n            (Comp.storeComponent(Comp.baseComps, name, comp), true);\r\n    };\r\n    Comp.has = function (name) { return Comp.baseComps.has(name); };\r\n    Comp.find = function (name, original) {\r\n        var entry = Comp.baseComps.get(name);\r\n        return (!entry || original) ? entry : dab_1.obj({\r\n            comp: entry.comp,\r\n            count: entry.count\r\n        });\r\n    };\r\n    return Comp;\r\n}());\r\nexports.default = Comp;\r\n\n\n//# sourceURL=webpack:///./src/components.ts?");

/***/ }),

/***/ "./src/context-window.ts":
/*!*******************************!*\
  !*** ./src/context-window.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_window_1 = __webpack_require__(/*! ./base-window */ \"./src/base-window.ts\");\r\nvar interfaces_1 = __webpack_require__(/*! ./interfaces */ \"./src/interfaces.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar ContextWindow = /** @class */ (function (_super) {\r\n    __extends(ContextWindow, _super);\r\n    function ContextWindow(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.settings.list = new Map();\r\n        utils_1.each(options.list, function (block, key) {\r\n            block.forEach(function (b) {\r\n                b.action = interfaces_1.ActionType[b.name];\r\n                b.enabled &&\r\n                    (b.enabled = b.enabled.map(function (stateName) { return interfaces_1.StateType[stateName]; }));\r\n            });\r\n            _this.settings.list.set(key, block);\r\n        });\r\n        _this.settings.current = \"board\";\r\n        _this.settings.offset = point_1.default.origin;\r\n        var that = _this;\r\n        //register global click event\r\n        dab_1.aEL(_this.win, \"click\", function (e) {\r\n            var self = dab_1.getParentAttr(e.target, \"data-action\"), action = dab_1.attr(self, \"data-action\") | 0, data = dab_1.attr(self, \"data-data\"), disabled = self.hasAttribute(\"disabled\"), trigger = dab_1.attr(self.parentElement, \"data-trigger\");\r\n            self\r\n                && !disabled\r\n                && (that.setVisible(false), data && (trigger += \"::\" + data), _this.app.execute(action, trigger));\r\n        }, false);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContextWindow.prototype, \"offset\", {\r\n        //client x,y where mouse right-click\r\n        get: function () { return this.settings.offset; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ContextWindow.prototype.onMouseEnter = function (e) {\r\n        //console.log('IN context window', e.eventPhase, (e.target as HTMLElement).id);\r\n        //return false;\r\n    };\r\n    ContextWindow.prototype.onMouseLeave = function (e) {\r\n        this.app.sm.transition(interfaces_1.StateType.BOARD, interfaces_1.ActionType.RESUME);\r\n    };\r\n    ContextWindow.prototype.setVisible = function (value) {\r\n        return (!_super.prototype.setVisible.call(this, value).visible && this.win.setAttribute(\"data-trigger\", \"\")), this;\r\n    };\r\n    /**\r\n     * @description store data trigger and returns the context key, must be called this.build after\r\n     * @param comp component name\r\n     * @param type component child type\r\n     * @returns {string} context key\r\n     */\r\n    ContextWindow.prototype.setTrigger = function (id, name, type, nodeOrLine) {\r\n        var ctx;\r\n        switch (type) {\r\n            case \"node\":\r\n                //case \"node-x\":\r\n                //name: \"h-node\", it can be a Wire-node or an EC-node\r\n                ctx = ((name == \"wire\") ? \"wire-\" : \"ec-\") + type;\r\n                break;\r\n            case \"board\":\r\n                ctx = type;\r\n                break;\r\n            case \"body\":\r\n                ctx = \"ec-\" + type; //comp == 'gate', 'dip'\r\n                break;\r\n            case \"line\":\r\n                ctx = \"wire-\" + type;\r\n                break;\r\n            default:\r\n                //if id && comp has a value, then type is \"body\"\r\n                if (id && name) {\r\n                    ctx = \"ec-\" + (type = \"body\");\r\n                }\r\n                else\r\n                    return void 0;\r\n        }\r\n        //let a = [id, name, type, nodeOrLine];//.filter(v => v != null);\r\n        return this.win.setAttribute(\"data-trigger\", \"\" + [id, name, type, nodeOrLine].join('::')), ctx;\r\n    };\r\n    ContextWindow.prototype.build = function (key, state, offset) {\r\n        var _this = this;\r\n        var entry = this.settings.list.get(key);\r\n        if (entry) {\r\n            this.settings.current = key;\r\n            this.clear();\r\n            var html = entry.map(function (value) {\r\n                var o = Object.create(value);\r\n                (value.enabled && !value.enabled.some(function (i) { return i == state; })) && (o.disabled = \"disabled\");\r\n                return dab_1.nano(_this.app.templates.ctxItem01, o);\r\n            }).join('');\r\n            this.win.innerHTML = html;\r\n            this.settings.offset = offset;\r\n        }\r\n        else\r\n            this.settings.offset = point_1.default.origin;\r\n        return this;\r\n    };\r\n    ContextWindow.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            class: \"win ctx\",\r\n            ignoreHeight: true,\r\n            templateName: \"ctxWin01\"\r\n        });\r\n    };\r\n    return ContextWindow;\r\n}(base_window_1.default));\r\nexports.default = ContextWindow;\r\n\n\n//# sourceURL=webpack:///./src/context-window.ts?");

/***/ }),

/***/ "./src/dab.ts":
/*!********************!*\
  !*** ./src/dab.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n//still in progress...\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createClass = exports.addClassX = exports.union = exports.unique = exports.getParentAttr = exports.condClass = exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.aCld = exports.dP = exports.rEL = exports.aEL = exports.propDescriptor = exports.attr = exports.css = exports.defEnum = exports.obj = exports.pojo = exports.isElement = exports.inherit = exports.copy = exports.extend = exports.nano = exports.splat = exports.round = exports.clamp = exports.pInt = exports.isInt = exports.isNumeric = exports.isNum = exports.isArr = exports.isObj = exports.isStr = exports.dfnd = exports.isFn = exports.typeOf = exports.empty = exports.ts = exports.consts = void 0;\r\nvar c = {\r\n    s: \"string\",\r\n    o: \"object\",\r\n    b: \"boolean\",\r\n    i: \"integer\",\r\n    n: \"number\",\r\n    a: \"array\",\r\n    fn: \"function\",\r\n    sp: \"super\",\r\n    c: \"color\",\r\n    t: \"type\",\r\n    d: \"defaut\",\r\n    u: \"undefined\",\r\n    v: \"value\",\r\n    svgNs: \"http://www.w3.org/2000/svg\"\r\n};\r\nexports.consts = c;\r\nvar ts = function (t) { return ({}).toString.call(t); };\r\nexports.ts = ts;\r\n//it can be extended later to array [] and object {}\r\nvar empty = function (s) { return typeof s == void 0 || !s || (isStr(s) && s.match(/^ *$/) !== null); };\r\nexports.empty = empty;\r\n//returned values: array, date,\tfunction, number, object, regexp, string, undefined  \tglobal,\tJSON, null\r\nexports.typeOf = function (o) { return ts(o).slice(8, -1).toLowerCase(); };\r\n//nullOrWhiteSpace(s) {\r\n//\treturn !s || s.match(/^ *$/) !== null;\r\n//},\r\nexports.isFn = function (f) { return typeof f === c.fn; };\r\n//defined\t\t\tundefined === void 0\r\nvar dfnd = function (t) { return t !== void 0 && t !== null; };\r\nexports.dfnd = dfnd;\r\nvar isStr = function (s) { return typeof s === c.s; };\r\nexports.isStr = isStr;\r\n//true for Array, pojo retruns true only for a plain old object {}\r\nexports.isObj = function (t) { return typeof t === c.o; };\r\nvar isArr = function (t) { return Array.isArray(t); }; // typeOf(t) === c.a;\r\nexports.isArr = isArr;\r\n//has to be a number (\"1\") == false\r\nexports.isNum = function (n) { return typeof n === c.n; };\r\n// (\"1\") == true\r\nexports.isNumeric = function (n) { return isNaN(n) ? !1 : (n = parseInt(n), (0 | n) === n); };\r\n//return (typeof x === dab.n) && (x % 1 === 0);\r\nexports.isInt = function (n) { return (parseFloat(n) == parseInt(n)) && !isNaN(n); };\r\n//http://speakingjs.com/es5/ch11.html#converting_to_integer\r\nexports.pInt = function (s, mag) { return parseInt(s, mag || 10); };\r\n// clamp(value, min, max) - limits value to the range min..max\r\nexports.clamp = function (v, min, max) { return (v <= min) ? min : (v >= max) ? max : v; };\r\nexports.round = function (v, decimals) {\r\n    //https://expertcodeblog.wordpress.com/2018/02/12/typescript-javascript-round-number-by-decimal-pecision/\r\n    return (decimals = decimals | 0, Number(Math.round(Number(v + \"e\" + decimals)) + \"e-\" + decimals));\r\n}; //force toArray\r\nexports.splat = function (o) { return isArr(o) ? o : (dfnd(o) ? [o] : []); };\r\nexports.nano = function (n, e) {\r\n    return n.replace(/\\{([\\w\\.]*)\\}/g, function (n, t) {\r\n        for (var r = t.split(\".\"), f = e[r.shift()], u = 0, i = r.length; i > u; u++)\r\n            f = f[r[u]];\r\n        return c.u != typeof f && null !== f ? f : \"\";\r\n    });\r\n};\r\n//copy all properties in src to obj, and returns obj\r\nexports.extend = function (obj, src) {\r\n    //!obj && (obj = {});\r\n    //const returnedTarget = Object.assign(target, source); doesn't throw error if source is undefined\r\n    //\t\tbut target has to be an object\r\n    pojo(src) && Object.keys(src).forEach(function (key) { obj[key] = src[key]; });\r\n    return obj;\r\n};\r\n//copy properties in src that exists only in obj, and returns obj\r\nexports.copy = function (obj, src) {\r\n    pojo(src) && Object.keys(obj).forEach(function (key) {\r\n        var k = src[key];\r\n        dfnd(k) && (obj[key] = k);\r\n    });\r\n    return obj;\r\n};\r\nexports.inherit = function (parent, child) {\r\n    child.prototype = Object.create(parent.prototype);\r\n    child.prototype.constructor = child;\r\n};\r\n/**\r\n * @description returns true if an element if an HTML or SVG DOM element\r\n * @param e {any} an element\r\n */\r\nexports.isElement = function (e) { return e instanceof Element || e instanceof HTMLDocument; };\r\n/* this generates a function \"inherit\" and later assigns it to the namespace \"dab\"\r\n    export function inherit(parent: any, child: any) {\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n    }\r\n     */\r\nvar pojo = function (arg) {\r\n    if (arg == null || typeof arg !== 'object') {\r\n        return false;\r\n    }\r\n    var proto = Object.getPrototypeOf(arg);\r\n    // Prototype may be null if you used `Object.create(null)`\r\n    // Checking `proto`'s constructor is safe because `getPrototypeOf()`\r\n    // explicitly crosses the boundary from object data to object metadata\r\n    return !proto || proto.constructor.name === 'Object';\r\n    //Object.getPrototypeOf([]).constructor.name == \"Array\"\r\n    //Object.getPrototypeOf({}).constructor.name == \"Object\"\r\n    //Object.getPrototypeOf(Object.create(null)) == null\r\n};\r\nexports.pojo = pojo;\r\nvar obj = function (o) {\r\n    if (!pojo(o)) {\r\n        return o;\r\n    }\r\n    var result = Object.create(null);\r\n    for (var k in o)\r\n        if (!o.hasOwnProperty || o.hasOwnProperty(k)) {\r\n            var prop = o[k];\r\n            result[k] = pojo(prop) ? obj(prop) : prop;\r\n        }\r\n    return result;\r\n};\r\nexports.obj = obj;\r\nexports.defEnum = function (e) {\r\n    for (var key in e) { //let item = e[key];\r\n        e[e[key]] = key;\r\n    }\r\n    return e;\r\n};\r\nexports.css = function (el, styles) {\r\n    if (isStr(styles))\r\n        return el.style[styles];\r\n    for (var prop in styles)\r\n        el.style[prop] = styles[prop];\r\n    return el;\r\n};\r\nexports.attr = function (el, attrs) {\r\n    if (isStr(attrs))\r\n        return el.getAttribute(attrs);\r\n    for (var attr_1 in attrs)\r\n        el.setAttribute(attr_1, attrs[attr_1]);\r\n    return el;\r\n};\r\nexports.propDescriptor = function (obj, prop) {\r\n    //Object.getOwnPropertyDescriptor(obj, prop);\r\n    var desc;\r\n    do {\r\n        desc = Object.getOwnPropertyDescriptor(obj, prop);\r\n    } while (!desc && (obj = Object.getPrototypeOf(obj)));\r\n    return desc;\r\n};\r\nexports.aEL = function (el, eventName, fn, b) { return el.addEventListener(eventName, fn, b); };\r\nexports.rEL = function (el, eventName, fn) { return el.removeEventListener(eventName, fn); };\r\nexports.dP = function (obj, propName, attrs) { return Object.defineProperty(obj, propName, attrs); };\r\nexports.aCld = function (parent, child) { return parent.appendChild(child); };\r\nexports.hasClass = function (el, className) { return el.classList.contains(className); };\r\n//className cannot contain spaces\r\nvar addClass = function (el, className) { return el.classList.add(className); };\r\nexports.addClass = addClass;\r\nvar removeClass = function (el, className) { return el.classList.remove(className); };\r\nexports.removeClass = removeClass;\r\nexports.toggleClass = function (el, className) { return el.classList.toggle(className); };\r\n//https://www.kirupa.com/html5/using_the_classlist_api.htm\r\n// d.addmany\r\n// [b] true -> addClass, [b] false -> removeClass\r\nexports.condClass = function (el, className, b) { return (b && (addClass(el, className), 1)) || removeClass(el, className); };\r\n//https://plainjs.com/javascript/traversing/match-element-selector-52/\r\n//https://plainjs.com/javascript/traversing/get-siblings-of-an-element-40/\r\nexports.getParentAttr = function (p, attr) {\r\n    while (p && !p.hasAttribute(attr))\r\n        p = p.parentElement;\r\n    return p;\r\n};\r\n//Sets\r\nvar unique = function (x) { return x.filter(function (elem, index) { return x.indexOf(elem) === index; }); };\r\nexports.unique = unique;\r\nvar union = function (x, y) { return unique(x.concat(y)); };\r\nexports.union = union;\r\nexports.addClassX = function (el, className) {\r\n    var _a;\r\n    (_a = el.classList).add.apply(_a, (className || \"\").split(' ').filter(function (v) { return !empty(v); }));\r\n    return el;\r\n};\r\n//this.win.classList.add(...(this.settings.class || \"\").split(' '));\r\nexports.createClass = function (baseClass, newClass) {\r\n    var split = function (s) { return s.split(' '); }, baseArr = split(baseClass || \"\"), newArr = split(newClass || \"\");\r\n    return union(baseArr, newArr).join(' ');\r\n};\r\n\n\n//# sourceURL=webpack:///./src/dab.ts?");

/***/ }),

/***/ "./src/ec.ts":
/*!*******************!*\
  !*** ./src/ec.ts ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar itemSolid_1 = __webpack_require__(/*! ./itemSolid */ \"./src/itemSolid.ts\");\r\nvar label_1 = __webpack_require__(/*! ./label */ \"./src/label.ts\");\r\nvar EC = /** @class */ (function (_super) {\r\n    __extends(EC, _super);\r\n    function EC(circuit, options) {\r\n        var _this = _super.call(this, circuit, options) || this;\r\n        //this ensures all path, rect, circles are inserted before the highlight circle node\r\n        //_.svg is used because _.html doesn't work for SVG\r\n        _this.g.innerHTML = _this.base.data;\r\n        //add component label if available\r\n        var createText = function (attr, text) {\r\n            var svgText = utils_1.tag(\"text\", \"\", attr);\r\n            return svgText.innerHTML = text, svgText;\r\n        };\r\n        //for labels in N555, 7408, Atmega168\r\n        if (_this.base.meta.label) {\r\n            dab_1.aCld(_this.g, createText({\r\n                x: _this.base.meta.label.x,\r\n                y: _this.base.meta.label.y,\r\n                \"class\": _this.base.meta.label.class\r\n            }, _this.base.meta.label.text));\r\n        }\r\n        //add node labels for DIP packages\r\n        if (_this.base.meta.nodes.createLabels) {\r\n            var pins = _this.count / 2;\r\n            for (var y = 55, x = 7, i = 0, factor = 20; y > 0; y -= 44, x += (factor = -factor))\r\n                for (var col = 0; col < pins; col++, i++, x += factor)\r\n                    dab_1.aCld(_this.g, createText({ x: x, y: y }, i + \"\"));\r\n        }\r\n        //create label if defined\r\n        if (_this.base.meta.labelId) {\r\n            _this.labelSVG = new label_1.Label({\r\n                fontSize: 15,\r\n                x: _this.base.meta.labelId.x,\r\n                y: _this.base.meta.labelId.y\r\n            });\r\n            _this.labelSVG.setText(_this.label);\r\n        }\r\n        _this.refresh();\r\n        //signal component creation\r\n        _this.onProp && _this.onProp({\r\n            id: \"#\" + _this.id,\r\n            args: {\r\n                id: _this.id,\r\n                name: _this.name,\r\n                x: _this.x,\r\n                y: _this.y,\r\n                rotation: _this.rotation\r\n            },\r\n            method: 'create',\r\n            where: 1 //signals it was a change inside the object\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(EC.prototype, \"last\", {\r\n        get: function () { return this.base.meta.nodes.list.length - 1; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EC.prototype, \"type\", {\r\n        get: function () { return types_1.Type.EC; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EC.prototype, \"count\", {\r\n        get: function () {\r\n            return this.base.meta.nodes.list.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    EC.prototype.rotate = function (value) {\r\n        _super.prototype.rotate.call(this, value);\r\n        return this.refresh();\r\n    };\r\n    EC.prototype.move = function (x, y) {\r\n        _super.prototype.move.call(this, x, y);\r\n        return this.refresh();\r\n    };\r\n    EC.prototype.refresh = function () {\r\n        var _this = this;\r\n        var attrs = {\r\n            transform: \"translate(\" + this.x + \" \" + this.y + \")\"\r\n        }, center = this.origin;\r\n        if (this.rotation) {\r\n            attrs.transform += \" rotate(\" + this.rotation + \" \" + center.x + \" \" + center.y + \")\";\r\n        }\r\n        dab_1.attr(this.g, attrs);\r\n        utils_1.each(this.bonds, function (b, key) {\r\n            _this.nodeRefresh(key);\r\n        });\r\n        if (this.labelSVG) {\r\n            var pos = point_1.default.plus(this.p, this.labelSVG.p);\r\n            attrs = {\r\n                transform: \"translate(\" + pos.x + \" \" + pos.y + \")\"\r\n            };\r\n            this.rotation && (center = point_1.default.minus(point_1.default.plus(this.p, center), pos),\r\n                attrs.transform += \" rotate(\" + this.rotation + \" \" + center.x + \" \" + center.y + \")\");\r\n            dab_1.attr(this.labelSVG.g, attrs);\r\n        }\r\n        return this;\r\n    };\r\n    EC.prototype.nodeRefresh = function (node) {\r\n        var _this = this;\r\n        var bond = this.nodeBonds(node), pos = this.getNode(node);\r\n        pos && bond && bond.to.forEach(function (d) {\r\n            var ic = _this.circuit.get(d.id), p = point_1.default.plus(_this.p, _this.rotation ? pos.rot : pos).round();\r\n            ic && ic.setNode(d.ndx, p); //no transform\r\n        });\r\n        return this;\r\n    };\r\n    //this returns (x, y) relative to the EC location\r\n    EC.prototype.getNode = function (pinNode) {\r\n        var pin = this.base.meta.nodes.list[pinNode], rotate = function (obj, rotation, center) {\r\n            if (!rotation)\r\n                return obj;\r\n            var rot = obj.rotateBy(center.x, center.y, -rotation);\r\n            return new point_1.default(rot.x, rot.y);\r\n        };\r\n        if (!pin)\r\n            return null;\r\n        pin.rot = rotate(new point_1.default(pin.x, pin.y), this.rotation, this.origin);\r\n        //\r\n        return dab_1.obj(pin);\r\n    };\r\n    EC.prototype.getNodeRealXY = function (node) {\r\n        var pos = this.getNode(node);\r\n        return pos ? point_1.default.plus(this.p, this.rotation ? pos.rot : pos).round() : null;\r\n    };\r\n    EC.prototype.overNode = function (p, ln) {\r\n        for (var i = 0, len = this.count; i < len; i++) {\r\n            var pin = this.getNode(i);\r\n            if (this.rotation) {\r\n                pin.x = Math.round(pin.rot.x);\r\n                pin.y = Math.round(pin.rot.y);\r\n            }\r\n            //radius 5 =>  5^2 = 25\r\n            if ((Math.pow((p.x - this.x) - pin.x, 2) + Math.pow((p.y - this.y) - pin.y, 2)) <= 25)\r\n                return i;\r\n        }\r\n        return -1;\r\n    };\r\n    EC.prototype.findNode = function (p) {\r\n        var dx = p.x - this.x, dy = p.y - this.y, rotation = -this.rotation, origin = this.origin;\r\n        for (var i = 0, list = this.base.meta.nodes.list, meta = list[i], len = list.length; i < len; meta = list[++i]) {\r\n            var nodePoint = this.rotation\r\n                ? point_1.default.prototype.rotateBy.call(meta, origin.x, origin.y, rotation)\r\n                : meta;\r\n            //radius 5 =>  5^2 = 25\r\n            if ((Math.pow(dx - nodePoint.x, 2) + Math.pow(dy - nodePoint.y, 2)) <= 25)\r\n                return i;\r\n        }\r\n        return -1;\r\n    };\r\n    EC.prototype.setNode = function (node, p) {\r\n        //State.WIRE_EDIT_NODE_DRAG tries to call this, investigate later...\r\n        throw 'somebody called me, not good!';\r\n    };\r\n    EC.prototype.valid = function (node) {\r\n        return !!this.getNode(node);\r\n    };\r\n    EC.prototype.nodeHighlightable = function (name) {\r\n        return this.valid(name); //for now all valid nodes are highlightables\r\n    };\r\n    EC.prototype.setVisible = function (value) {\r\n        _super.prototype.setVisible.call(this, value);\r\n        this.labelSVG && this.labelSVG.setVisible(value);\r\n        return this;\r\n    };\r\n    EC.prototype.remove = function () {\r\n        var _a;\r\n        //delete label if any first\r\n        this.labelSVG && ((_a = this.g.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.labelSVG.g));\r\n        _super.prototype.remove.call(this);\r\n    };\r\n    EC.prototype.afterDOMinserted = function () {\r\n        this.labelSVG && (this.g.insertAdjacentElement(\"afterend\", this.labelSVG.g), this.labelSVG.setVisible(true));\r\n    };\r\n    EC.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            class: \"ec\",\r\n        });\r\n    };\r\n    return EC;\r\n}(itemSolid_1.ItemSolid));\r\nexports.default = EC;\r\n\n\n//# sourceURL=webpack:///./src/ec.ts?");

/***/ }),

/***/ "./src/ecprop.ts":
/*!***********************!*\
  !*** ./src/ecprop.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar units_1 = __webpack_require__(/*! ./units */ \"./src/units.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\n//...still in progress ...\r\nvar EcProp = /** @class */ (function () {\r\n    function EcProp(ec, name, onChange, addLabel) {\r\n        var _this = this;\r\n        this.ec = ec;\r\n        this.name = name;\r\n        this.onChange = onChange;\r\n        var prop = ec.prop(name);\r\n        if (!prop)\r\n            throw \"invalid ec: \" + ec.id + \", prop: \" + name;\r\n        //valueObject is when not an string, and\r\n        //editable when it's a valueObject with readonly property == false\r\n        if (this.editable = (this.valueObject = typeof prop == \"object\") && !prop.readonly) {\r\n            //set Unit only if defined\r\n            (prop.valueType == \"unit\")\r\n                && (this.unit = new units_1.default(prop.value));\r\n        }\r\n        var htmlProp, propObj = (this.valueObject ? prop : void 0), that = this;\r\n        //hack to capture inside variables, not exposed outside\r\n        this.refresh = function () {\r\n            //get value from component property\r\n            if (!propObj || !propObj.value) { //to debug, catch error\r\n                console.log('hhhmmmm');\r\n            }\r\n            else {\r\n                that.propValue = propObj.value;\r\n                //set it's UI value, so far only for INPUT, SPAN\r\n                switch (htmlProp.nodeName) {\r\n                    case \"INPUT\":\r\n                        htmlProp.value = that.propValue;\r\n                        break;\r\n                    case \"SPAN\":\r\n                        htmlProp.innerText = that.propValue;\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        //create html\r\n        if (this.editable) {\r\n            //prop is an object\r\n            this.propValue = propObj.value;\r\n            switch (propObj.type) {\r\n                case \"select\":\r\n                    var options = [].map.call(propObj.options, function (element) {\r\n                        return \"<option value=\\\"\" + element + \"\\\"\" + (_this.propValue == element ? \" selected\" : \"\") + \">\" + element + \"</option>\";\r\n                    }).join('');\r\n                    htmlProp = utils_1.html(\"<select class=\\\"prop\\\">\" + options + \"</select>\");\r\n                    break;\r\n                default:\r\n                    // \"input\", \"point\"\r\n                    htmlProp = utils_1.html(\"<input class=\\\"prop\\\" value=\\\"\" + this.value + \"\\\">\");\r\n                    break;\r\n            }\r\n            //hook onchange event if editable\r\n            this.onChange && htmlProp.addEventListener('change', function () {\r\n                var _a;\r\n                //save new value\r\n                if (htmlProp.nodeName == \"INPUT\") {\r\n                    that.propValue = htmlProp.value;\r\n                }\r\n                else {\r\n                    that.propValue = htmlProp.selectedOptions[0].value;\r\n                }\r\n                //create unit if defined\r\n                that.unit && (that.unit = new units_1.default(that.propValue));\r\n                //set new value\r\n                if (propObj.isProperty) {\r\n                    //we need feed back that it was successfully set\r\n                    //  only for INPUT for now\r\n                    !propObj.setValue(that.propValue)\r\n                        && that.refresh();\r\n                }\r\n                else\r\n                    propObj.value = that.propValue;\r\n                document.activeElement.blur();\r\n                //call onchange event if any\r\n                (_a = that.onChange) === null || _a === void 0 ? void 0 : _a.call(that, that.value);\r\n            });\r\n        }\r\n        else {\r\n            this.propValue = propObj ? propObj.value : prop;\r\n            var classArr = [\"prop\"];\r\n            (this.valueObject && propObj.readonly) && classArr.push(\"readonly\");\r\n            (this.valueObject && propObj.class) && classArr.push(propObj.class);\r\n            htmlProp = utils_1.html(\"<span class=\\\"\" + classArr.join(' ') + \"\\\">\" + this.propValue + \"</span>\");\r\n        }\r\n        //create property container\r\n        this.html = document.createElement(\"div\");\r\n        this.html.classList.add(\"ec-container\");\r\n        if (addLabel) {\r\n            var label = (propObj && propObj.label) ? propObj.label : name;\r\n            this.html.appendChild(utils_1.html(\"<span class=\\\"label\\\">\" + label + \"</span>\"));\r\n        }\r\n        if (propObj && propObj.type == \"rotation\") {\r\n            var div = document.createElement(\"div\");\r\n            div.classList.add(\"rot\");\r\n            div.appendChild(utils_1.html(\"<img src=\\\"img/rot-left-16x16-p2.png\\\" rot-angle=\\\"-45\\\" title=\\\"Rotate left\\\"/>\"));\r\n            div.appendChild(htmlProp);\r\n            div.appendChild(utils_1.html(\"<img src=\\\"img/rot-right-16x16-p2.png\\\" rot-angle=\\\"45\\\" title=\\\"Rotate right\\\"/>\"));\r\n            this.html.appendChild(div);\r\n            //register click events\r\n            div.querySelectorAll(\".rot>img\").forEach((function (elem) {\r\n                dab_1.aEL(elem, \"click\", function (e) {\r\n                    console.log(e.target.getAttribute(\"rot-angle\"));\r\n                }, false);\r\n            }));\r\n        }\r\n        else\r\n            this.html.appendChild(htmlProp);\r\n    }\r\n    Object.defineProperty(EcProp.prototype, \"value\", {\r\n        get: function () {\r\n            return this.unit ?\r\n                this.unit.toString() :\r\n                this.propValue;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    EcProp.prototype.refresh = function () { }; //placeholder\r\n    return EcProp;\r\n}());\r\nexports.default = EcProp;\r\n\n\n//# sourceURL=webpack:///./src/ecprop.ts?");

/***/ }),

/***/ "./src/highlightNode.ts":
/*!******************************!*\
  !*** ./src/highlightNode.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar itemsBase_1 = __webpack_require__(/*! ./itemsBase */ \"./src/itemsBase.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar HighlightNode = /** @class */ (function (_super) {\r\n    __extends(HighlightNode, _super);\r\n    function HighlightNode(options) {\r\n        var _this = this;\r\n        //override\r\n        options.selectedNode = -1;\r\n        options.selectedId = \"\";\r\n        options.id = \"highlighNode\";\r\n        _this = _super.call(this, options) || this;\r\n        _this.g.setAttribute(\"svg-comp\", \"h-node\");\r\n        _this.mainNode = utils_1.tag(\"circle\", \"\", {\r\n            \"svg-type\": \"node\",\r\n            r: _this.radius\r\n        });\r\n        _this.g.append(_this.mainNode);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(HighlightNode.prototype, \"type\", {\r\n        get: function () { return types_1.Type.HIGHLIGHT; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HighlightNode.prototype, \"radius\", {\r\n        get: function () { return this.settings.radius; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HighlightNode.prototype, \"selectedId\", {\r\n        get: function () { return this.settings.selectedId; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HighlightNode.prototype, \"selectedNode\", {\r\n        get: function () { return this.settings.selectedNode; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    HighlightNode.prototype.setRadius = function (value) {\r\n        this.mainNode.setAttribute(\"r\", (this.settings.radius = value <= 0 ? 5 : value));\r\n        return this;\r\n    };\r\n    HighlightNode.prototype.hide = function () {\r\n        this.g.classList.add(\"hide\");\r\n        this.mainNode.classList.remove(\"hide\");\r\n        this.g.innerHTML = \"\";\r\n        this.g.append(this.mainNode);\r\n        return this;\r\n    };\r\n    HighlightNode.prototype.show = function (x, y, id, node) {\r\n        this.move(x, y);\r\n        dab_1.attr(this.mainNode, {\r\n            cx: this.x,\r\n            cy: this.y,\r\n            //\"node-x\": <any>node,\r\n            \"node\": (this.settings.selectedNode = node)\r\n        });\r\n        this.settings.selectedId = id;\r\n        this.g.classList.remove(\"hide\");\r\n        return this;\r\n    };\r\n    HighlightNode.prototype.showConnections = function (nodes) {\r\n        var _this = this;\r\n        this.mainNode.classList.add(\"hide\");\r\n        this.g.classList.remove(\"hide\");\r\n        nodes.forEach(function (p) {\r\n            var circle = utils_1.tag(\"circle\", \"\", {\r\n                cx: p.x,\r\n                cy: p.y,\r\n                r: _this.radius,\r\n                class: \"node\",\r\n            });\r\n            _this.g.append(circle);\r\n        });\r\n        return this;\r\n    };\r\n    HighlightNode.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            name: \"h-node\",\r\n            class: \"h-node\",\r\n            visible: false,\r\n            radius: 5\r\n        });\r\n    };\r\n    return HighlightNode;\r\n}(itemsBase_1.default));\r\nexports.default = HighlightNode;\r\n\n\n//# sourceURL=webpack:///./src/highlightNode.ts?");

/***/ }),

/***/ "./src/interfaces.ts":
/*!***************************!*\
  !*** ./src/interfaces.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ActionType = exports.StateType = void 0;\r\nvar StateType;\r\n(function (StateType) {\r\n    StateType[StateType[\"IDLE\"] = 1] = \"IDLE\";\r\n    StateType[StateType[\"DEFAULT\"] = 2] = \"DEFAULT\";\r\n    StateType[StateType[\"BOARD\"] = 3] = \"BOARD\";\r\n    StateType[StateType[\"EC_NODE\"] = 4] = \"EC_NODE\";\r\n    StateType[StateType[\"EC_DRAG\"] = 5] = \"EC_DRAG\";\r\n    StateType[StateType[\"EC_BODY\"] = 6] = \"EC_BODY\";\r\n    StateType[StateType[\"WIRE_NODE\"] = 7] = \"WIRE_NODE\";\r\n    StateType[StateType[\"WIRE_NODE_DRAG\"] = 8] = \"WIRE_NODE_DRAG\";\r\n    StateType[StateType[\"WIRE_LINE\"] = 9] = \"WIRE_LINE\";\r\n    StateType[StateType[\"WIRE_LINE_DRAG\"] = 10] = \"WIRE_LINE_DRAG\";\r\n    StateType[StateType[\"NEW_WIRE_FROM_EC\"] = 11] = \"NEW_WIRE_FROM_EC\";\r\n})(StateType = exports.StateType || (exports.StateType = {}));\r\nvar ActionType;\r\n(function (ActionType) {\r\n    ActionType[ActionType[\"DEFAULT\"] = 1] = \"DEFAULT\";\r\n    ActionType[ActionType[\"OVER\"] = 2] = \"OVER\";\r\n    ActionType[ActionType[\"OUT\"] = 3] = \"OUT\";\r\n    ActionType[ActionType[\"MOVE\"] = 4] = \"MOVE\";\r\n    ActionType[ActionType[\"DOWN\"] = 5] = \"DOWN\";\r\n    ActionType[ActionType[\"UP\"] = 6] = \"UP\";\r\n    ActionType[ActionType[\"ENTER\"] = 7] = \"ENTER\";\r\n    ActionType[ActionType[\"LEAVE\"] = 8] = \"LEAVE\";\r\n    //jump to leave space for basic actions\r\n    ActionType[ActionType[\"START\"] = 14] = \"START\";\r\n    ActionType[ActionType[\"RESUME\"] = 15] = \"RESUME\";\r\n    ActionType[ActionType[\"STOP\"] = 16] = \"STOP\";\r\n    ActionType[ActionType[\"HIDE_NODE\"] = 17] = \"HIDE_NODE\";\r\n    ActionType[ActionType[\"FORWARD_OVER\"] = 18] = \"FORWARD_OVER\";\r\n    ActionType[ActionType[\"KEY\"] = 40] = \"KEY\";\r\n    //unified actions\r\n    ActionType[ActionType[\"SELECT\"] = 100] = \"SELECT\";\r\n    ActionType[ActionType[\"SELECT_ONLY\"] = 101] = \"SELECT_ONLY\";\r\n    ActionType[ActionType[\"TOGGLE_SELECT\"] = 102] = \"TOGGLE_SELECT\";\r\n    ActionType[ActionType[\"SELECT_ALL\"] = 103] = \"SELECT_ALL\";\r\n    ActionType[ActionType[\"UNSELECT_ALL\"] = 104] = \"UNSELECT_ALL\";\r\n    ActionType[ActionType[\"DELETE\"] = 110] = \"DELETE\";\r\n    ActionType[ActionType[\"DELETE_SELECTED\"] = 111] = \"DELETE_SELECTED\";\r\n    ActionType[ActionType[\"DELETE_ALL\"] = 112] = \"DELETE_ALL\";\r\n    ActionType[ActionType[\"DELETE_WIRE_NODE\"] = 113] = \"DELETE_WIRE_NODE\";\r\n    ActionType[ActionType[\"DELETE_THIS_LINE\"] = 114] = \"DELETE_THIS_LINE\";\r\n    ActionType[ActionType[\"AFTER_DELETE\"] = 115] = \"AFTER_DELETE\";\r\n    ActionType[ActionType[\"SPLIT_THIS_LINE\"] = 120] = \"SPLIT_THIS_LINE\";\r\n    ActionType[ActionType[\"SHOW_PROPERTIES\"] = 200] = \"SHOW_PROPERTIES\";\r\n    ActionType[ActionType[\"BRING_TO_FRONT\"] = 201] = \"BRING_TO_FRONT\";\r\n    ActionType[ActionType[\"ROTATE_45_CLOCKWISE\"] = 202] = \"ROTATE_45_CLOCKWISE\";\r\n    ActionType[ActionType[\"ROTATE_45_COUNTER_CLOCKWISE\"] = 203] = \"ROTATE_45_COUNTER_CLOCKWISE\";\r\n    ActionType[ActionType[\"ROTATE_90_CLOCKWISE\"] = 204] = \"ROTATE_90_CLOCKWISE\";\r\n    ActionType[ActionType[\"ROTATE_90_COUNTER_CLOCKWISE\"] = 205] = \"ROTATE_90_COUNTER_CLOCKWISE\";\r\n    ActionType[ActionType[\"UNBOND\"] = 206] = \"UNBOND\";\r\n    ActionType[ActionType[\"RESUME_EDIT\"] = 207] = \"RESUME_EDIT\";\r\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\r\n/*\r\n\r\n*/ \r\n\n\n//# sourceURL=webpack:///./src/interfaces.ts?");

/***/ }),

/***/ "./src/item.ts":
/*!*********************!*\
  !*** ./src/item.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item(options) {\r\n        var _this = _super.call(this) || this;\r\n        //merge defaults and deep copy\r\n        //all default properties must be refrenced from this or this.settings\r\n        // options is for custom options only\r\n        var optionsClass = options.class || \"\";\r\n        //delete class from options so it doesn't override default settings\r\n        delete options.class;\r\n        _this.settings = dab_1.obj(dab_1.copy(_this.propertyDefaults(), options));\r\n        //update this.settings.class with unique values\r\n        _this.settings.class = dab_1.unique((_this.class + \" \" + optionsClass).split(' ')).join(' ');\r\n        //fix (x,y) coordinates if wrongly initially provided\r\n        _this.settings.x = _this.settings.x || 0;\r\n        _this.settings.y = _this.settings.y || 0;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"name\", {\r\n        get: function () { return this.settings.name; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"id\", {\r\n        get: function () { return this.settings.id; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"x\", {\r\n        get: function () { return this.settings.x; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"y\", {\r\n        get: function () { return this.settings.y; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"p\", {\r\n        get: function () { return new point_1.default(this.x, this.y); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"class\", {\r\n        get: function () { return this.settings.class; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"visible\", {\r\n        get: function () { return this.settings.visible; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Item.prototype.setVisible = function (value) {\r\n        this.settings.visible = !!value;\r\n        return this;\r\n    };\r\n    Item.prototype.move = function (x, y) {\r\n        this.settings.x = x | 0;\r\n        this.settings.y = y | 0;\r\n        return this;\r\n    };\r\n    Item.prototype.movePoint = function (p) {\r\n        return this.move(p.x, p.y);\r\n    };\r\n    Item.prototype.translate = function (dx, dy) {\r\n        return this.move(this.x + (dx | 0), this.y + (dy | 0));\r\n    };\r\n    Item.prototype.propertyDefaults = function () {\r\n        return {\r\n            id: \"\",\r\n            name: \"\",\r\n            x: 0,\r\n            y: 0,\r\n            class: \"\",\r\n            visible: true,\r\n        };\r\n    };\r\n    return Item;\r\n}(types_1.TypedClass));\r\nexports.default = Item;\r\n\n\n//# sourceURL=webpack:///./src/item.ts?");

/***/ }),

/***/ "./src/itemSolid.ts":
/*!**************************!*\
  !*** ./src/itemSolid.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ItemSolid = exports.RotationInjector = void 0;\r\nvar itemsBoard_1 = __webpack_require__(/*! ./itemsBoard */ \"./src/itemsBoard.ts\");\r\nvar rect_1 = __webpack_require__(/*! ./rect */ \"./src/rect.ts\");\r\nvar size_1 = __webpack_require__(/*! ./size */ \"./src/size.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar RotationInjector = /** @class */ (function (_super) {\r\n    __extends(RotationInjector, _super);\r\n    function RotationInjector(ec, name) {\r\n        return _super.call(this, ec, name, true) || this;\r\n    }\r\n    Object.defineProperty(RotationInjector.prototype, \"type\", {\r\n        get: function () { return \"rotation\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RotationInjector.prototype, \"value\", {\r\n        get: function () { return this.ec[this.name] + \"\\u00B0\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RotationInjector.prototype.setValue = function (val) {\r\n        return false;\r\n    };\r\n    return RotationInjector;\r\n}(itemsBoard_1.PropertyInjector));\r\nexports.RotationInjector = RotationInjector;\r\n//ItemBoard->ItemSolid->EC\r\nvar ItemSolid = /** @class */ (function (_super) {\r\n    __extends(ItemSolid, _super);\r\n    function ItemSolid(circuit, options) {\r\n        var _this = _super.call(this, circuit, options) || this;\r\n        //I've to set new properties always, because super just copy defaults()\r\n        //later override method propertyDefaults()\r\n        _this.settings.rotation = point_1.default.validateRotation(options.rotation);\r\n        return _this;\r\n    }\r\n    ItemSolid.prototype.windowProperties = function () { return _super.prototype.windowProperties.call(this).concat([\"rotation\"]); };\r\n    ItemSolid.prototype.prop = function (propName) {\r\n        //inject available properties if called\r\n        switch (propName) {\r\n            case \"rotation\":\r\n                return new RotationInjector(this, propName);\r\n        }\r\n        return _super.prototype.prop.call(this, propName);\r\n    };\r\n    Object.defineProperty(ItemSolid.prototype, \"rotation\", {\r\n        get: function () { return this.settings.rotation; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ItemSolid.prototype.rotate = function (value) {\r\n        if (this.settings.rotation != (value = point_1.default.validateRotation(value))) {\r\n            //set new value\r\n            this.settings.rotation = value;\r\n            //trigger property changed if applicable\r\n            this.onProp && this.onProp({\r\n                id: \"#\" + this.id,\r\n                value: this.rotation,\r\n                prop: \"rotate\",\r\n                where: 1 //signals it was a change inside the object\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    ItemSolid.prototype.rect = function () {\r\n        var size = size_1.default.create(this.box), p = this.p;\r\n        if (this.rotation) {\r\n            //rotate (0,0) (width,0) (width,height) (0,height) and get the boundaries respectivelly to the location (x,y)\r\n            var origin_1 = this.origin, angle_1 = -this.rotation, points = [[0, 0], [size.width, 0], [0, size.height], [size.width, size.height]]\r\n                .map(function (p) { return new point_1.default(p[0], p[1]).rotateBy(origin_1.x, origin_1.y, angle_1); }), x = Math.min.apply(Math, points.map(function (a) { return a.x; })), y = Math.min.apply(Math, points.map(function (a) { return a.y; })), w = Math.max.apply(Math, points.map(function (a) { return a.x; })), h = Math.max.apply(Math, points.map(function (a) { return a.y; }));\r\n            return new rect_1.default(Math.round(p.x + x), Math.round(p.y + y), Math.round(w - x), Math.round(h - y));\r\n        }\r\n        return new rect_1.default(p.x, p.y, size.width, size.height);\r\n    };\r\n    return ItemSolid;\r\n}(itemsBoard_1.ItemBoard));\r\nexports.ItemSolid = ItemSolid;\r\n\n\n//# sourceURL=webpack:///./src/itemSolid.ts?");

/***/ }),

/***/ "./src/itemsBase.ts":
/*!**************************!*\
  !*** ./src/itemsBase.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar item_1 = __webpack_require__(/*! ./item */ \"./src/item.ts\");\r\nvar rect_1 = __webpack_require__(/*! ./rect */ \"./src/rect.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar ItemBase = /** @class */ (function (_super) {\r\n    __extends(ItemBase, _super);\r\n    function ItemBase(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        var classArr = dab_1.isStr(_this.class) ? _this.class.split(' ') : [];\r\n        //prepare class names\r\n        !_this.settings.visible && (classArr.push(\"hide\"));\r\n        //create main container\r\n        _this.settings.g = utils_1.tag(\"g\", _this.settings.id, {\r\n            class: (_this.settings.class = classArr.join(' '))\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ItemBase.prototype, \"g\", {\r\n        get: function () { return this.settings.g; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBase.prototype, \"ClientRect\", {\r\n        get: function () {\r\n            var b = this.g.getBoundingClientRect(); //gives the DOM screen info\r\n            return dab_1.obj({\r\n                width: b.width | 0,\r\n                height: b.height | 0\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBase.prototype, \"box\", {\r\n        get: function () { return this.g.getBBox(); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBase.prototype, \"origin\", {\r\n        get: function () {\r\n            var b = this.box;\r\n            return new point_1.default((b.x + b.width / 2) | 0, (b.y + b.height / 2) | 0);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ItemBase.prototype.rect = function () {\r\n        return new rect_1.default(this.p.x, this.p.y, this.box.width, this.box.height);\r\n    };\r\n    ItemBase.prototype.setVisible = function (value) {\r\n        _super.prototype.setVisible.call(this, value);\r\n        this.visible ? dab_1.removeClass(this.g, \"hide\") : dab_1.addClass(this.g, \"hide\");\r\n        return this;\r\n    };\r\n    ItemBase.prototype.remove = function () {\r\n        var _a;\r\n        (_a = this.g.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.g);\r\n    };\r\n    ItemBase.prototype.afterDOMinserted = function () { };\r\n    return ItemBase;\r\n}(item_1.default));\r\nexports.default = ItemBase;\r\n\n\n//# sourceURL=webpack:///./src/itemsBase.ts?");

/***/ }),

/***/ "./src/itemsBoard.ts":
/*!***************************!*\
  !*** ./src/itemsBoard.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BondsInjector = exports.IdInjector = exports.StringInjector = exports.PositionInjector = exports.PointInjector = exports.PropertyInjector = exports.ItemBoard = void 0;\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar bonds_1 = __webpack_require__(/*! ./bonds */ \"./src/bonds.ts\");\r\nvar itemsBase_1 = __webpack_require__(/*! ./itemsBase */ \"./src/itemsBase.ts\");\r\nvar components_1 = __webpack_require__(/*! ./components */ \"./src/components.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\n//ItemBoard->Wire\r\nvar ItemBoard = /** @class */ (function (_super) {\r\n    __extends(ItemBoard, _super);\r\n    function ItemBoard(circuit, options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.circuit = circuit;\r\n        var base = components_1.default.find(_this.name, true), regex = /(?:{([^}]+?)})+/g, that = _this;\r\n        if (!base || !_this.circuit)\r\n            throw \"cannot create component: \" + _this.name;\r\n        //save base data\r\n        _this.settings.base = base.comp;\r\n        //global component count incremented\r\n        _this.settings.id = _this.base.name + \"-\" + base.count;\r\n        //use template to create label according to defined strategy\r\n        _this.label = base.comp.meta.nameTmpl.replace(regex, function (match, group) {\r\n            var arr = group.split('.'), getRoot = function (name) {\r\n                //valid entry points\r\n                switch (name) {\r\n                    case \"this\": return that;\r\n                    case \"base\": return base;\r\n                    case \"Comp\": return components_1.default;\r\n                }\r\n            }, rootName = arr.shift() || \"\", rootRef = getRoot(rootName), prop = arr.pop(), result;\r\n            while (rootRef && arr.length)\r\n                rootRef = rootRef[arr.shift()];\r\n            if (rootRef == undefined || (result = rootRef[prop]) == undefined)\r\n                throw \"invalid label template\";\r\n            //increment counter only for static properties\r\n            (rootName == \"Comp\") && dab_1.isNum(result) && (rootRef[prop] = result + 1);\r\n            return result;\r\n        });\r\n        base.count++;\r\n        //deep copy component properties\r\n        _this.settings.props = dab_1.obj(base.comp.props);\r\n        //add properties to DOM\r\n        dab_1.attr(_this.g, {\r\n            id: _this.id,\r\n            \"svg-comp\": _this.base.type,\r\n        });\r\n        return _this;\r\n        //this still doesn't work to get all overridable properties ¿?\r\n        //properties still cannot access super value\r\n        //(<any>this.settings).__selected = dab.propDescriptor(this, \"selected\");\r\n    }\r\n    Object.defineProperty(ItemBoard.prototype, \"base\", {\r\n        get: function () { return this.settings.base; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBoard.prototype, \"onProp\", {\r\n        get: function () { return this.settings.onProp; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBoard.prototype, \"selected\", {\r\n        get: function () { return this.settings.selected; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemBoard.prototype, \"bonds\", {\r\n        get: function () { return this.settings.bonds; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ItemBoard.prototype.select = function (value) {\r\n        if (this.selected != value) {\r\n            //set new value\r\n            this.settings.selected = value;\r\n            //add class if selected\r\n            dab_1.condClass(this.g, \"selected\", this.selected);\r\n            //trigger property changed if applicable\r\n            this.onProp && this.onProp({\r\n                id: \"#\" + this.id,\r\n                value: this.selected,\r\n                prop: \"selected\",\r\n                where: 1 //signals it was a change inside the object\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    ItemBoard.prototype.move = function (x, y) {\r\n        _super.prototype.move.call(this, x, y);\r\n        //trigger property changed if applicable\r\n        this.onProp && this.onProp({\r\n            id: \"#\" + this.id,\r\n            args: {\r\n                x: this.x,\r\n                y: this.y\r\n            },\r\n            method: 'move',\r\n            where: 1 //signals it was a change inside the object\r\n        });\r\n        return this; //for object chaining\r\n    };\r\n    ItemBoard.prototype.setOnProp = function (value) {\r\n        dab_1.isFn(value) && (this.settings.onProp = value);\r\n        return this;\r\n    };\r\n    //properties available to show up in property window\r\n    ItemBoard.prototype.windowProperties = function () { return [\"id\", \"p\", \"bonds\"]; };\r\n    ItemBoard.prototype.properties = function () {\r\n        return this.windowProperties().concat(utils_1.map(this.settings.props, function (value, key) { return key; }));\r\n    };\r\n    ItemBoard.prototype.prop = function (propName) {\r\n        //inject available properties if called\r\n        switch (propName) {\r\n            case \"id\":\r\n                return new IdInjector(this);\r\n            case \"p\":\r\n                return new PositionInjector(this);\r\n            case \"bonds\":\r\n                return new BondsInjector(this);\r\n        }\r\n        return this.settings.props[propName];\r\n    };\r\n    //poly.bond(0, ec, 1)\r\n    //poly.bond(poly.last, ec, 1)\r\n    //ec.bond(1, poly, 0)\r\n    //ec.bond(1, poly, poly.last)\r\n    ItemBoard.prototype.bond = function (thisNode, ic, icNode) {\r\n        var entry = this.nodeBonds(thisNode);\r\n        // ic: wire,  node: wire node number, thisNode: node of IC connected\r\n        if (!ic\r\n            || (entry && entry.has(ic.id)) //there's a bond with a connection to this ic.id\r\n            //!(ic.valid(node) || node == -1)) \t//(!ic.valid(node) && node != -1)\r\n            || !ic.valid(icNode))\r\n            return false;\r\n        //make bond if first, or append new one\r\n        if (!entry) {\r\n            this.settings.bonds[thisNode] = entry = new bonds_1.Bond(this, ic, icNode, thisNode);\r\n        }\r\n        else if (!entry.add(ic, icNode)) {\r\n            console.log('Oooopsie!');\r\n        }\r\n        this.settings.bondsCount++;\r\n        //refresh this node\r\n        this.nodeRefresh(thisNode);\r\n        //make bond the other way, to this component, if not already done\r\n        entry = ic.nodeBonds(icNode);\r\n        //returning true when already a bond is to ensure the first bond call returns \"true\"\r\n        return (entry && entry.has(this.id)) ? true : ic.bond(icNode, this, thisNode);\r\n    };\r\n    ItemBoard.prototype.nodeBonds = function (nodeName) {\r\n        return this.bonds[nodeName];\r\n    };\r\n    ItemBoard.prototype.unbond = function (node, id) {\r\n        //find nodeName bonds\r\n        var bond = this.nodeBonds(node), b = (bond == null) ? null : bond.remove(id);\r\n        if (b != null) {\r\n            //\r\n            if (bond.count == 0) {\r\n                //ensures there's no bond object if no destination\r\n                delete this.settings.bonds[node];\r\n                (--this.settings.bondsCount == 0) && (this.settings.bonds = []);\r\n            }\r\n            //refresh this item node\r\n            this.nodeRefresh(node);\r\n            var ic = this.circuit.get(id);\r\n            ic && ic.unbond(b.ndx, this.id);\r\n        }\r\n    };\r\n    ItemBoard.prototype.unbondNode = function (node) {\r\n        var _a;\r\n        var bond = this.nodeBonds(node), link = void 0;\r\n        if (!bond)\r\n            return;\r\n        //try later to use bond.to.forEach, it was giving an error with wire node selection, think it's fixed\r\n        for (var i = 0, len = bond.to.length; i < len; i++) {\r\n            link = bond.to[i];\r\n            (_a = this.circuit.get(link.id)) === null || _a === void 0 ? void 0 : _a.unbond(link.ndx, bond.from.id);\r\n        }\r\n        delete this.settings.bonds[node];\r\n        (--this.settings.bondsCount == 0) && (this.settings.bonds = []);\r\n    };\r\n    ItemBoard.prototype.disconnect = function () {\r\n        for (var node = 0; node < this.count; node++)\r\n            this.unbondNode(node);\r\n    };\r\n    ItemBoard.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            selected: false,\r\n            onProp: void 0,\r\n            bonds: [],\r\n            bondsCount: 0\r\n        });\r\n    };\r\n    return ItemBoard;\r\n}(itemsBase_1.default));\r\nexports.ItemBoard = ItemBoard;\r\nvar PropertyInjector = /** @class */ (function () {\r\n    function PropertyInjector(ec, name, readonly) {\r\n        this.ec = ec;\r\n        this.name = name;\r\n        this.readonly = readonly;\r\n        if (!this.ec || !(this.name in this.ec))\r\n            throw \"invalid property \" + this.name;\r\n        this.class = \"\";\r\n    }\r\n    Object.defineProperty(PropertyInjector.prototype, \"valueType\", {\r\n        get: function () { return \"string\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PropertyInjector.prototype, \"isProperty\", {\r\n        get: function () { return true; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PropertyInjector.prototype, \"label\", {\r\n        get: function () { return this.name; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PropertyInjector;\r\n}());\r\nexports.PropertyInjector = PropertyInjector;\r\nvar PointInjector = /** @class */ (function (_super) {\r\n    __extends(PointInjector, _super);\r\n    function PointInjector() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PointInjector.prototype, \"type\", {\r\n        get: function () { return \"point\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointInjector.prototype, \"value\", {\r\n        get: function () { return this.ec[this.name].toString(0x06); } //no props and no parenthesis\r\n        ,\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PointInjector;\r\n}(PropertyInjector));\r\nexports.PointInjector = PointInjector;\r\nvar PositionInjector = /** @class */ (function (_super) {\r\n    __extends(PositionInjector, _super);\r\n    function PositionInjector(ec) {\r\n        var _this = _super.call(this, ec, \"p\", false) || this;\r\n        _this.ec = ec;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PositionInjector.prototype, \"label\", {\r\n        get: function () { return \"position\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PositionInjector.prototype.setValue = function (val) {\r\n        var p = point_1.default.parse(val);\r\n        return p && (this.ec.move(p.x, p.y), true);\r\n    };\r\n    return PositionInjector;\r\n}(PointInjector));\r\nexports.PositionInjector = PositionInjector;\r\nvar StringInjector = /** @class */ (function (_super) {\r\n    __extends(StringInjector, _super);\r\n    function StringInjector(ec, name, readonly) {\r\n        return _super.call(this, ec, name, readonly) || this;\r\n    }\r\n    Object.defineProperty(StringInjector.prototype, \"type\", {\r\n        get: function () { return \"string\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StringInjector.prototype, \"value\", {\r\n        get: function () { return this.ec[this.name]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StringInjector.prototype.setValue = function (val) {\r\n        return !this.readonly && (this.ec[this.name] = val, true);\r\n    };\r\n    return StringInjector;\r\n}(PropertyInjector));\r\nexports.StringInjector = StringInjector;\r\nvar IdInjector = /** @class */ (function (_super) {\r\n    __extends(IdInjector, _super);\r\n    function IdInjector(ec) {\r\n        return _super.call(this, ec, \"id\", true) || this;\r\n    }\r\n    Object.defineProperty(IdInjector.prototype, \"value\", {\r\n        get: function () { return this.ec[this.name]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IdInjector.prototype.setValue = function (val) { return false; };\r\n    return IdInjector;\r\n}(StringInjector));\r\nexports.IdInjector = IdInjector;\r\nvar BondsInjector = /** @class */ (function (_super) {\r\n    __extends(BondsInjector, _super);\r\n    function BondsInjector(ec) {\r\n        var _this = _super.call(this, ec, \"bonds\", true) || this;\r\n        _this.class = \"simple\";\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BondsInjector.prototype, \"value\", {\r\n        get: function () {\r\n            return this.ec.bonds.map(function (o) { return o.link; }).filter(function (s) { return !!s; }).join(', ');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BondsInjector.prototype.setValue = function (val) { return false; };\r\n    return BondsInjector;\r\n}(StringInjector));\r\nexports.BondsInjector = BondsInjector;\r\n\n\n//# sourceURL=webpack:///./src/itemsBoard.ts?");

/***/ }),

/***/ "./src/label.ts":
/*!**********************!*\
  !*** ./src/label.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Label = void 0;\r\nvar itemsBase_1 = __webpack_require__(/*! ./itemsBase */ \"./src/itemsBase.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label(options) {\r\n        var _this = this;\r\n        //set defaults\r\n        options.visible = false;\r\n        _this = _super.call(this, options) || this;\r\n        _this.text = '';\r\n        //create label\r\n        _this.t = utils_1.tag(\"text\", \"\", {});\r\n        dab_1.aCld(_this.g, _this.t);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Label.prototype, \"type\", {\r\n        get: function () { return types_1.Type.LABEL; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"size\", {\r\n        get: function () {\r\n            var b = this.t.getBBox();\r\n            return dab_1.obj({\r\n                width: Math.round(b.width),\r\n                height: Math.round(b.height)\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"fontSize\", {\r\n        get: function () { return this.settings.fontSize; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Label.prototype.move = function (x, y) {\r\n        _super.prototype.move.call(this, x, y);\r\n        dab_1.attr(this.g, { transform: \"translate(\" + this.x + \" \" + this.y + \")\" });\r\n        return this; //chaining\r\n    };\r\n    Label.prototype.setFontSize = function (value) {\r\n        this.settings.fontSize = value;\r\n        return this.build();\r\n    };\r\n    Label.prototype.build = function () {\r\n        dab_1.attr(this.t, {\r\n            \"font-size\": this.fontSize,\r\n            x: 0,\r\n            y: 0\r\n        });\r\n        return this;\r\n    };\r\n    Label.prototype.setText = function (value) {\r\n        this.t.innerHTML = this.text = value;\r\n        return this.build();\r\n    };\r\n    Label.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            name: \"label\",\r\n            class: \"label\",\r\n            fontSize: 50\r\n        });\r\n    };\r\n    return Label;\r\n}(itemsBase_1.default));\r\nexports.Label = Label;\r\n\n\n//# sourceURL=webpack:///./src/label.ts?");

/***/ }),

/***/ "./src/linealign.ts":
/*!**************************!*\
  !*** ./src/linealign.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar LinesAligner = /** @class */ (function () {\r\n    function LinesAligner(app) {\r\n        this.app = app;\r\n        var create = function (id) { return utils_1.tag(\"line\", id, {\r\n            class: \"dash hide\",\r\n            x1: 0, y1: 0, x2: 0, y2: 0,\r\n            \"stroke-dasharray\": \"3, 3\"\r\n        }); };\r\n        this.g = utils_1.tag(\"g\", \"\", {});\r\n        this.g.appendChild(this.line0 = create(\"line0\"));\r\n        this.g.appendChild(this.line1 = create(\"line1\"));\r\n    }\r\n    LinesAligner.prototype.hide = function () {\r\n        dab_1.addClass(this.line0, \"hide\");\r\n        dab_1.addClass(this.line1, \"hide\");\r\n    };\r\n    LinesAligner.prototype.calculate = function (line, nodePoint, otherNodePoint) {\r\n        if (!otherNodePoint)\r\n            return 0;\r\n        var ofs = point_1.default.minus(otherNodePoint, nodePoint);\r\n        if (Math.abs(ofs.x) < 3) {\r\n            dab_1.attr(line, {\r\n                x1: nodePoint.x = otherNodePoint.x,\r\n                y1: 0,\r\n                x2: nodePoint.x,\r\n                y2: this.app.viewBox.height\r\n            });\r\n            return 1; //vertical\r\n        }\r\n        else if (Math.abs(ofs.y) < 3) {\r\n            dab_1.attr(line, {\r\n                x1: 0,\r\n                y1: nodePoint.y = otherNodePoint.y,\r\n                x2: this.app.viewBox.width,\r\n                y2: nodePoint.y\r\n            });\r\n            return -1; //horizontal\r\n        }\r\n        return 0;\r\n    };\r\n    LinesAligner.prototype.matchWireLine = function (wire, line) {\r\n        this.hide();\r\n        this.p = point_1.default.create(wire.getNode(this.node = line)); //line is 1-based\r\n        if (this.calculate(this.line0, this.p, wire.getNode(line + 1)) ||\r\n            (this.p = point_1.default.create(wire.getNode(this.node = --line)),\r\n                this.calculate(this.line0, this.p, wire.getNode(--line)))) {\r\n            this.wire = wire;\r\n            dab_1.removeClass(this.line0, \"hide\");\r\n            return this.match = true;\r\n        }\r\n        return false;\r\n    };\r\n    LinesAligner.prototype.matchWireNode = function (wire, node) {\r\n        this.hide();\r\n        this.p = point_1.default.create(wire.getNode(node));\r\n        var before = this.calculate(this.line0, this.p, wire.getNode(node - 1)), after = this.calculate(this.line1, this.p, wire.getNode(node + 1));\r\n        if (before | after) {\r\n            this.wire = wire;\r\n            this.node = node;\r\n            before && dab_1.removeClass(this.line0, \"hide\");\r\n            after && dab_1.removeClass(this.line1, \"hide\");\r\n            return this.match = true;\r\n        }\r\n        return this.match = false;\r\n    };\r\n    return LinesAligner;\r\n}());\r\nexports.default = LinesAligner;\r\n\n\n//# sourceURL=webpack:///./src/linealign.ts?");

/***/ }),

/***/ "./src/myapp.ts":
/*!**********************!*\
  !*** ./src/myapp.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MyApp = void 0;\r\nvar app_1 = __webpack_require__(/*! ./app */ \"./src/app.ts\");\r\nvar interfaces_1 = __webpack_require__(/*! ./interfaces */ \"./src/interfaces.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar rect_1 = __webpack_require__(/*! ./rect */ \"./src/rect.ts\");\r\nvar size_1 = __webpack_require__(/*! ./size */ \"./src/size.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar tooltip_1 = __webpack_require__(/*! ./tooltip */ \"./src/tooltip.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar app_window_1 = __webpack_require__(/*! ./app-window */ \"./src/app-window.ts\");\r\nvar stateMachine_1 = __webpack_require__(/*! ./stateMachine */ \"./src/stateMachine.ts\");\r\nvar context_window_1 = __webpack_require__(/*! ./context-window */ \"./src/context-window.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar linealign_1 = __webpack_require__(/*! ./linealign */ \"./src/linealign.ts\");\r\nvar highlightNode_1 = __webpack_require__(/*! ./highlightNode */ \"./src/highlightNode.ts\");\r\nvar selection_rect_1 = __webpack_require__(/*! ./selection-rect */ \"./src/selection-rect.ts\");\r\nvar circuit_1 = __webpack_require__(/*! ./circuit */ \"./src/circuit.ts\");\r\nvar MyApp = /** @class */ (function (_super) {\r\n    __extends(MyApp, _super);\r\n    function MyApp(options) {\r\n        var _a;\r\n        var _this = _super.call(this, options) || this;\r\n        _this.tooltipFontSize = function () { return Math.max(10, 35 * _this.multiplier); };\r\n        var that = _this, hideNodeTooltip = function (newCtx) {\r\n            that.highlight.hide();\r\n            that.tooltip.setVisible(false);\r\n        }, \r\n        //HTML\r\n        getClientXY = function (ev) {\r\n            return new point_1.default(ev.clientX - that.board.offsetLeft, ev.clientY - that.board.offsetTop);\r\n        }, \r\n        //SVG\r\n        getOffset = function (clientXY) {\r\n            return point_1.default.plus(new point_1.default(_this.viewBox.x, _this.viewBox.y), point_1.default.times(clientXY, that.ratioX, that.ratioY)\r\n                .round());\r\n        }, handleMouseEvent = function (ev) {\r\n            //this is MyApp\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            var arr = [], target = ev.target, parent = target.parentNode, clientXY = getClientXY(ev), state = {\r\n                //id: parent.id,\r\n                type: dab_1.attr(parent, \"svg-comp\"),\r\n                button: ev.button,\r\n                //parent: parent,\r\n                client: clientXY,\r\n                offset: getOffset(clientXY),\r\n                event: ev.type.replace('mouse', ''),\r\n                //timeStamp: ev.timeStamp,\r\n                over: {\r\n                    type: dab_1.attr(target, \"svg-type\"),\r\n                    svg: target\r\n                },\r\n                ctrlKey: ev.ctrlKey,\r\n                shiftKey: ev.shiftKey,\r\n                altKey: ev.altKey,\r\n                it: that.circuit.get(parent.id)\r\n            };\r\n            //post actions\r\n            switch (state.over.type) {\r\n                case \"node\":\r\n                    //case \"node-x\":\r\n                    state.over.node = dab_1.attr(state.over.svg, state.over.type) | 0;\r\n                    break;\r\n                case \"line\":\r\n                    state.over.line = dab_1.attr(state.over.svg, state.over.type) | 0;\r\n                    break;\r\n                default:\r\n                    //if we got here, it's a hit on a component without svg-type\r\n                    //state.type != [\"board\", \"wire\"] then it's \"body\"\r\n                    (state.it && state.type != \"wire\") && (state.over.type = \"body\");\r\n                    break;\r\n            }\r\n            //UI logs\r\n            arr.push(utils_1.pad(state.event, 5, '&nbsp;') + \" \" + parent.id + \" \" + state.type + \"^\" + state.over.type);\r\n            //arr.push(`multiplier: ${that.multiplier}`);\r\n            arr.push(\"state: \" + interfaces_1.StateType[that.sm.state]);\r\n            arr.push(state.offset.toString()); //`x: ${round(state.offset.x, 1)} y: ${round(state.offset.y, 1)}`\r\n            //arr.push(`client ${clientXY.toString()}`);\r\n            //arr.push(`scaled: x: ${clientXYScaled.x} y: ${clientXYScaled.y}`);\r\n            //render\r\n            that.topBarLeft.innerHTML = arr.join(\", \");\r\n            return state;\r\n        };\r\n        _this.viewBox = rect_1.default.empty(); //location is panning, size is for scaling\r\n        _this.multiplier = 0.5; //scaling multipler 2X UI default\r\n        _this.ratio = window.screen.width / window.screen.height; //this's a const value\r\n        _this.ratioX = 1;\r\n        _this.ratioY = 1;\r\n        _this.tooltip = new tooltip_1.default({ id: \"tooltip\", borderRadius: 4 });\r\n        _this.rootDir = utils_1.basePath(); //not used in electron\r\n        _this.board = utils_1.qS(\"#board\");\r\n        _this.svgBoard = _this.board.children[0];\r\n        _this.topBarLeft = utils_1.qS(\"#top-bar>div:nth-of-type(1)\");\r\n        _this.topBarRight = utils_1.qS(\"#top-bar>div:nth-of-type(2)\");\r\n        _this.dash = new linealign_1.default(_this);\r\n        _this.highlight = new highlightNode_1.default({});\r\n        _this.selection = new selection_rect_1.SelectionRect(_this);\r\n        _this.circuit = new circuit_1.Circuit(_this, \"my circuit\");\r\n        //this'll hold the properties of the current selected component\r\n        _this.winProps = new app_window_1.default({\r\n            app: _this,\r\n            id: \"win-props\",\r\n            x: 800,\r\n            y: 0,\r\n            size: {\r\n                width: 250,\r\n                height: 300\r\n            },\r\n            title: \"Properties\",\r\n            bar: \"...\",\r\n            content: \"Aaaaa...!  lorep itsum.... whatever\"\r\n        });\r\n        //create state machine\r\n        _this.sm = new stateMachine_1.default({\r\n            id: \"state-machine-01\",\r\n            initial: interfaces_1.StateType.BOARD,\r\n            states: {},\r\n            log: (_a = _this.prop(\"cons_log\")) === null || _a === void 0 ? void 0 : _a.value,\r\n            ctx: {},\r\n            commonActions: {\r\n                ENTER: function (newCtx) {\r\n                    //that.sm.ctx = newCtx;\t\t//save data\r\n                },\r\n                LEAVE: function (newCtx) {\r\n                    //cannot save new context, erases wiring status\r\n                    hideNodeTooltip(newCtx);\r\n                    that.topBarLeft.innerHTML = \"&nbsp;\";\r\n                },\r\n                KEY: function (code) {\r\n                    //console.log(`KEY: ${code}`);\r\n                    //this's the default\r\n                    (code == \"Delete\") && that.execute(interfaces_1.ActionType.DELETE, \"\");\r\n                },\r\n                HIDE_NODE: hideNodeTooltip,\r\n                FORWARD_OVER: function (newCtx) {\r\n                    //accepts transitions to new state on mouse OVER\r\n                    var prefix = !newCtx.it ? \"\" : newCtx.it.type == 1 ? \"EC_\" : \"WIRE_\", stateName = (prefix + newCtx.over.type).toUpperCase(), state = interfaces_1.StateType[stateName];\r\n                    that.sm.transition(state, interfaces_1.ActionType.START, newCtx); //EC_NODE\t\tWIRE_NODE\r\n                }\r\n            }\r\n        });\r\n        //context menu\r\n        _this.rightClick = new context_window_1.default({\r\n            app: _this,\r\n            id: \"win-rc\",\r\n            x: 50,\r\n            y: 50,\r\n            size: {\r\n                width: 200,\r\n                height: 250\r\n            },\r\n            class: \"no-select\",\r\n            list: options.list\r\n        });\r\n        dab_1.aEL(_this.svgBoard, \"mouseenter\", function (ev) { return that.sm.send(interfaces_1.ActionType.ENTER, handleMouseEvent.call(that, ev)); }, false);\r\n        dab_1.aEL(_this.svgBoard, \"mouseleave\", function (ev) { return that.sm.send(interfaces_1.ActionType.LEAVE, handleMouseEvent.call(that, ev)); }, false);\r\n        dab_1.aEL(_this.svgBoard, \"mouseover\", function (ev) { return that.sm.send(interfaces_1.ActionType.OVER, handleMouseEvent.call(that, ev)); }, false);\r\n        dab_1.aEL(_this.svgBoard, \"mousemove\", function (ev) { return that.sm.send(interfaces_1.ActionType.MOVE, handleMouseEvent.call(that, ev)); }, false);\r\n        dab_1.aEL(_this.svgBoard, \"mouseout\", function (ev) { return that.sm.send(interfaces_1.ActionType.OUT, handleMouseEvent.call(that, ev)); }, false);\r\n        //\r\n        dab_1.aEL(_this.svgBoard, \"mousedown\", function (ev) { return that.sm.send(interfaces_1.ActionType.DOWN, handleMouseEvent.call(that, ev)); }, false);\r\n        dab_1.aEL(_this.svgBoard, \"mouseup\", function (ev) { return that.sm.send(interfaces_1.ActionType.UP, handleMouseEvent.call(that, ev)); }, false);\r\n        //right click on board\r\n        dab_1.aEL(_this.svgBoard, \"contextmenu\", function (ev) {\r\n            ev.stopPropagation();\r\n            var target = ev.target, parent = target.parentNode, id = dab_1.attr(parent, \"id\"), compName = dab_1.attr(parent, \"svg-comp\"), type = dab_1.attr(target, \"svg-type\"), nodeOrLine = parseInt(dab_1.attr(target, type)), key = void 0, clientXY = getClientXY(ev), comp = void 0;\r\n            //test for highlightNode\r\n            (compName == \"h-node\") &&\r\n                (id = that.highlight.selectedId,\r\n                    comp = that.circuit.get(id),\r\n                    compName = comp.type == types_1.Type.WIRE ? \"wire\" : \"ec\",\r\n                    (nodeOrLine != that.highlight.selectedNode && console.log(\"node: \" + nodeOrLine + \" <> \" + that.highlight.selectedNode)));\r\n            key = that.rightClick.setTrigger(id, compName, type, isNaN(nodeOrLine) ? undefined : nodeOrLine);\r\n            key &&\r\n                that.rightClick\r\n                    .build(key, that.sm.state, getOffset(clientXY))\r\n                    .movePoint(clientXY)\r\n                    .setVisible(true);\r\n        }, false);\r\n        document.onkeydown = function (ev) {\r\n            //https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\r\n            switch (ev.code) {\r\n                case 'Enter':\r\n                case 'Escape':\r\n                case 'ArrowLeft':\r\n                case 'ArrowUp':\r\n                case 'ArrowRight':\r\n                case 'ArrowDown':\r\n                case 'Delete':\r\n                case 'ControlLeft':\r\n                case 'ControlRight':\r\n                    that.sm.send(interfaces_1.ActionType.KEY, ev.code);\r\n                    break;\r\n            }\r\n            //console.log(ev.code)\r\n        };\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MyApp.prototype, \"tooltipOfs\", {\r\n        get: function () { return 15; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    MyApp.prototype.insideBoard = function (p) {\r\n        //later include panning\r\n        return p.x > 0 && p.y > 0 && p.x < this.viewBox.width && p.y < this.viewBox.height;\r\n    };\r\n    MyApp.prototype.setViewBox = function (m) {\r\n        if (!m) {\r\n            var zoom_item = utils_1.qS('.bar-item[data-scale].selected'), o = dab_1.attr(zoom_item, \"data-scale\");\r\n            m = parseFloat(o);\r\n        }\r\n        this.multiplier = m;\r\n        this.baseViewBox = new size_1.default(this.board.clientWidth * this.ratio | 0, this.board.clientHeight * this.ratio | 0);\r\n        //calculate size\r\n        this.viewBox.width = this.baseViewBox.width * this.multiplier | 0;\r\n        this.viewBox.height = this.baseViewBox.height * this.multiplier | 0;\r\n        calculateAndUpdateViewBoxData.call(this);\r\n    };\r\n    MyApp.prototype.updateViewBox = function () { calculateAndUpdateViewBoxData.call(this); };\r\n    MyApp.prototype.refreshTopBarRight = function () {\r\n        this.topBarRight.innerHTML = dab_1.nano(this.templates.viewBox01, this.viewBox) + \"&nbsp; \" +\r\n            dab_1.nano(this.templates.size01, this.size);\r\n    };\r\n    MyApp.prototype.getAspectRatio = function (width, height) {\r\n        var ratio = width / height;\r\n        return (Math.abs(ratio - 4 / 3) < Math.abs(ratio - 16 / 9)) ? '4:3' : '16:9';\r\n    };\r\n    MyApp.prototype.addECtoDOM = function (ec) {\r\n        this.svgBoard.insertBefore(ec.g, this.tooltip.g);\r\n        //do after DOM inserted work\r\n        ec.afterDOMinserted();\r\n    };\r\n    MyApp.prototype.addWiretoDOM = function (wire) {\r\n        this.dash.g.insertAdjacentElement(\"afterend\", wire.g);\r\n        //do after DOM inserted work\r\n        wire.afterDOMinserted();\r\n    };\r\n    MyApp.prototype.rotateEC = function (angle) {\r\n        this.rotateComponentBy(angle, this.circuit.ec);\r\n    };\r\n    MyApp.prototype.rotateComponentBy = function (angle, comp) {\r\n        if (!comp || comp.type != types_1.Type.EC)\r\n            return;\r\n        comp.rotate(comp.rotation + angle);\r\n        this.refreshRotation(comp);\r\n    };\r\n    MyApp.prototype.refreshRotation = function (ec) {\r\n        var _a;\r\n        var isEC = ec && (ec.type == types_1.Type.EC), rotation = isEC ? ec.rotation : 0;\r\n        this.prop(\"rot_lbl\").value = \" \" + rotation + \"\\u00B0\";\r\n        isEC && (this.winProps.compId == (ec === null || ec === void 0 ? void 0 : ec.id)) && ((_a = this.winProps.property(\"rotation\")) === null || _a === void 0 ? void 0 : _a.refresh());\r\n    };\r\n    //public execute({ action, trigger, data }: { action: ActionType; trigger: string; data?: any; }) {\r\n    MyApp.prototype.execute = function (action, trigger) {\r\n        var arr = trigger.split('::'), comp = this.circuit.get(arr.shift()), name = arr.shift(), type = arr.shift(), nodeOrLine = parseInt(arr.shift()), data = arr.shift(), compNull = false;\r\n        //this's a temporary fix to make it work\r\n        //\tfinal code will have a centralized action dispatcher\r\n        switch (action) {\r\n            case interfaces_1.ActionType.TOGGLE_SELECT:\r\n                if (!(compNull = !comp) && comp.type == types_1.Type.EC) {\r\n                    this.circuit.toggleSelect(comp);\r\n                    this.refreshRotation(this.circuit.ec);\r\n                    (this.circuit.ec && (this.winProps.load(this.circuit.ec), 1)) || this.winProps.clear();\r\n                    //temporary, for testings...\r\n                    this.circuit.ec && (window.ec = this.circuit.ec);\r\n                }\r\n                break;\r\n            case interfaces_1.ActionType.SELECT:\r\n            case interfaces_1.ActionType.SELECT_ONLY:\r\n                if (!(compNull = !comp) && comp.type == types_1.Type.EC) {\r\n                    this.circuit.selectThis(comp);\r\n                    this.refreshRotation(comp);\r\n                    ((action == interfaces_1.ActionType.SELECT) && (this.winProps.load(comp), 1)) || this.winProps.clear();\r\n                    //temporary, for testings...\r\n                    window.ec = this.circuit.ec;\r\n                }\r\n                break;\r\n            case interfaces_1.ActionType.SELECT_ALL:\r\n                this.circuit.selectAll();\r\n                this.refreshRotation();\r\n                this.winProps.clear();\r\n                //temporary, for testings...\r\n                window.ec = void 0;\r\n                break;\r\n            case interfaces_1.ActionType.UNSELECT_ALL:\r\n                this.circuit.deselectAll();\r\n                this.refreshRotation();\r\n                this.winProps.clear();\r\n                //temporary, for testings...\r\n                window.ec = void 0;\r\n                break;\r\n            case interfaces_1.ActionType.DELETE_SELECTED:\r\n                var selectedCount = this.circuit.selectedComponents.length, deletedCount = this.circuit.deleteSelected();\r\n                this.refreshRotation();\r\n                this.winProps.clear().setVisible(false);\r\n                this.tooltip.setVisible(false);\r\n                if (selectedCount != deletedCount) {\r\n                    console.log(\"[\" + deletedCount + \"] components of [\" + selectedCount + \"]\");\r\n                }\r\n                //temporary, for testings...\r\n                window.ec = void 0;\r\n                break;\r\n            case interfaces_1.ActionType.DELETE:\r\n                //only comp if sent\r\n                if (!(compNull = !comp)) {\r\n                    if (this.circuit.delete(comp)) {\r\n                        this.refreshRotation();\r\n                        this.winProps.clear().setVisible(false);\r\n                        this.tooltip.setVisible(false);\r\n                        this.sm.send(interfaces_1.ActionType.AFTER_DELETE, comp.id);\r\n                    }\r\n                }\r\n                //temporary, for testings...\r\n                window.ec = void 0;\r\n                break;\r\n            case interfaces_1.ActionType.DELETE_THIS_LINE:\r\n                //console.log(`delete line segment: `, trigger);\r\n                if (!(compNull = !comp)) {\r\n                    comp.deleteLine(nodeOrLine);\r\n                    this.winProps.refresh();\r\n                }\r\n                break;\r\n            case interfaces_1.ActionType.DELETE_WIRE_NODE:\r\n                //console.log(`delete wire node: `, trigger);\r\n                if (!(compNull = !comp)) {\r\n                    comp.deleteNode(nodeOrLine);\r\n                    this.winProps.refresh();\r\n                }\r\n                break;\r\n            case interfaces_1.ActionType.SPLIT_THIS_LINE:\r\n                //console.log(`split line segment: `, trigger, this.rightClick.offset);\r\n                if (!(compNull = !comp)) {\r\n                    comp.insertNode(nodeOrLine, this.rightClick.offset);\r\n                    this.winProps.refresh();\r\n                }\r\n                break;\r\n            case interfaces_1.ActionType.SHOW_PROPERTIES:\r\n                !(compNull = !comp) && this.winProps.load(comp);\r\n                break;\r\n            case interfaces_1.ActionType.ROTATE_45_CLOCKWISE:\r\n            case interfaces_1.ActionType.ROTATE_45_COUNTER_CLOCKWISE:\r\n            case interfaces_1.ActionType.ROTATE_90_CLOCKWISE:\r\n            case interfaces_1.ActionType.ROTATE_90_COUNTER_CLOCKWISE:\r\n                !(compNull = !comp) && data && this.rotateComponentBy(data | 0, comp);\r\n                break;\r\n        }\r\n        //logs\r\n        if (compNull) {\r\n            console.log(\"invalid trigger: \" + trigger);\r\n        }\r\n        else {\r\n            //console.log(`action: ${action}, id: ${comp?.id}, name: ${name}, type: ${type}, trigger: ${trigger}`);\r\n        }\r\n    };\r\n    return MyApp;\r\n}(app_1.Application));\r\nexports.MyApp = MyApp;\r\nfunction calculateAndUpdateViewBoxData() {\r\n    var self = this;\r\n    //set SVG DOM viewBox attribute\r\n    dab_1.attr(self.svgBoard, { \"viewBox\": self.viewBox.x + \" \" + self.viewBox.y + \" \" + self.viewBox.width + \" \" + self.viewBox.height });\r\n    //calculate ratio\r\n    self.ratioX = self.viewBox.width / self.svgBoard.clientWidth;\r\n    self.ratioY = self.viewBox.height / self.svgBoard.clientHeight;\r\n    self.center = new point_1.default(Math.round(self.viewBox.x + self.viewBox.width / 2), Math.round(self.viewBox.y + self.viewBox.height / 2));\r\n    self.refreshTopBarRight();\r\n}\r\n\n\n//# sourceURL=webpack:///./src/myapp.ts?");

/***/ }),

/***/ "./src/point.ts":
/*!**********************!*\
  !*** ./src/point.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n//Point class is adapted from:\r\n//https://github.com/Microsoft/TypeScriptSamples/blob/master/raytracer/raytracer.ts\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar Point = /** @class */ (function () {\r\n    function Point(x, y) {\r\n        this.x = parseFloat(x); //ensure it's a number\r\n        this.y = parseFloat(y);\r\n    }\r\n    Point.prototype.distance = function (p) {\r\n        var dx = this.x - p.x;\r\n        var dy = this.y - p.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    };\r\n    Point.prototype.clone = function () { return new Point(this.x, this.y); };\r\n    Point.prototype.round = function () {\r\n        this.x = Math.round(this.x);\r\n        this.y = Math.round(this.y);\r\n        return this;\r\n    };\r\n    Point.prototype.add = function (x, y) {\r\n        this.x += Math.round(x);\r\n        this.y += Math.round(y);\r\n        return this;\r\n    };\r\n    Point.prototype.toString = function (options) {\r\n        var noVars = ((options = options | 0) & 4) != 0, noPars = (options & 2) != 0;\r\n        return \"\" + (noPars ? \"\" : \"(\") + (noVars ? \"\" : \"x: \") + dab_1.round(this.x, 1) + \", \" + (noVars ? \"\" : \"y: \") + dab_1.round(this.y, 1) + (noPars ? \"\" : \")\");\r\n    };\r\n    //get positive(): boolean { return this.x >= 0 && this.y >= 0 }\r\n    /**\r\n     * @description rotate (x,y) through center (x,y) by an angle\r\n     * @param {number} cx center x\r\n     * @param {number} cy center y\r\n     * @param {number} angle angle to rotate\r\n     */\r\n    Point.prototype.rotateBy = function (cx, cy, angle) {\r\n        var radians = (Math.PI / 180) * angle, cos = Math.cos(radians), sin = Math.sin(radians), nx = (cos * (this.x - cx)) + (sin * (this.y - cy)) + cx, ny = (cos * (this.y - cy)) - (sin * (this.x - cx)) + cy;\r\n        return new Point(dab_1.round(nx, 3), dab_1.round(ny, 3));\r\n    };\r\n    //static\r\n    Point.validateRotation = function (val) {\r\n        return (val = (val | 0) % 360, (val < 0) && (val += 360), val);\r\n    };\r\n    Point.create = function (p) {\r\n        return new Point(p.x, p.y);\r\n    };\r\n    /**\r\n     * @description parse an string into an (x,y) Point\r\n     * @param value string in the for \"x, y\"\r\n     */\r\n    Point.parse = function (value) {\r\n        var arr = value.split(\",\");\r\n        if (arr.length == 2 && dab_1.isNumeric(arr[0]) && dab_1.isNumeric(arr[1])) {\r\n            return new Point(parseInt(arr[0]), parseInt(arr[1]));\r\n        }\r\n        //invalid point\r\n        return void 0;\r\n    };\r\n    Point.distance = function (p1, p2) {\r\n        return p1.distance(p2);\r\n    };\r\n    Point.scale = function (v, k) { return new Point(k * v.x, k * v.y); };\r\n    Point.translateBy = function (v, k) { return new Point(v.x + k, v.y + k); };\r\n    //static translate(v: Point, k: number): IPoint { return new Point(v.x + k, v.y + k) }\r\n    Point.times = function (v, scaleX, scaleY) { return new Point(v.x * scaleX, v.y * scaleY); };\r\n    Point.minus = function (v1, v2) { return new Point(v1.x - v2.x, v1.y - v2.y); };\r\n    Point.plus = function (v1, v2) { return new Point(v1.x + v2.x, v1.y + v2.y); };\r\n    //\r\n    Point.inside = function (p, s) { return p.x >= 0 && p.x <= s.width && p.y >= 0 && p.y <= s.height; };\r\n    Point.origin = new Point(0, 0);\r\n    return Point;\r\n}());\r\nexports.default = Point;\r\n\n\n//# sourceURL=webpack:///./src/point.ts?");

/***/ }),

/***/ "./src/props.ts":
/*!**********************!*\
  !*** ./src/props.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n//props.ts\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\n//... in progress...\r\nvar UIProp = /** @class */ (function () {\r\n    function UIProp(options) {\r\n        var _this = this;\r\n        //set default values\r\n        this.settings = {\r\n            type: \"text\",\r\n            selected: false,\r\n            editable: false,\r\n            getter: \"value\",\r\n            htmlSelect: false,\r\n            selectCount: 1,\r\n            selectMultiple: false\r\n        };\r\n        if (!options\r\n            || !(this.settings.html = (dab_1.isElement(options.tag) ? (options.tag) : utils_1.qS(options.tag))))\r\n            throw 'wrong options';\r\n        //set event handler if any, this uses setter for type checking\r\n        this.onChange = options.onChange;\r\n        //copy toString function\r\n        this.settings.toStringFn = options.toStringFn;\r\n        //self contain inside the html dom object for onchange event\r\n        this.html.dab = this;\r\n        //set properties\r\n        this.settings.tag = options.tag;\r\n        this.settings.name = this.html.getAttribute(\"name\");\r\n        this.settings.id = this.html.id || dab_1.attr(this.html, \"prop-id\") || ('property' + UIProp._propId++);\r\n        switch (this.nodeName) {\r\n            case 'input':\r\n                this.settings.type = this.html.type.toLowerCase();\r\n                this.settings.editable = true;\r\n                switch (this.type) {\r\n                    case 'radio':\r\n                    case 'checkbox':\r\n                        this.settings.type = \"boolean\";\r\n                        this.settings.getter = 'checked';\r\n                        break;\r\n                    case 'submit':\r\n                    case 'button':\r\n                        throw 'HTML input tag type invalid';\r\n                    case 'text':\r\n                    case 'number':\r\n                        //TML5 input types stays the same\r\n                        break;\r\n                    case 'password':\r\n                    case 'hidden': //prop.type is text\r\n                    default:\r\n                        //•color\t•date\t•datetime\t•datetime-local\t•email\t•month\t•number\t•range\t•search\r\n                        //•tel\t•time\t•url\t•week\r\n                        this.settings.type = 'text';\r\n                }\r\n                break;\r\n            case 'textarea':\r\n                this.settings.type = 'text';\r\n                this.settings.editable = true;\r\n                break;\r\n            case 'select':\r\n                this.settings.htmlSelect = true;\r\n                switch (this.html.type.toLowerCase()) {\r\n                    case 'select-one':\r\n                        this.settings.getter = \"selectedIndex\"; //'<any>null';\r\n                        break;\r\n                    case 'select-multiple':\r\n                        this.settings.getter = \"selectedOptions\"; //'<any>null'\r\n                        this.settings.selectMultiple = true;\r\n                        break;\r\n                }\r\n                this.settings.type = \"integer\";\r\n                //define properties for 'SELECT'\r\n                var index_1 = -1;\r\n                this.settings.selectCount = this.html.length;\r\n                //later return an array for select multiple\r\n                dab_1.dP(this, \"index\", {\r\n                    get: function () { return index_1; },\r\n                    set: function (value) {\r\n                        (value >= 0 && value < this.settings.selectCount) && // this.options.length\r\n                            ((index_1 != -1) && (this.html.options[index_1].selected = !1),\r\n                                this.html.options[index_1 = value].selected = !0,\r\n                                this.selectionUiChanged());\r\n                    }\r\n                });\r\n                dab_1.dP(this, \"selectedOption\", {\r\n                    get: function () { return _this.html.options[_this.html.selectedIndex]; }\r\n                });\r\n                break;\r\n            default:\r\n                if (UIProp.textOnly.indexOf(this.nodeName) >= 0) {\r\n                    this.settings.getter = 'innerText';\r\n                }\r\n                else\r\n                    throw \"Unsupported HTML tag: \" + this.nodeName;\r\n        }\r\n        ;\r\n        //later see how can I register change event only for editable properties\r\n        this.html.addEventListener('change', this.selectionUiChanged);\r\n    }\r\n    Object.defineProperty(UIProp.prototype, \"id\", {\r\n        get: function () { return this.settings.id; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"type\", {\r\n        get: function () { return this.settings.type; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"name\", {\r\n        get: function () { return this.settings.name; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"tag\", {\r\n        get: function () { return this.settings.tag; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"html\", {\r\n        get: function () { return this.settings.html; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"editable\", {\r\n        get: function () { return this.settings.editable; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"nodeName\", {\r\n        get: function () { return this.html.nodeName.toLowerCase(); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"onChange\", {\r\n        get: function () { return this.settings.onChange; },\r\n        set: function (fn) {\r\n            dab_1.isFn(fn) && (this.settings.onChange = fn);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UIProp.prototype, \"value\", {\r\n        get: function () {\r\n            var val = this.html[this.settings.getter]; //select.selectedOptions\r\n            if (!this.settings.htmlSelect) {\r\n                switch (this.type) {\r\n                    case \"integer\":\r\n                        return isNaN(val = parseInt(val)) ? 0 : val;\r\n                    case \"number\":\r\n                        return isNaN(val = parseFloat(val)) ? 0 : val;\r\n                }\r\n                return val;\r\n            }\r\n            else if (this.settings.selectMultiple) {\r\n                return [].map.call(val, function (option) { return option.value; });\r\n            }\r\n            else\r\n                return this.html.options[val].value;\r\n        },\r\n        set: function (val) {\r\n            if (!this.settings.htmlSelect) {\r\n                var valtype = dab_1.typeOf(val);\r\n                if ((this.type == \"text\" && valtype == \"string\") ||\r\n                    (this.type == \"boolean\" && valtype == \"boolean\") ||\r\n                    (this.type == \"integer\" && dab_1.isInt(val)) ||\r\n                    (this.type == \"number\" && dab_1.isNumeric(val)))\r\n                    this.html[this.settings.getter] = val;\r\n            }\r\n            else {\r\n                //this.getsetSelect(<HTMLSelectElement>this.html, 'selectedIndex', splat(val));\r\n                if (this.settings.selectMultiple) {\r\n                    var values_1 = dab_1.splat(val).map(function (num) { return num + ''; });\r\n                    [].forEach.call(this.html.options, function (option) {\r\n                        (values_1.indexOf(option.value) >= 0) && (option.selected = true);\r\n                    });\r\n                }\r\n                else {\r\n                    if (dab_1.isStr(this.value)) {\r\n                        val = [].findIndex.call(this.html.options, function (option) { return option.value == val; });\r\n                    }\r\n                    this.html.selectedIndex = val | 0;\r\n                }\r\n            }\r\n            //trigger the property change event\r\n            this.selectionUiChanged(null);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UIProp.prototype.toString = function () {\r\n        return this.settings.toStringFn ? this.settings.toStringFn() : this.id + \": \" + this.value;\r\n    };\r\n    UIProp.prototype.selectionUiChanged = function (e) {\r\n        //when comming from UI, this is the DOM Element\r\n        // \totherwise it's the property\r\n        var prop = this instanceof UIProp ? this : this.dab;\r\n        if (prop && prop.onChange)\r\n            prop.onChange(prop.value, //this cache current value\r\n            (e) ? 1 : 2, // 1 == 'ui' : 2 == 'prop'\r\n            prop, //not needed, but just in case\r\n            e //event if UI triggered\r\n            );\r\n    };\r\n    UIProp.textOnly = \"a|abbr|acronym|b|bdo|big|cite|code|dfn|em|i|kbd|label|legend|li|q|samp|small|span|strong|sub|sup|td|th|tt|var\".split('|');\r\n    UIProp._propId = 1;\r\n    return UIProp;\r\n}());\r\nexports.default = UIProp;\r\n\n\n//# sourceURL=webpack:///./src/props.ts?");

/***/ }),

/***/ "./src/rect.ts":
/*!*********************!*\
  !*** ./src/rect.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    Object.defineProperty(Rect.prototype, \"empty\", {\r\n        get: function () { return this.width < 0 || this.height < 0; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Rect.prototype.inside = function (p) {\r\n        return p.x >= this.x && p.y >= this.y && p.x <= (this.x + this.width) && p.y <= (this.y + this.height);\r\n        // Point.inside(Point.minus(p, this.location), this.size)\r\n    };\r\n    Rect.prototype.intersect = function (r) {\r\n        var nx = Math.max(this.x, r.x), ny = Math.max(this.y, r.y);\r\n        r.width = Math.min((this.x + this.width), (r.x + r.width)) - nx;\r\n        r.height = Math.min((this.y + this.height), (r.y + r.height)) - ny;\r\n        r.x = nx;\r\n        r.y = ny;\r\n        return !r.empty;\r\n    };\r\n    Rect.create = function (r) { return new Rect(r.x, r.y, r.width, r.height); };\r\n    Rect.empty = function () { return new Rect(0, 0, 0, 0); };\r\n    return Rect;\r\n}());\r\nexports.default = Rect;\r\n\n\n//# sourceURL=webpack:///./src/rect.ts?");

/***/ }),

/***/ "./src/selection-rect.ts":
/*!*******************************!*\
  !*** ./src/selection-rect.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SelectionRect = void 0;\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar rect_1 = __webpack_require__(/*! ./rect */ \"./src/rect.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar SelectionRect = /** @class */ (function () {\r\n    function SelectionRect(app) {\r\n        this.app = app;\r\n        this.g = utils_1.tag(\"rect\", \"selection-rect\", {\r\n            class: \"dash\",\r\n            x: 0, y: 0, width: 0, height: 0,\r\n            \"stroke-dasharray\": \"3, 3\"\r\n        });\r\n        this.hide();\r\n    }\r\n    SelectionRect.prototype.show = function (start) {\r\n        this.start = start;\r\n        this.rect = new rect_1.default(start.x, start.y, 0, 0);\r\n        return this.g.classList.remove(\"hide\"), this;\r\n    };\r\n    SelectionRect.prototype.hide = function () {\r\n        this.start = new point_1.default(0, 0);\r\n        this.rect = new rect_1.default(0, 0, 0, 0);\r\n        return this.g.classList.add(\"hide\"), this.refresh();\r\n    };\r\n    SelectionRect.prototype.refresh = function () {\r\n        dab_1.attr(this.g, {\r\n            x: this.rect.x,\r\n            y: this.rect.y,\r\n            width: this.rect.width,\r\n            height: this.rect.height\r\n        });\r\n        return this;\r\n    };\r\n    SelectionRect.prototype.calculate = function (p) {\r\n        var startX = Math.min(this.start.x, p.x), startY = Math.min(this.start.y, p.y), endX = Math.max(this.start.x, p.x), endY = Math.max(this.start.y, p.y);\r\n        this.rect.x = startX;\r\n        this.rect.y = startY;\r\n        this.rect.width = endX - startX;\r\n        this.rect.height = endY - startY;\r\n        return this.refresh();\r\n    };\r\n    return SelectionRect;\r\n}());\r\nexports.SelectionRect = SelectionRect;\r\n\n\n//# sourceURL=webpack:///./src/selection-rect.ts?");

/***/ }),

/***/ "./src/size.ts":
/*!*********************!*\
  !*** ./src/size.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar Size = /** @class */ (function () {\r\n    function Size(width, height) {\r\n        this.width = parseFloat(width); //ensure it's a number\r\n        this.height = parseFloat(height);\r\n    }\r\n    Size.prototype.clone = function () { return new Size(this.width, this.height); };\r\n    Size.prototype.round = function () {\r\n        this.width = Math.round(this.width);\r\n        this.height = Math.round(this.height);\r\n        return this;\r\n    };\r\n    Size.create = function (size) {\r\n        return new Size(size.width, size.height);\r\n    };\r\n    Size.prototype.toString = function (options) {\r\n        var noVars = ((options = options | 0) & 4) != 0, noPars = (options & 2) != 0;\r\n        return \"\" + (noPars ? \"\" : \"(\") + (noVars ? \"\" : \"w: \") + dab_1.round(this.width, 1) + \", \" + (noVars ? \"\" : \"h: \") + dab_1.round(this.height, 1) + (noPars ? \"\" : \")\");\r\n    };\r\n    Size.empty = new Size(0, 0);\r\n    return Size;\r\n}());\r\nexports.default = Size;\r\n\n\n//# sourceURL=webpack:///./src/size.ts?");

/***/ }),

/***/ "./src/stateMachine.ts":
/*!*****************************!*\
  !*** ./src/stateMachine.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar interfaces_1 = __webpack_require__(/*! ./interfaces */ \"./src/interfaces.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nfunction sendAction(action, newCtx) {\r\n    var current = this.getState(this.stateName), actionName = interfaces_1.ActionType[action], fn, newSendCmd = \"  ::\" + actionName;\r\n    //check action.OVER and overType\r\n    if (action == interfaces_1.ActionType.OVER) {\r\n        switch (current.overType) {\r\n            case \"deny\":\r\n                //do nothing ...\r\n                //deny transitions here, by not calling app.state.transition\r\n                //  so DEFAULT action is not called\r\n                //and on all others, accept, this way I can prevent stop dragging while OVER event\r\n                this.log && console.log(newSendCmd + \" -> deny\");\r\n                return true;\r\n            case \"forward\":\r\n                //send action.FORWARD_OVER from common actions\r\n                //accepts transitions to new state on mouse OVER\r\n                fn = this.settings.commonActions.get(actionName = \"FORWARD_OVER\");\r\n                break;\r\n            case \"function\":\r\n                //call function if provided\r\n                fn = current.actions[actionName];\r\n                break;\r\n        }\r\n    }\r\n    else {\r\n        fn = current.actions[actionName] // first priority in state[action]\r\n            || this.settings.commonActions.get(actionName) // second priority are common actions to all states\r\n            || current.actions[actionName = \"DEFAULT\"]; // third priority is stae.DEFAULT action\r\n    }\r\n    if (this.log\r\n        && newSendCmd != this.sendCmd) { // && actionName != \"FORWARD_OVER\"\r\n        var postSendCmd = \"  ::\" + actionName;\r\n        //for ENTER show current state, to visually track who got the action\r\n        (action == interfaces_1.ActionType.ENTER) &&\r\n            console.log(\"[\" + this.stateName + \"]\");\r\n        console.log(\"\" + (this.sendCmd = newSendCmd) + (newSendCmd != postSendCmd ? \" -> \" + postSendCmd : \"\") + (fn ? \"\" : \" not found\"));\r\n    }\r\n    //execute action if found\r\n    return fn === null || fn === void 0 ? void 0 : fn.call(this, newCtx), !!fn;\r\n}\r\nvar StateMachine = /** @class */ (function () {\r\n    function StateMachine(options) {\r\n        var _this = this;\r\n        this.settings = dab_1.obj({\r\n            id: options.id,\r\n            initial: interfaces_1.StateType[options.initial],\r\n            state: options.initial,\r\n            //ctx: options.ctx || {},\r\n            enabled: false,\r\n            stateList: new Map(),\r\n            log: !!options.log || false\r\n        });\r\n        //all defined states\r\n        utils_1.each(options.states, function (value, key) {\r\n            //if not key defined, then get it from key\r\n            !value.key && (value.key = interfaces_1.StateType[key]);\r\n            //register new state\r\n            _this.register(value);\r\n        });\r\n        this.settings.commonActions = new Map();\r\n        //all common actions\r\n        utils_1.each(options.commonActions, function (value, key) {\r\n            _this.settings.commonActions.set(key, value);\r\n        });\r\n        this.sendCmd = \"\";\r\n        this.log && console.log(\"[\" + this.stateName + \"]\");\r\n        this.transitioning = false;\r\n    }\r\n    Object.defineProperty(StateMachine.prototype, \"id\", {\r\n        get: function () { return this.settings.id; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"initial\", {\r\n        get: function () { return this.settings.initial; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"state\", {\r\n        get: function () { return this.settings.state; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"stateName\", {\r\n        get: function () { return interfaces_1.StateType[this.state]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"enabled\", {\r\n        get: function () { return this.settings.enabled; },\r\n        set: function (value) { this.settings.enabled = value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"data\", {\r\n        get: function () {\r\n            var state = this.getState(this.stateName);\r\n            return state ? state.data : undefined;\r\n        },\r\n        set: function (value) {\r\n            var state = this.getState(this.stateName);\r\n            state && (state.data = value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateMachine.prototype, \"log\", {\r\n        //console logging\r\n        get: function () { return this.settings.log; },\r\n        set: function (value) {\r\n            (this.settings.log = !!value)\r\n                && console.log(\"[\" + this.stateName + \"]\"); // to visually track who got the action\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StateMachine.prototype.getState = function (name) {\r\n        return this.settings.stateList.get(name);\r\n    };\r\n    /**\r\n     * @description executes and action on the current state\r\n     * @param action action to be executed\r\n     * @param data data to be sent\r\n     */\r\n    StateMachine.prototype.send = function (action, newCtx) {\r\n        if (this.transitioning) {\r\n            console.log(\"action: \" + interfaces_1.ActionType[action] + \" discarded while transitioning to a new state\");\r\n            //return false;\r\n        }\r\n        return sendAction.call(this, action, newCtx);\r\n    };\r\n    /**\r\n     * @description transition to a new state and executes and action on that new state\r\n     * @param state new state to go to\r\n     * @param action action to be executed on the new state\r\n     * @param data data to sent to new action\r\n     */\r\n    StateMachine.prototype.transition = function (state, action, newCtx, data) {\r\n        this.transitioning = true;\r\n        var stateName = interfaces_1.StateType[state], newStateDef = this.getState(stateName);\r\n        //https://kentcdodds.com/blog/implementing-a-simple-state-machine-library-in-javascript\r\n        this.log\r\n            //&& !(action == ActionType.FORWARD_OVER)\r\n            && console.log(\"[\" + stateName + \"]\" + (newStateDef ? \"\" : \" not found!\") + (this.state == state ? \" same state\" : \"\"));\r\n        if (!newStateDef || !this.enabled)\r\n            return false;\r\n        //save new state to receive SEND commands\r\n        this.settings.state = state;\r\n        //persists data between state transitions\r\n        if (data == undefined)\r\n            !newStateDef.persistData && (this.data != undefined) && (this.data = undefined);\r\n        else\r\n            //overrides state persistData\r\n            this.data = data;\r\n        var result = sendAction.call(this, action, newCtx);\r\n        //action executed already\r\n        this.transitioning = false;\r\n        return result;\r\n    };\r\n    /**\r\n     * @description register a new state\r\n     * @param state new state data\r\n     */\r\n    StateMachine.prototype.register = function (state) {\r\n        //find it by name\r\n        var key = interfaces_1.StateType[state === null || state === void 0 ? void 0 : state.key];\r\n        if (!state || this.getState(key))\r\n            return false;\r\n        //initial state value\r\n        !state.data && (state.data = undefined);\r\n        //save\r\n        this.settings.stateList.set(key, state);\r\n        /*this.settings.states.set(key, obj(<IMachineState>{\r\n            key: state.key,\r\n            overType: state.overType,\r\n            actions: state.actions\r\n        }));*/\r\n        return true;\r\n    };\r\n    return StateMachine;\r\n}());\r\nexports.default = StateMachine;\r\n\n\n//# sourceURL=webpack:///./src/stateMachine.ts?");

/***/ }),

/***/ "./src/tooltip.ts":
/*!************************!*\
  !*** ./src/tooltip.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar label_1 = __webpack_require__(/*! ./label */ \"./src/label.ts\");\r\nvar Tooltip = /** @class */ (function (_super) {\r\n    __extends(Tooltip, _super);\r\n    function Tooltip(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.svgRect = utils_1.tag(\"rect\", \"\", {\r\n            x: 0,\r\n            y: 0,\r\n            rx: _this.borderRadius\r\n        });\r\n        _this.g.insertBefore(_this.svgRect, _this.t);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Tooltip.prototype, \"type\", {\r\n        get: function () { return types_1.Type.TOOLTIP; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"borderRadius\", {\r\n        get: function () { return this.settings.borderRadius; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"size\", {\r\n        /*\tDOESN'T WORK\r\n        set visible(value: boolean) {\r\n            //weird way to access an ancestor property  super.visible doesn't work\r\n            super[\"visible\"] = value;\r\n        }\r\n        */\r\n        get: function () {\r\n            var b = this.t.getBBox();\r\n            return dab_1.obj({\r\n                width: Math.round(b.width) + 10,\r\n                height: Math.round(b.height) + this.gap\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Tooltip.prototype.setVisible = function (value) {\r\n        _super.prototype.setVisible.call(this, value);\r\n        //clear values\r\n        //because Firefox give DOM not loaded on g.getBox() because it's not visible yet\r\n        // so I've to display tooltip in DOM and then continue setting text, move, font-size,...\r\n        this.text = this.t.innerHTML = '';\r\n        return this;\r\n    };\r\n    Tooltip.prototype.setBorderRadius = function (value) {\r\n        this.settings.borderRadius = value | 0;\r\n        return this.build();\r\n    };\r\n    Tooltip.prototype.build = function () {\r\n        this.gap = Math.round(this.fontSize / 2) + 1;\r\n        dab_1.attr(this.t, {\r\n            \"font-size\": this.fontSize,\r\n            x: Math.round(this.gap / 2),\r\n            y: this.fontSize //+ 8\r\n        });\r\n        var s = this.size;\r\n        dab_1.attr(this.svgRect, {\r\n            width: s.width,\r\n            height: s.height,\r\n            rx: this.borderRadius\r\n        });\r\n        return this;\r\n    };\r\n    Tooltip.prototype.setText = function (value) {\r\n        var arr = dab_1.isStr(value) ?\r\n            value.split(/\\r?\\n/) :\r\n            value, txtArray = [];\r\n        //catch UI error here\r\n        //if (!Array.isArray(arr)) {\r\n        //\tconsole.log(\"ooooh\")\r\n        //}\r\n        this.t.innerHTML = arr.map(function (value, ndx) {\r\n            var txt = '', attrs = '';\r\n            if (dab_1.isStr(value)) {\r\n                txt = value;\r\n            }\r\n            else if (dab_1.pojo(value)) {\r\n                txt = value.text;\r\n                attrs = utils_1.map(utils_1.filter(value, function (val, key) { return key != 'text'; }), function (v, k) { return k + \"=\\\"\" + v + \"\\\"\"; }).join('');\r\n            }\r\n            txtArray.push(txt);\r\n            return \"<tspan x=\\\"5\\\" dy=\\\"\" + ndx + \".1em\\\"\" + attrs + \">\" + txt + \"</tspan>\";\r\n        }).join('');\r\n        //set text\r\n        this.text = txtArray.join('\\r\\n');\r\n        return this.build();\r\n    };\r\n    Tooltip.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            name: \"tooltip\",\r\n            class: \"tooltip\",\r\n            borderRadius: 4\r\n        });\r\n    };\r\n    return Tooltip;\r\n}(label_1.Label));\r\nexports.default = Tooltip;\r\n//tooltip.move(200,50).setText(\"One line\").visible = true;\r\n//tooltip.move(200,50).setText(\"One line\\r\\nTwo lines and\").visible = true;\r\n//tooltip.move(200,50).setText([{ text : \"One line\" }, { text: \"Two line and more...\" } ]).visible = true;\r\n//tooltip.move(200,50).setText([{ text : \"One line\" }, { text: \"Two line and more...\", fill: \"blue\"  } ]).visible = true;\r\n\n\n//# sourceURL=webpack:///./src/tooltip.ts?");

/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypedClass = exports.Type = void 0;\r\nvar Type;\r\n(function (Type) {\r\n    Type[Type[\"UNDEFINED\"] = 0] = \"UNDEFINED\";\r\n    Type[Type[\"EC\"] = 1] = \"EC\";\r\n    Type[Type[\"WIRE\"] = 2] = \"WIRE\";\r\n    Type[Type[\"BOND\"] = 3] = \"BOND\";\r\n    Type[Type[\"LABEL\"] = 4] = \"LABEL\";\r\n    Type[Type[\"WIN\"] = 5] = \"WIN\";\r\n    Type[Type[\"TOOLTIP\"] = 6] = \"TOOLTIP\";\r\n    Type[Type[\"HIGHLIGHT\"] = 7] = \"HIGHLIGHT\";\r\n})(Type = exports.Type || (exports.Type = {}));\r\n;\r\nvar TypedClass = /** @class */ (function () {\r\n    function TypedClass() {\r\n    }\r\n    return TypedClass;\r\n}());\r\nexports.TypedClass = TypedClass;\r\n\n\n//# sourceURL=webpack:///./src/types.ts?");

/***/ }),

/***/ "./src/units.ts":
/*!**********************!*\
  !*** ./src/units.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\n//... in progress ...\r\n//npm https://www.npmjs.com/package/@dabberio/electric-units\r\nvar Unit = /** @class */ (function () {\r\n    function Unit(n) {\r\n        var _this = this;\r\n        this.toString = function () {\r\n            return \"\" + _this.value + _this.prefix + _this.unit;\r\n        };\r\n        if (!dab_1.isStr(n) || !(n = n.trim()))\r\n            throw \"number \" + n + \" must be a not empty string\";\r\n        var ndx = n.length - 1, error = function () { return \"invalid number: \" + n; }, indexOf = function (s, x, u) { return s.indexOf(u ? x.toUpperCase() : x); };\r\n        //defaults\r\n        this.settings = {\r\n            unit: -1,\r\n            prefix: -1,\r\n            value: NaN\r\n        };\r\n        //extract unit\r\n        //start with full name first\r\n        if ((this.settings.unit = Unit.unitNames.findIndex(function (u) { return n.toUpperCase().endsWith(u.toUpperCase()); })) >= 0) {\r\n            ndx -= Unit.unitNames[this.settings.unit].length;\r\n            //now try with unit symbols as is, and then uppercased\r\n        }\r\n        else if ((this.settings.unit = indexOf(Unit.unitSymbols, n[ndx], 0)) >= 0 ||\r\n            (this.settings.unit = indexOf(Unit.unitSymbols, n[ndx], 1)) >= 0) {\r\n            ndx--;\r\n        }\r\n        else\r\n            throw error();\r\n        //extract unit prefix\r\n        if ((this.settings.prefix = Unit.prefixSymbols.indexOf(n[ndx])) == -1) {\r\n            this.settings.prefix = 10; // position of symbol and name: '', exponent: 0\r\n            ndx++;\r\n        }\r\n        //last char has to be a number\r\n        if (isNaN(parseInt(n[ndx - 1])))\r\n            throw error();\r\n        //extract number\r\n        this.settings.value = parseFloat(n.substr(0, ndx));\r\n    }\r\n    Object.defineProperty(Unit.prototype, \"name\", {\r\n        //get unit name and symbol\r\n        get: function () { return Unit.unitNames[this.settings.unit]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"unit\", {\r\n        get: function () { return Unit.unitSymbols[this.settings.unit]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"prefix\", {\r\n        get: function () { return Unit.prefixSymbols[this.settings.prefix]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"exponent\", {\r\n        get: function () { return Math.pow(10, Unit.prefixExponents[this.settings.prefix]); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"value\", {\r\n        get: function () { return this.settings.value; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    //self sufficient dummy\r\n    Unit.split = function (text) { return text.split('|'); };\r\n    //prefixNames = ['yocto', 'zepto', 'atto', 'femto', 'pico', 'nano', 'micro', 'mili', 'centi', 'deci', '',\r\n    //\t'deca', 'hecto', 'kilo', 'mega', 'giga', 'tera', 'peta', 'exa', 'zetta', 'yotta'],\r\n    Unit.prefixSymbols = Unit.split('y|z|a|f|p|n|μ|m|c|d||da|h|k|M|G|T|P|E|Z|Y');\r\n    //['y', 'z', 'a', 'f', 'p', 'n', 'μ', 'm', 'c', 'd', '',\r\n    //'da', 'h', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\r\n    Unit.prefixExponents = [-24, -21, -18, -15, -12, -9, -6, -3, -2, -1, 0, 1, 2, 3, 6, 9, 12, 15, 18, 21, 24];\r\n    Unit.unitNames = Unit.split('Ampere|Volt|Ohm|Farad|Watt|Henry|Meter');\r\n    //['Ampere', 'Volt', 'Ohm', 'Farad', 'Watt', 'Henry', 'Meter'],\r\n    Unit.unitSymbols = Unit.split('A|V|Ω|F|W|H|m');\r\n    return Unit;\r\n}());\r\nexports.default = Unit;\r\n\n\n//# sourceURL=webpack:///./src/units.ts?");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n//... still in progress ...\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.basePath = exports.gEId = exports.qSA = exports.qS = exports.ready = exports.prop = exports.filterArray = exports.filter = exports.map = exports.each = exports.html = exports.svg = exports.tag = exports.pad = exports.exec = exports.templatesDOM = exports.templatesUrl = void 0;\r\nvar ajaxp_1 = __webpack_require__(/*! ./ajaxp */ \"./src/ajaxp.ts\");\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nfunction scriptContent(key, text) {\r\n    var regexSingle = /<script[^\\>]*>([\\s\\S]*?)<\\/script>/gi, //regex are not reusable\r\n    match = regexSingle.exec(text);\r\n    //window[key] = text;\r\n    return match ? match[1].replace(/\\r|\\n/g, \"\").trim() : \"\";\r\n}\r\n;\r\n//ajaxp.get(`${base}api/1.0/templates/circuits/stockSymbol,gate_card`, { 'responseType': 'json' })\r\nexports.templatesUrl = function (url, obj) { return ajaxp_1.default.get(url, obj || { 'responseType': 'json' })\r\n    .then(function (data) {\r\n    var regex = /<script.*?id\\s*=\\s*['\"]([^'|^\"]*)['\"].*?>([\\s\\S]*?)<\\/script>/gmi, templates = {}, match;\r\n    if (dab_1.isObj(data)) {\r\n        exports.each(data.result, function (d, k) {\r\n            templates[k] = scriptContent(k, d.text);\r\n        });\r\n    }\r\n    else {\r\n        while ((match = regex.exec(data)))\r\n            // full match is in match[0], whereas captured groups are in ...[1], ...[2], etc.\r\n            templates[match[1]] = match[2].replace(/\\r|\\n/g, \"\").trim();\r\n    }\r\n    //return scriptContent(data.matches['stockSymbol'].text);\t\t\r\n    return templates;\r\n}); };\r\nexports.templatesDOM = function (query) {\r\n    return new Promise(function (resolve, reject) {\r\n        //query:string   id0|id1|id[n]\r\n        var templates = {\r\n            count: 0\r\n        }, idList = Array.isArray(query) ? query : query.split('|');\r\n        idList.forEach(function (id) {\r\n            var tmpl = qS(\"#\" + id), src = tmpl ? tmpl.innerHTML.replace(/\\r|\\n/g, \"\").trim() : undefined;\r\n            tmpl && (templates.count++, templates[id] = src);\r\n        });\r\n        resolve(templates);\r\n    });\r\n};\r\nexports.exec = function (fn, error) {\r\n    var o = {};\r\n    //let\t\t\to : execObj= {};\r\n    try {\r\n        o.result = fn();\r\n    }\r\n    catch (ex) {\r\n        o.error = ex;\r\n        dab_1.isFn(error) && error(o);\r\n    }\r\n    return o;\r\n};\r\nexports.pad = function (t, e, ch) { return new Array((e || 2) + 1 - String(t).length).join(ch ? ch : '0') + t; };\r\nexports.tag = function (tagName, id, nsAttrs) { return (id && (nsAttrs.id = id),\r\n    dab_1.attr(document.createElementNS(dab_1.consts.svgNs, tagName), nsAttrs)); };\r\nexports.svg = function (html) {\r\n    var template = document.createElementNS(dab_1.consts.svgNs, \"template\");\r\n    template.innerHTML = html;\r\n    return template.children[0];\r\n};\r\nexports.html = function (html) {\r\n    var template = document.createElement(\"template\");\r\n    template.innerHTML = html;\r\n    return template.content.firstChild;\r\n};\r\nexports.each = function (obj, fn) {\r\n    if (!dab_1.isFn(fn) || !obj)\r\n        return;\r\n    var ndx = 0;\r\n    for (var key in obj)\r\n        if (!obj.hasOwnProperty || obj.hasOwnProperty(key))\r\n            fn(obj[key], key, ndx++); // (value, key, index)\r\n};\r\nexports.map = function (obj, fn) {\r\n    var arr = [];\r\n    exports.each(obj, function (value, key, ndx) {\r\n        arr.push(fn(value, key, ndx));\r\n    });\r\n    return arr;\r\n};\r\nexports.filter = function (obj, fn) {\r\n    var o = {};\r\n    exports.each(obj, function (value, key, ndx) {\r\n        fn(value, key, ndx) && (o[key] = value);\r\n    });\r\n    return o;\r\n};\r\n/**\r\n * @description\r\n * @param obj an object to filter\r\n * @param fn if it returns true array[]= value (key is lost), if object array[] = object, otherwise discarded\r\n */\r\nexports.filterArray = function (obj, fn) {\r\n    var o = [];\r\n    exports.each(obj, function (value, key, ndx) {\r\n        var res = fn(value, key, ndx);\r\n        if (res === true)\r\n            o.push(value);\r\n        else if (dab_1.pojo(res))\r\n            o.push(res);\r\n    });\r\n    return o;\r\n};\r\nexports.prop = function (o, path, value) {\r\n    var r = path.split('.').map(function (s) { return s.trim(); }), last = r.pop(), result = void 0;\r\n    for (var i = 0; !!o && i < r.length; i++) {\r\n        o = o[r[i]];\r\n    }\r\n    result = o && last && o[last];\r\n    if (value == undefined) {\r\n        return result;\r\n    }\r\n    else {\r\n        return (result != undefined) && (o[last] = value, true);\r\n    }\r\n};\r\nexports.ready = function (fn) {\r\n    if (!dab_1.isFn(fn)) {\r\n        return !1;\r\n    }\r\n    if (document.readyState != \"loading\")\r\n        return (fn(), !0);\r\n    else if (document[\"addEventListener\"])\r\n        dab_1.aEL(document, \"DOMContentLoaded\", fn, false);\r\n    else\r\n        document.attachEvent(\"onreadystatechange\", function () {\r\n            if (document.readyState == \"complete\")\r\n                fn();\r\n        });\r\n    return !0;\r\n};\r\nvar qS = function (s) { return document.querySelector(s); };\r\nexports.qS = qS;\r\nexports.qSA = function (s) { return document.querySelectorAll(s); };\r\nexports.gEId = function (id) { return document.getElementById(id); };\r\nexports.basePath = function () {\r\n    var meta = qS('meta[name=\"base\"]');\r\n    return meta ? meta.getAttribute('content') : \"\";\r\n};\r\n\n\n//# sourceURL=webpack:///./src/utils.ts?");

/***/ }),

/***/ "./src/wire.ts":
/*!*********************!*\
  !*** ./src/wire.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dab_1 = __webpack_require__(/*! ./dab */ \"./src/dab.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\nvar itemsBoard_1 = __webpack_require__(/*! ./itemsBoard */ \"./src/itemsBoard.ts\");\r\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\r\nvar rect_1 = __webpack_require__(/*! ./rect */ \"./src/rect.ts\");\r\nvar Wire = /** @class */ (function (_super) {\r\n    __extends(Wire, _super);\r\n    function Wire(circuit, options) {\r\n        var _this = _super.call(this, circuit, options) || this;\r\n        _this.settings.polyline = utils_1.tag(\"polyline\", \"\", {\r\n            \"svg-type\": \"line\",\r\n            line: \"0\",\r\n            points: \"\",\r\n        });\r\n        _this.g.append(_this.settings.polyline);\r\n        //set new points in polyline\r\n        _this.setPoints(options.points);\r\n        //bond wire ends if any\r\n        if (options.start) {\r\n            //...\r\n        }\r\n        if (options.end) {\r\n            //...\r\n        }\r\n        //place it\r\n        _this.move(_this.settings.points[0].x, _this.settings.points[0].y);\r\n        //signal component creation\r\n        _this.onProp && _this.onProp({\r\n            id: \"#\" + _this.id,\r\n            args: {\r\n                id: _this.id,\r\n                name: _this.name,\r\n                x: _this.x,\r\n                y: _this.y,\r\n                points: _this.settings.points,\r\n                bonds: '[' + _this.bonds.map(function (b) { return b.link; }).join(', ') + ']'\r\n            },\r\n            method: 'create',\r\n            where: 1 //signals it was a change inside the object\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Wire.prototype, \"type\", {\r\n        get: function () { return types_1.Type.WIRE; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Wire.prototype, \"count\", {\r\n        get: function () { return this.settings.points.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Wire.prototype, \"last\", {\r\n        get: function () { return this.settings.points.length - 1; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Wire.prototype, \"lastLine\", {\r\n        get: function () { return this.editMode ? this.settings.lines.length : 0; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Wire.prototype, \"isOpen\", {\r\n        get: function () { return !this.nodeBonds(0) || !this.nodeBonds(this.last); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Wire.prototype.rect = function () { return rect_1.default.create(this.box); };\r\n    Object.defineProperty(Wire.prototype, \"points\", {\r\n        get: function () { return Array.from(this.settings.points); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Wire.prototype, \"editMode\", {\r\n        //edit-mode\r\n        get: function () { return this.settings.edit; },\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.editMode == value) //avoid duplicated\r\n                return;\r\n            //if editMode == true\r\n            if (this.editMode) {\r\n                //\twill change to false\r\n                //\t\t.destroy lines\r\n                this.settings.lines = this.settings.lines.filter(function (ln) {\r\n                    _this.g.removeChild(ln);\r\n                    return false;\r\n                });\r\n                //\t\t.recreate polyline\r\n                this.refresh();\r\n                //\t\t.show polyline\r\n                dab_1.removeClass(this.settings.polyline, \"hide\");\r\n            }\r\n            else {\r\n                //if editMode == false\r\n                //\twill change to true\r\n                //\t\t.hide polyline\r\n                dab_1.addClass(this.settings.polyline, \"hide\");\r\n                //\t\t.create lines\r\n                for (var i = 0, a = this.settings.points[0], cnt = this.last; i < cnt; i++) {\r\n                    var b = this.settings.points[i + 1], ln = utils_1.tag(\"line\", \"\", {\r\n                        \"svg-type\": \"line\",\r\n                        line: (i + 1),\r\n                        x1: a.x,\r\n                        y1: a.y,\r\n                        x2: b.x,\r\n                        y2: b.y\r\n                    });\r\n                    this.settings.lines.push(ln);\r\n                    this.g.insertBefore(ln, this.settings.polyline);\r\n                    a = b;\r\n                }\r\n            }\r\n            this.settings.edit = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Wire.prototype.refresh = function () {\r\n        //set new points\r\n        dab_1.attr(this.settings.polyline, {\r\n            points: this.settings.points.map(function (p) { return p.x + \", \" + p.y; }).join(' ')\r\n        });\r\n        return this;\r\n    };\r\n    Wire.prototype.nodeRefresh = function (node) {\r\n        var _this = this;\r\n        if (this.editMode) {\r\n            //update lines  only if in edit mode\r\n            var ln = void 0, p = this.settings.points[node];\r\n            (ln = this.settings.lines[node - 1]) && dab_1.attr(ln, { x2: p.x, y2: p.y }); //line where i(p) is second point\r\n            (ln = this.settings.lines[node]) && dab_1.attr(ln, { x1: p.x, y1: p.y }); //line where i(p) is first point\r\n        }\r\n        else {\r\n            //full refresh because polyline\r\n            this.refresh();\r\n        }\r\n        if (!(node == 0 || node == this.last)) {\r\n            var bond = this.nodeBonds(node), p_1 = this.settings.points[node];\r\n            bond && bond.to.forEach(function (b) {\r\n                var _a;\r\n                (_a = _this.circuit.get(b.id)) === null || _a === void 0 ? void 0 : _a.setNode(b.ndx, p_1);\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @description returns true if a point is valid\r\n     * @comment later see how to change this to validNode, conflict in !ic.valid(node)\r\n     * \t\tbecause we don't know if it's a IC or a wire\r\n     * @param {number} node 0-based point index\tit can be -1\r\n     * @returns {boolean} true if point is valid\r\n     */\r\n    Wire.prototype.valid = function (node) {\r\n        //(i) => ((i = i | 0) >= 0 && i < points.length);\r\n        //return (node = <any>node | 0) >= -1 && node < this.points.length;\t// NOW ACCEPTS  -1\r\n        //\t-1  0  ... last  \t   -> true\r\n        //\t\"-1\"  \"0\"  ... \"last\"  -> true\r\n        //\t\"\"  \"  \"  \"1.\"  \"1a\"   -> false\r\n        return node >= -1 //String(Number(node)) == node\r\n            && node <= this.last; // NOW ACCEPTS  -1\r\n    };\r\n    Wire.prototype.getNode = function (node) {\r\n        var p = this.settings.points[node];\r\n        p && (p = p.clone());\r\n        return p;\r\n    };\r\n    Wire.prototype.appendNode = function (p) {\r\n        return !this.editMode && (this.settings.points.push(p), this.refresh(), true);\r\n    };\r\n    Wire.prototype.setNode = function (node, p) {\r\n        //because no transformation, p is the same, just save it\r\n        this.settings.points[node].x = p.x | 0; // remove decimals \"trunc\"\r\n        this.settings.points[node].y = p.y | 0;\r\n        //this.updateTransformPoint(node, p, false);\r\n        return this.nodeRefresh(node);\r\n    };\r\n    Wire.prototype.nodeHighlightable = function (node) {\r\n        //any Wire node and that it is not a start|end bonded node\r\n        return this.valid(node) //&& this.editMode\r\n            && (!(this.nodeBonds(node) && (node == 0 || node == this.last)));\r\n    };\r\n    Wire.prototype.setPoints = function (points) {\r\n        if (!dab_1.isArr(points)\r\n            || points.length < 2)\r\n            throw 'Poliwire min 2 points';\r\n        //can only be called when editMode == false\r\n        if (!this.editMode) {\r\n            this.settings.points = points.map(function (p) { return new point_1.default(p.x | 0, p.y | 0); });\r\n            //clean lines and set polyline new points\r\n            this.settings.lines = [];\r\n            this.refresh();\r\n        }\r\n        return this;\r\n    };\r\n    Wire.prototype.overNode = function (p, ln) {\r\n        var _this = this;\r\n        var endPoint = ln, lineCount = this.settings.lines.length, isLine = function (ln) { return ln && (ln <= lineCount); }, isAround = function (p, x, y) {\r\n            return (x >= p.x - _this.settings.pad) &&\r\n                (x <= p.x + _this.settings.pad) &&\r\n                (y >= p.y - _this.settings.pad) &&\r\n                (y <= p.y + _this.settings.pad);\r\n        };\r\n        //if not in editMode, then ln will be 0, so reset to 1, and last point is the last\r\n        !this.editMode && (ln = 1, endPoint = this.last, lineCount = 1);\r\n        if (isLine(ln)) {\r\n            return isAround(this.settings.points[ln - 1], p.x, p.y) ?\r\n                ln - 1 :\r\n                (isAround(this.settings.points[endPoint], p.x, p.y) ? endPoint : -1);\r\n        }\r\n        return -1;\r\n    };\r\n    Wire.prototype.findLineNode = function (p, line) {\r\n        var fn = function (np) { return (Math.pow(p.x - np.x, 2) + Math.pow(p.y - np.y, 2)) <= 25; };\r\n        ((line <= 0 || line >= this.last) && (line = this.findNode(p), 1))\r\n            || fn(this.settings.points[line])\r\n            || fn(this.settings.points[--line])\r\n            || (line = -1);\r\n        return line;\r\n    };\r\n    //don't care if wire is in editMode or not\r\n    Wire.prototype.findNode = function (p) {\r\n        for (var i = 0, thisP = this.settings.points[i], len = this.settings.points.length; i < len; thisP = this.settings.points[++i]) {\r\n            //radius 5 =>  5^2 = 25\r\n            if ((Math.pow(p.x - thisP.x, 2) + Math.pow(p.y - thisP.y, 2)) <= 25)\r\n                return i;\r\n        }\r\n        return -1;\r\n    };\r\n    Wire.prototype.deleteLine = function (line) {\r\n        //cannot delete fir or last line\r\n        if (line <= 1 || line >= this.last)\r\n            return false;\r\n        var savedEditMode = this.editMode;\r\n        this.editMode = false;\r\n        deleteWireNode.call(this, line);\r\n        deleteWireNode.call(this, line - 1);\r\n        this.editMode = savedEditMode;\r\n        return true;\r\n    };\r\n    Wire.prototype.deleteNode = function (node) {\r\n        var savedEditMode = this.editMode, p;\r\n        this.editMode = false;\r\n        p = deleteWireNode.call(this, node);\r\n        this.editMode = savedEditMode;\r\n        return p;\r\n    };\r\n    Wire.prototype.insertNode = function (node, p) {\r\n        //cannot insert node in first or after last position\r\n        if (node <= 0 || node > this.last || isNaN(node))\r\n            return false;\r\n        var savedEditMode = this.editMode;\r\n        this.editMode = false;\r\n        //fix all bonds link indexes from last to this node\r\n        for (var n = this.last; n >= node; n--) {\r\n            fixBondIndexes.call(this, n, n + 1);\r\n        }\r\n        this.settings.points.splice(node, 0, p);\r\n        this.editMode = savedEditMode;\r\n        return true;\r\n    };\r\n    /**\r\n     * @description standarizes a wire node number to 0..points.length\r\n     * @param {number} node 0-based can be -1:last 0..points.length-1\r\n     * @returns {number} -1 for wrong node or standarized node number, where -1 == last, otherwise node\r\n     */\r\n    Wire.prototype.standarizeNode = function (node) {\r\n        if (this.valid(node))\r\n            return node == -1 ? this.last : node;\r\n        return -1;\r\n    };\r\n    Wire.prototype.windowProperties = function () { return [\"id\", \"bonds\"]; };\r\n    Wire.prototype.prop = function (propName) {\r\n        //a wire discards position property this.p\r\n        if (propName == \"p\")\r\n            return void 0;\r\n        return _super.prototype.prop.call(this, propName);\r\n    };\r\n    Wire.prototype.propertyDefaults = function () {\r\n        return dab_1.extend(_super.prototype.propertyDefaults.call(this), {\r\n            name: \"wire\",\r\n            class: \"wire\",\r\n            pad: 5,\r\n            edit: false // initial is false\r\n        });\r\n    };\r\n    return Wire;\r\n}(itemsBoard_1.ItemBoard));\r\nexports.default = Wire;\r\nfunction deleteWireNode(node) {\r\n    var last = this.last;\r\n    //first or last node cannot be deleted, only middle nodes\r\n    if (node <= 0 || node >= last || isNaN(node))\r\n        return;\r\n    this.unbondNode(node);\r\n    fixBondIndexes.call(this, last, last - 1);\r\n    return this.settings.points.splice(node, 1)[0];\r\n}\r\nfunction fixBondIndexes(node, newIndex) {\r\n    var _this = this;\r\n    var lastBond = this.nodeBonds(node);\r\n    if (!lastBond)\r\n        return false;\r\n    //fix this from index\r\n    lastBond.from.ndx = newIndex;\r\n    //because it's a wire last node, it has only one destination, so fix all incoming indexes\r\n    lastBond.to.forEach(function (bond) {\r\n        var compTo = _this.circuit.get(bond.id), compToBonds = compTo === null || compTo === void 0 ? void 0 : compTo.nodeBonds(bond.ndx);\r\n        compToBonds === null || compToBonds === void 0 ? void 0 : compToBonds.to.filter(function (b) { return b.id == _this.id; }).forEach(function (b) {\r\n            b.ndx = newIndex;\r\n        });\r\n    });\r\n    //move last bond entry\r\n    delete this.settings.bonds[node];\r\n    this.settings.bonds[newIndex] = lastBond;\r\n    return true;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/wire.ts?");

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"electron\");\n\n//# sourceURL=webpack:///external_%22electron%22?");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"events\");\n\n//# sourceURL=webpack:///external_%22events%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"stream\");\n\n//# sourceURL=webpack:///external_%22stream%22?");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"string_decoder\");\n\n//# sourceURL=webpack:///external_%22string_decoder%22?");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"timers\");\n\n//# sourceURL=webpack:///external_%22timers%22?");

/***/ })

/******/ });
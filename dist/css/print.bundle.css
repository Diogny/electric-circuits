/* makes SVG Text non selectable*/
#board text {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: none;
}

circle,
ellipse,
rect,
line,
polyline,
polygon,
path {
  shape-rendering: auto;
}

/*********** EC ***********/

.ec {
  fill: #f3f0f0;
  stroke: black;
  stroke-opacity: 1;
  stroke-width: 2px;
  stroke-linecap: butt;
  fill-rule: evenodd;
}

body.dark .ec [svg-type="body"] {
  stroke: #ffffff;
}
body.dark .ec {
  fill: black;
  stroke: white;
}

g[svg-comp] > path[svg-type="node"] {
  stroke-width: 1px;
  fill: darkgray;
}

g[svg-comp] > .thick {
  stroke-width: 2px;
}

g[svg-comp] > .thick3 {
  stroke-width: 3px;
}

.ec > .no-fill,
.ec.selected > .no-fill {
  fill: none;
}

.ec text {
  fill: black;
  stroke: black;
  stroke-width: 0.5px;
  font-family: monospace;
  font-size: 10px;
}
body.dark g text {
  fill: white;
  stroke: white;
}
g[svg-comp] text.title {
  font-size: 18px;
}

g[svg-comp] text.middle {
  font-size: 27px;
}
g[svg-comp] text.big {
  font-size: 50px;
}

g.label > text {
  font-family: monospace;
  stroke-width: 0.5px;
  font-size: 14px;
}

g[svg-comp] > circle[svg-type="node"],
g[svg-comp] > circle[svg-type="node-x"],
g[svg-comp] > circle.node {
  fill: #bcdcfb;
  stroke-width: 2px;
  stroke: red;
}

/*********** WIRE ***********/
.wire > line,
.wire > polyline {
  stroke-width: 2px;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
}

body.light .wire > line,
body.light .wire > polyline {
  stroke: rgb(82, 80, 80);
}
body.dark .wire > line,
body.dark .wire > polyline {
  stroke: whitesmoke;
}

/********************** Dash **************************/
.dash {
  stroke-width: 1px;
}
rect.dash {
  fill: none;
}

.light line.dash,
.light rect.dash {
  stroke: rgb(150, 150, 150);
}
.dark line.dash,
.dark rect.dash {
  stroke: rgb(150, 150, 150);
}

/*tooltip*/
.tooltip > rect {
  stroke-width: 1;
  fill-opacity: 0.9;
  stroke-opacity: 0.9;
}
.light g.tooltip > rect {
  fill: white;
  stroke: black;
}
.dark g.tooltip > rect {
  fill: black;
  stroke: white;
}
.light g.tooltip > text {
  fill: #656262;
}
.dark g.tooltip > text {
  fill: white;
}

/********************  BASE WINDOW ********************/

.win {
  /*min-width: 100px;
	min-height: 100px;*/
  position: absolute;
  border: 1px solid #d6d6d6; /*1px solid rgba(255, 255, 255, 0.2);*/
  border-radius: 1px;
  display: flex;
  flex-direction: column;
  background-color: #dedcdc;
  color: black;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1), 0 1px 8px rgba(0, 0, 0, 0.2);
}

.win.hide {
  display: none;
}

/********************  APP WINDOW ********************/

.win.props {
  border: 1px solid #c5c2c2;
}

.win.props.collapsed {
  height: 20px !important;
}

/* HEADER */
.win.props > header {
  background: rgba(0, 0, 0, 0.12);
  /*color: black;*/
  position: relative;
  line-height: 18px;
}
.win.props > header > .title {
  padding: 2px 6px;
}

.win.props.collapsed > main,
.win.props.collapsed > footer {
  display: none;
}

.win.props > header.dragging {
  cursor: move;
}

/* HEADER Title */
.win.props > header > div:nth-of-type(1) {
  font-size: 14px;
}

/* HEADER buttons */
.win.props > header > div:nth-of-type(2) {
  position: absolute;
  top: 2px;
  right: 2px;
}

.win.props > header > div > img,
.win.props > footer > div > img {
  /* float: right;*/
  cursor: pointer;
}

.win.props > header > div:nth-of-type(2) > img:nth-of-type(1) {
  /*content: url(../img/arrow-up-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/arrow-up-16x16.png);
}

.win.props.collapsed > header > div:nth-of-type(2) > img:nth-of-type(1) {
  /*content: url(../img/arrow-down-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/arrow-down-16x16.png);
}

.win.props > header > div:nth-of-type(2) > img:nth-of-type(2) {
  /*content: url(../img/close-p3-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/close-p3-16x16.png);
}

.win.props > header > div:nth-of-type(2) > img:hover {
  background-color: red;
}

/* MAIN */
.win.props > main {
  height: 100%;
  /*width: 100%;*/
  background: rgba(10, 10, 10, 0.1);
  flex: 1;
  margin: 0;
  padding: 4px;
}

.win.props > main.hide {
  display: none;
}

.win.props > main input.prop {
  width: 80px;
  height: 16px;
  background-color: #d0d0d0;
  border-color: #cacaca;
}

.ec-container {
  margin: 6px 2px;
}

.ec-container > span.label {
  padding: 2px;
  margin-right: 10px;
}

.ec-container > span.prop {
  color: #777474;
}

.ec-container > .rot {
  display: inline-block;
  background-color: #b8bbbd; /*#3988ce;*/
  padding: 1px 2px;
  border: 1px solid #aba6a6;
}

.rot > .prop {
  /* border: 1px solid gray; */
  padding: 1px 6px;
  color: white;
}

.rot > img {
  cursor: pointer;
}

/* FOOTER */
.win.props > footer {
  margin: 0;
  font-size: 12px;
  padding: 2px 6px;
  border-top: 1px solid #d6d3d3;
  position: relative;
}

.win.props > footer.hide {
  display: none;
}

/* HEADER Title */
.win.props > footer > span {
  font-size: 14px;
}

/* HEADER buttons */
.win.props > footer > div {
  position: absolute;
  top: 2px;
  right: 2px;
}

.win.props > footer > div > img:nth-of-type(1) {
  /*content: url(../img/arrow-up-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/garbage-blk-p3.png);
}

.win.props > footer > div > img:hover {
  background-color: #d0cfcf;
}

/* Right Context window */

.light .win.ctx {
  background: rgba(0, 0, 0, 0.4);
  -webkit-backdrop-filter: blur(7px);
  backdrop-filter: blur(7px);
}
.dark .win.ctx {
  background: rgba(255, 255, 255, 0.4);
  -webkit-backdrop-filter: blur(7px);
  backdrop-filter: blur(7px);
}

.win.ctx > div {
  padding: 6px 8px;
  font-size: 14px;
}

.win.ctx > div:hover {
  background-color: #bdbdbf;
  color: white;
  cursor: pointer;
}

.light .win.ctx > div > span {
  color: white;
}
.dark .win.ctx > div > span {
  color: #fdfdfd;
}

.win.ctx > div > span.right {
  float: right;
}

.light .win.ctx > div[disabled] {
  background: rgba(0, 0, 0, 0.1);
}
.dark .win.ctx > div[disabled] {
  background: rgba(255, 255, 255, 0.1);
}

.win.ctx > div[disabled] > span {
  color: #aba8a8;
}

/*.win.ctx > div[disabled]:hover {
	cursor: not-allowed;
  }*/

/********************  DIALOG WINDOW ********************/

.win.dialog {
  position: absolute;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(5px);
  z-index: 1000;
  top: 0;
  left: 0;
  margin: 0;
  overflow: hidden;
}
.light .win.dialog {
  background: #35353452;
}
.dark .win.dialog {
  background: #b9b9b952;
}

.win.dialog > div.content {
  display: inline-block;
  margin: auto;
  background: #77948be0;
  padding: 10px 19px;
}
.win.dialog > div.content > h4,
.win.dialog > div.content > h5 {
  color: #4d4e4e;
}
.win.dialog > div.content > div {
  text-align: center;
}
.win.dialog > div.content > div > button {
  margin: 0px 4px;
  background-color: #d4d4cd;
  border-style: none;
}
.win.dialog > div.content > div > button:hover {
  background-color: #717272e0;
  color: white;
}
.win.dialog > div.content > form > fieldset > div > span[id] {
  max-width: 300px;
  display: inline-block;
  overflow: hidden;
  height: 19px;
  line-height: 19px;
  margin: 0 1em 0 0;
  vertical-align: middle;
}
.win.dialog > div.content > form > fieldset > div > span:not([id]) {
  color: red;
  font-size: 1em;
  font-weight: bolder;
  margin-left: 5px;
}

.hide {
  display: none;
}
body {
  overflow: hidden;
  position: relative;
}
#board-controls {
  margin: 12px 7px;
}
#board-controls > input {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
  border-left: 1px solid gray;
  border-right: none;
  padding: 4px 10px;
}
#board-controls > input.selected {
  color: white;
  background-color: #a0abab;
}
#board-controls > input:last-child {
  color: white;
  background-color: #32d6a1;
  border-right: 1px solid gray;
}
@media print {
  #board-controls {
    display: none;
  }
}


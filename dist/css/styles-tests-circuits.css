/************************ BOARD ************************/

#board {
  position: relative;
  overflow: hidden;
}

/* board grid size*/
.grid30x30 {
  background-size: 10px 10px;
  background-image: linear-gradient(
      to right,
      rgba(128, 128, 128, 0.1) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgba(128, 128, 128, 0.1) 1px, transparent 1px);
}

.grid45x45 {
  background-size: 15px 15px;
  background-image: linear-gradient(
      to right,
      rgba(128, 128, 128, 0.1) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgba(128, 128, 128, 0.1) 1px, transparent 1px);
}

.grid60x60 {
  background-size: 20px 20px;
  background-image: linear-gradient(
      to right,
      rgba(128, 128, 128, 0.1) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgba(128, 128, 128, 0.1) 1px, transparent 1px);
}

.grid-dots-60x60 {
  background: linear-gradient(90deg, #fff 19px, transparent 1%) center,
    linear-gradient(#fff 19px, transparent 1%) center, #a5a2a2;
  background-size: 20px 20px;
  background-position: 1px 1px;
  /* height: 100%; */
  /* width: 100%; */
  /* position: relative;*/
}

/* makes SVG Text non selectable*/
#board text {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: none;
}

line.dash,
rect.dash {
  stroke: rgb(0, 0, 0);
  stroke-width: 2;
}

rect.dash {
  fill: none;
}

/************************ EC ************************/

.ec {
  fill: none;
  stroke-opacity: 0.9;
  stroke-width: 1px;
  stroke-linecap: butt;
  fill-rule: evenodd;
}

g[svg-comp] > path[svg-type="node"] {
  stroke-width: 1px;
  fill: darkgray;
}
g[svg-comp]:hover {
  stroke: red;
  stroke-width: 1px !important;
}

.ec.white {
  stroke: black;
  fill: black;
}

g[svg-comp].white > [svg-type="body"],
.white {
  fill: white;
}

.ec.black {
  stroke: #807b7b;
  fill: #807b7b;
}

g[svg-comp].black > [svg-type="body"],
.black {
  fill: #636060;
}

g[svg-comp].black > text {
  fill: white;
  stroke: white;
}

.ec.green {
  stroke: #0d7537;
  fill: #0d7537;
}

g[svg-comp].green > [svg-type="body"],
.green {
  fill: #88dc88;
}

g[svg-comp] > .thick {
  stroke-width: 2px;
}

g[svg-comp] > .thick3 {
  stroke-width: 3px;
}

g[svg-comp] > .no-fill,
g[svg-comp].selected > .no-fill {
  fill: none;
}

g[svg-comp] text {
  fill: black;
  stroke: black;
  stroke-width: 0.5px;
  font-family: monospace;
  font-size: 10px;
}
g[svg-comp] text.title {
  font-size: 18px;
}

g[svg-comp] text.big {
  font-size: 50px;
}

g[svg-comp] > circle[svg-type="node"],
g[svg-comp] > circle[svg-type="node-x"] {
  fill: #bcdcfb;
  stroke-width: 2px;
  stroke: red;
}

.vcc {
  stroke: red;
}

.gnd {
  stroke: black;
}

.dragging {
  cursor: move;
}

.drag-node {
  cursor: crosshair;
}

/*tooltip*/
g.tooltip > rect {
  /*#31e8e5;*/
  fill: #9de8e7;
  stroke: #3bab68;
  stroke-width: 1;
  /*fill-opacity: 0.5; too light*/
  fill-opacity: 0.9;
  stroke-opacity: 0.9;
}

g.tooltip > text {
  fill: #656262;
  /*color: black;
		fill-opacity: 1;
		stroke-opacity: 1;*/
}

.hide {
  display: none;
}

/*selected*/

.ec.selected > [svg-type="body"] {
  stroke-width: 3px;
}

.ec.white.selected > [svg-type="body"] {
  fill: #f1efef;
}

.ec.green.selected > [svg-type="body"] {
  fill: #f1efef;
}

.ec.black.selected > [svg-type="body"] {
  fill: black;
}

/*missing*/

/************************ WIRE   ************************/

.wire > line,
.wire > polyline {
  stroke-width: 3px;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.wire.selected > line,
.wire.selected > polyline {
  stroke-width: 5px;
}

.wire.white > line {
  stroke: whitesmoke;
}

.wire.black > line,
.wire.black > polyline {
  stroke: rgb(82, 80, 80);
}

.wire.green > line,
.wire.green > polyline {
  stroke: #3cbf71;
}

.wire.red > line,
.wire.red > polyline {
  stroke: #fa646c;
}

.wire.blue > line,
.wire.blue > polyline {
  stroke: #479dee;
}

.wire.yellow > line,
.wire.yellow > polyline {
  stroke: #e6e614;
}

.wire.orange > line,
.wire.orange > polyline {
  stroke: orange;
}

.wire.purple > line {
  stroke: purple;
}

.wire.brown > line,
.wire.brown > polyline {
  stroke: brown;
}

.wire.aqua > line,
.wire.aqua > polyline {
  stroke: aqua;
}

.wire.bisque > line,
.wire.bisque > polyline {
  stroke: bisque;
}

.wire.navy > line,
.wire.navy > polyline {
  stroke: navy;
}

.wire.teal > line,
.wire.teal > polyline {
  stroke: teal;
}

.wire.violet > line,
.wire.violet > polyline {
  stroke: violet;
}

.wire > line:hover,
.wire > polyline:hover,
.wire.selected > line {
  /*stroke: black;
	filter: brightness(60%) sepia(100%);
	stroke-dasharray: 10 10;*/
  opacity: 0.9;
  stroke-width: 7px; /*12px;*/
}

.wire.wiring > line:hover,
.wire.wiring > polyline:hover {
  stroke-width: initial !important;
}

/*.wire.wiring > line:hover,
.wire.wiring > polyline:hover {
  stroke-width: 3px;
}*/

/*.wire:hover {
					  stroke: rgb(0, 255, 0);
					  stroke-width: 10px;
					}*/

/************************ beautiful scroll bar  ************************/

.scroll-rgt {
  overflow-y: scroll;
}

.scroll-rgt::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  border-radius: 5px;
  background-color: #f5f5f5;
}

.scroll-rgt::-webkit-scrollbar {
  width: 5px;
  background-color: #f5f5f5;
}

.scroll-rgt::-webkit-scrollbar-thumb {
  border-radius: 10px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  background-color: #555;
}

/***************************************************************************************/

.no-select {
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
  user-select: none;
}
.bar {
  background: #3988ce; /* fallback for old browsers */
}

.bar-group {
  height: 100%;
}

.bar-item {
  margin: 0;
  padding: 7px 8px 7px 8px;
  border-right: 1px solid #5d98d4;
  color: white;
  line-height: 26px;
  height: 100%;
}

.bar-item * {
  vertical-align: middle; /* parent must have height: 100%  px em   https://stackoverflow.com/questions/7273338/how-to-vertically-align-an-image-inside-a-div*/
}

.bar-item.link {
  cursor: pointer;
}

.bar-item.selected {
  background: #2464a7; /*cadetblue;*/
}

.bar-item.link:hover {
  /*opacity: 0.6;*/
  background: #73b2eb;
}

.select-css select {
  padding: 0px 10px;
  /*appearance: none;
	  -webkit-appearance: none;  hides arrow*/
  color: #fff;
  /* display: block; */
  font-size: 16px;
  font-family: sans-serif;
  background: #3988ce;
  border: none !important;
  line-height: normal;
}
.select-css > select > option::select {
  background-color: #96dcdc !important;
}
.select-css select:hover {
  /*   filter: invert(100%);
	  color:#bdc6c0;
	  */
  background-color: #2275bf;
}
.select-css select option:checked {
  background-color: white;
  color: black;
}
.select-css select:focus {
  outline: none;
}
select:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
.bar-item > input {
  background-color: #3988ce;
  color: white;
  border: 1px solid #5d98d4;
  padding: 0px 7px;
  width: 70px;
}
#rot-lbl {
  width: 35px;
  display: inline-block;
  text-align: center;
}

/********************  BASE WINDOW ********************/

div.win {
  /*min-width: 100px;
  min-height: 100px;*/
  position: absolute;
  border: 1px solid #d6d3d3;
  display: flex;
  flex-direction: column;
  background-color: #f1f1f1;
  color: black;
}

div.win.hide {
  display: none;
}

/********************  APP WINDOW ********************/

div.win.props.collapsed {
  height: 20px !important;
}

/* HEADER */
div.win.props > header {
  background-color: #3988ce;
  color: white;
  position: relative;
  line-height: 18px;
}
div.win.props > header > .title {
  padding: 2px 6px;
}

div.win.props.selected > header {
  background-color: #17609f;
}

div.win.props.collapsed > main,
div.win.props.collapsed > footer {
  display: none;
}

div.win.props > header.dragging {
  cursor: move;
}

/* HEADER Title */
div.win.props > header > div:nth-of-type(1) {
  font-size: 14px;
}

/* HEADER buttons */
div.win.props > header > div:nth-of-type(2) {
  position: absolute;
  top: 2px;
  right: 2px;
}

div.win.props > header > div > img,
div.win.props > footer > div > img {
  /* float: right;*/
  cursor: pointer;
}

div.win.props > header > div:nth-of-type(2) > img:nth-of-type(1) {
  /*content: url(../img/arrow-up-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/arrow-up-16x16.png);
}

div.win.props.collapsed > header > div:nth-of-type(2) > img:nth-of-type(1) {
  /*content: url(../img/arrow-down-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/arrow-down-16x16.png);
}

div.win.props > header > div:nth-of-type(2) > img:nth-of-type(2) {
  /*content: url(../img/close-p3-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/close-p3-16x16.png);
}

div.win.props > header > div:nth-of-type(2) > img:hover {
  background-color: red;
}

/* MAIN */
div.win.props > main {
  height: 100%;
  /*width: 100%;*/
  flex: 1;
  margin: 0;
  padding: 4px;
}

div.win.props > main.hide {
  display: none;
}

div.win.props > main input {
  width: 80px;
  height: 16px;
}

.ec-container {
  margin: 6px 2px;
}

.ec-container > .label {
  background-color: #e7e5e5;
  padding: 1px;
  margin-right: 5px;
  border: 1px solid #d6d5d5;
}

.ec-container > .prop.readonly {
  background-color: white;
  padding: 2px 5px;
  border: 1px solid black;
}

.ec-container > .prop.simple {
  background-color: initial !important;
  border: none !important;
}

.ec-container > .prop.readonly:hover {
  cursor: not-allowed;
}

.ec-container > .prop.simple:hover {
  cursor: initial !important;
}

.ec-container > .rot {
  display: inline-block;
  background-color: #3988ce;
  padding: 1px 2px;
}

.rot > .prop {
  /* border: 1px solid gray; */
  padding: 1px 6px;
  color: white;
}

.rot > img {
  cursor: pointer;
}

/* FOOTER */
div.win.props > footer {
  background-color: white;
  margin: 0;
  font-size: 12px;
  padding: 2px 6px;
  border-top: 1px solid #d6d3d3;
  position: relative;
}

div.win.props > footer.hide {
  display: none;
}

/* HEADER Title */
div.win.props > footer > span {
  font-size: 14px;
}

/* HEADER buttons */
div.win.props > footer > div {
  position: absolute;
  top: 2px;
  right: 2px;
}

div.win.props > footer > div > img:nth-of-type(1) {
  /*content: url(../img/arrow-up-16x16.png); not fully supported yet Firefox*/
  background-image: url(../img/garbage-blk-p3.png);
}

div.win.props > footer > div > img:hover {
  background-color: #d0cfcf;
}

/**/
div.win.ctx > div {
  padding: 6px 8px;
  font-size: 14px;
}

div.win.ctx > div:hover {
  background-color: #bdbdbf;
  color: white;
  cursor: pointer;
}

div.win.ctx > div > span {
  color: #4b5661;
}

div.win.ctx > div > span.right {
  float: right;
}

/*   */
div.win.ctx > div[disabled] {
  background-color: #ececec;
}
div.win.ctx > div[disabled] > span {
  color: #c7c3c3;
}
/*div.win.ctx > div[disabled]:hover {
  cursor: not-allowed;
}*/

/*   */
.expandable {
  display: inline-block;
}

.expandable > span > i {
  display: none;
  color: #e9e9ed;
}

.expandable:hover * {
  display: inline;
}

line.dash {
  stroke: rgb(150, 150, 150);
  stroke-width: 1px;
}
